!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=24)}([function(e,t,n){"use strict";e.exports=n(12)},function(e,t,n){e.exports=n(16)()},function(e,t,n){"use strict";e.exports=function(){}},function(e,t,n){"use strict";e.exports=function(e,t,n,r,o,i,a,l){if(!e){var u;if(void 0===t)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,o,i,a,l],s=0;(u=new Error(t.replace(/%s/g,function(){return c[s++]}))).name="Invariant Violation"}throw u.framesToPop=1,u}}},function(e,t,n){"use strict";var r=function(){};e.exports=r},,function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,l=function(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var c in n=Object(arguments[u]))o.call(n,c)&&(l[c]=n[c]);if(r){a=r(n);for(var s=0;s<a.length;s++)i.call(n,a[s])&&(l[a[s]]=n[a[s]])}}return l}},function(e,t){e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=function(e){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(e))))+" */"}(r),i=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[n].concat(i).concat([o]).join("\n")}return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var i=this[o][0];"number"==typeof i&&(r[i]=!0)}for(o=0;o<e.length;o++){var a=e[o];"number"==typeof a[0]&&r[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),t.push(a))}},t}},function(e,t,n){var r={},o=function(e){var t;return function(){return void 0===t&&(t=e.apply(this,arguments)),t}}(function(){return window&&document&&document.all&&!window.atob}),i=function(e){var t={};return function(e,n){if("function"==typeof e)return e();if(void 0===t[e]){var r=function(e,t){return t?t.querySelector(e):document.querySelector(e)}.call(this,e,n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}}(),a=null,l=0,u=[],c=n(21);function s(e,t){for(var n=0;n<e.length;n++){var o=e[n],i=r[o.id];if(i){i.refs++;for(var a=0;a<i.parts.length;a++)i.parts[a](o.parts[a]);for(;a<o.parts.length;a++)i.parts.push(y(o.parts[a],t))}else{var l=[];for(a=0;a<o.parts.length;a++)l.push(y(o.parts[a],t));r[o.id]={id:o.id,refs:1,parts:l}}}}function f(e,t){for(var n=[],r={},o=0;o<e.length;o++){var i=e[o],a=t.base?i[0]+t.base:i[0],l={css:i[1],media:i[2],sourceMap:i[3]};r[a]?r[a].parts.push(l):n.push(r[a]={id:a,parts:[l]})}return n}function p(e,t){var n=i(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=u[u.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),u.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=i(e.insertAt.before,n);n.insertBefore(t,o)}}function d(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=u.indexOf(e);t>=0&&u.splice(t,1)}function h(e){var t=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var r=function(){0;return n.nc}();r&&(e.attrs.nonce=r)}return m(t,e.attrs),p(e,t),t}function m(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function y(e,t){var n,r,o,i;if(t.transform&&e.css){if(!(i="function"==typeof t.transform?t.transform(e.css):t.transform.default(e.css)))return function(){};e.css=i}if(t.singleton){var u=l++;n=a||(a=h(t)),r=g.bind(null,n,u,!1),o=g.bind(null,n,u,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",m(t,e.attrs),p(e,t),t}(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,i=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||i)&&(r=c(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var a=new Blob([r],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(a),l&&URL.revokeObjectURL(l)}.bind(null,n,t),o=function(){d(n),n.href&&URL.revokeObjectURL(n.href)}):(n=h(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){d(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=o()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=f(e,t);return s(n,t),function(e){for(var o=[],i=0;i<n.length;i++){var a=n[i];(l=r[a.id]).refs--,o.push(l)}e&&s(f(e,t),t);for(i=0;i<o.length;i++){var l;if(0===(l=o[i]).refs){for(var u=0;u<l.parts.length;u++)l.parts[u]();delete r[l.id]}}}};var v=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}();function g(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=v(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(13)},function(e,t,n){var r=n(18);e.exports=h,e.exports.parse=i,e.exports.compile=function(e,t){return u(i(e,t))},e.exports.tokensToFunction=u,e.exports.tokensToRegExp=d;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,t){for(var n,r=[],i=0,a=0,l="",u=t&&t.delimiter||"/";null!=(n=o.exec(e));){var f=n[0],p=n[1],d=n.index;if(l+=e.slice(a,d),a=d+f.length,p)l+=p[1];else{var h=e[a],m=n[2],y=n[3],v=n[4],g=n[5],b=n[6],w=n[7];l&&(r.push(l),l="");var x=null!=m&&null!=h&&h!==m,k="+"===b||"*"===b,E="?"===b||"*"===b,T=n[2]||u,_=v||g;r.push({name:y||i++,prefix:m||"",delimiter:T,optional:E,repeat:k,partial:x,asterisk:!!w,pattern:_?s(_):w?".*":"[^"+c(T)+"]+?"})}}return a<e.length&&(l+=e.substr(a)),l&&r.push(l),r}function a(e){return encodeURI(e).replace(/[\/?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function l(e){return encodeURI(e).replace(/[?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function u(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^(?:"+e[n].pattern+")$"));return function(n,o){for(var i="",u=n||{},c=(o||{}).pretty?a:encodeURIComponent,s=0;s<e.length;s++){var f=e[s];if("string"!=typeof f){var p,d=u[f.name];if(null==d){if(f.optional){f.partial&&(i+=f.prefix);continue}throw new TypeError('Expected "'+f.name+'" to be defined')}if(r(d)){if(!f.repeat)throw new TypeError('Expected "'+f.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(f.optional)continue;throw new TypeError('Expected "'+f.name+'" to not be empty')}for(var h=0;h<d.length;h++){if(p=c(d[h]),!t[s].test(p))throw new TypeError('Expected all "'+f.name+'" to match "'+f.pattern+'", but received `'+JSON.stringify(p)+"`");i+=(0===h?f.prefix:f.delimiter)+p}}else{if(p=f.asterisk?l(d):c(d),!t[s].test(p))throw new TypeError('Expected "'+f.name+'" to match "'+f.pattern+'", but received "'+p+'"');i+=f.prefix+p}}else i+=f}return i}}function c(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function f(e,t){return e.keys=t,e}function p(e){return e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,a="",l=0;l<e.length;l++){var u=e[l];if("string"==typeof u)a+=c(u);else{var s=c(u.prefix),d="(?:"+u.pattern+")";t.push(u),u.repeat&&(d+="(?:"+s+d+")*"),a+=d=u.optional?u.partial?s+"("+d+")?":"(?:"+s+"("+d+"))?":s+"("+d+")"}}var h=c(n.delimiter||"/"),m=a.slice(-h.length)===h;return o||(a=(m?a.slice(0,-h.length):a)+"(?:"+h+"(?=$))?"),a+=i?"$":o&&m?"":"(?="+h+"|$)",f(new RegExp("^"+a,p(n)),t)}function h(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return f(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(h(e[o],t,n).source);return f(new RegExp("(?:"+r.join("|")+")",p(n)),t)}(e,t,n):function(e,t,n){return d(i(e,n),t,n)}(e,t,n)}},function(e,t,n){"use strict";var r=function(){};e.exports=r},function(e,t,n){"use strict";
/** @license React v16.6.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(6),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,p=o?Symbol.for("react.concurrent_mode"):60111,d=o?Symbol.for("react.forward_ref"):60112,h=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,y=o?Symbol.for("react.lazy"):60116,v="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,a,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,i,a,l],c=0;(e=Error(t.replace(/%s/g,function(){return u[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},w={};function x(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}function k(){}function E(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}x.prototype.isReactComponent={},x.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&g("85"),this.updater.enqueueSetState(this,e,t,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=x.prototype;var T=E.prototype=new k;T.constructor=E,r(T,x.prototype),T.isPureReactComponent=!0;var _={current:null,currentDispatcher:null},C=Object.prototype.hasOwnProperty,S={key:!0,ref:!0,__self:!0,__source:!0};function P(e,t,n){var r=void 0,o={},a=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(a=""+t.key),t)C.call(t,r)&&!S.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:a,ref:l,props:o,_owner:_.current}}function O(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var N=/\/+/g,R=[];function j(e,t,n,r){if(R.length){var o=R.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function M(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>R.length&&R.push(e)}function I(e,t,n){return null==e?0:function e(t,n,r,o){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var u=!1;if(null===t)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case i:case a:u=!0}}if(u)return r(o,t,""===n?"."+U(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+U(l=t[c],c);u+=e(l,s,r,o)}else if(s=null===t||"object"!=typeof t?null:"function"==typeof(s=v&&t[v]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),c=0;!(l=t.next()).done;)u+=e(l=l.value,s=n+U(l,c++),r,o);else"object"===l&&g("31","[object Object]"==(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return u}(e,"",t,n)}function U(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function A(e,t){e.func.call(e.context,t,e.count++)}function z(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?F(e,r,n,function(e){return e}):null!=e&&(O(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(N,"$&/")+"/")+n)),r.push(e))}function F(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(N,"$&/")+"/"),I(e,z,t=j(t,i,r,o)),M(t)}var L={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return F(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;I(e,A,t=j(null,null,t,n)),M(t)},count:function(e){return I(e,function(){return null},null)},toArray:function(e){var t=[];return F(e,t,null,function(e){return e}),t},only:function(e){return O(e)||g("143"),e}},createRef:function(){return{current:null}},Component:x,PureComponent:E,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:d,render:e}},lazy:function(e){return{$$typeof:y,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},Fragment:l,StrictMode:u,Suspense:h,createElement:P,cloneElement:function(e,t,n){(null===e||void 0===e)&&g("267",e);var o=void 0,a=r({},e.props),l=e.key,u=e.ref,c=e._owner;if(null!=t){void 0!==t.ref&&(u=t.ref,c=_.current),void 0!==t.key&&(l=""+t.key);var s=void 0;for(o in e.type&&e.type.defaultProps&&(s=e.type.defaultProps),t)C.call(t,o)&&!S.hasOwnProperty(o)&&(a[o]=void 0===t[o]&&void 0!==s?s[o]:t[o])}if(1===(o=arguments.length-2))a.children=n;else if(1<o){s=Array(o);for(var f=0;f<o;f++)s[f]=arguments[f+2];a.children=s}return{$$typeof:i,type:e.type,key:l,ref:u,props:a,_owner:c}},createFactory:function(e){var t=P.bind(null,e);return t.type=e,t},isValidElement:O,version:"16.6.3",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:_,assign:r}};L.unstable_ConcurrentMode=p,L.unstable_Profiler=c;var D={default:L},W=D&&L||D;e.exports=W.default||W},function(e,t,n){"use strict";
/** @license React v16.6.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(6),i=n(14);function a(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,a,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,i,a,l],c=0;(e=Error(t.replace(/%s/g,function(){return u[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||a("227");var l=!1,u=null,c=!1,s=null,f={onError:function(e){l=!0,u=e}};function p(e,t,n,r,o,i,a,c,s){l=!1,u=null,function(e,t,n,r,o,i,a,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}.apply(f,arguments)}var d=null,h={};function m(){if(d)for(var e in h){var t=h[e],n=d.indexOf(e);if(-1<n||a("96",e),!v[n])for(var r in t.extractEvents||a("97",e),v[n]=t,n=t.eventTypes){var o=void 0,i=n[r],l=t,u=r;g.hasOwnProperty(u)&&a("99",u),g[u]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&y(c[o],l,u);o=!0}else i.registrationName?(y(i.registrationName,l,u),o=!0):o=!1;o||a("98",r,e)}}}function y(e,t,n){b[e]&&a("100",e),b[e]=t,w[e]=t.eventTypes[n].dependencies}var v=[],g={},b={},w={},x=null,k=null,E=null;function T(e,t,n){var r=e.type||"unknown-event";e.currentTarget=E(n),function(e,t,n,r,o,i,f,d,h){if(p.apply(this,arguments),l){if(l){var m=u;l=!1,u=null}else a("198"),m=void 0;c||(c=!0,s=m)}}(r,t,void 0,e),e.currentTarget=null}function _(e,t){return null==t&&a("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function C(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var S=null;function P(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)T(e,t[r],n[r]);else t&&T(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var O={injectEventPluginOrder:function(e){d&&a("101"),d=Array.prototype.slice.call(e),m()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];h.hasOwnProperty(t)&&h[t]===r||(h[t]&&a("102",t),h[t]=r,n=!0)}n&&m()}};function N(e,t){var n=e.stateNode;if(!n)return null;var r=x(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&a("231",t,typeof n),n)}function R(e){if(null!==e&&(S=_(S,e)),e=S,S=null,e&&(C(e,P),S&&a("95"),c))throw e=s,c=!1,s=null,e}var j=Math.random().toString(36).slice(2),M="__reactInternalInstance$"+j,I="__reactEventHandlers$"+j;function U(e){if(e[M])return e[M];for(;!e[M];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[M]).tag||6===e.tag?e:null}function A(e){return!(e=e[M])||5!==e.tag&&6!==e.tag?null:e}function z(e){if(5===e.tag||6===e.tag)return e.stateNode;a("33")}function F(e){return e[I]||null}function L(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function D(e,t,n){(t=N(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=_(n._dispatchListeners,t),n._dispatchInstances=_(n._dispatchInstances,e))}function W(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=L(t);for(t=n.length;0<t--;)D(n[t],"captured",e);for(t=0;t<n.length;t++)D(n[t],"bubbled",e)}}function B(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=N(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=_(n._dispatchListeners,t),n._dispatchInstances=_(n._dispatchInstances,e))}function V(e){e&&e.dispatchConfig.registrationName&&B(e._targetInst,null,e)}function $(e){C(e,W)}var H=!("undefined"==typeof window||!window.document||!window.document.createElement);function q(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Y={animationend:q("Animation","AnimationEnd"),animationiteration:q("Animation","AnimationIteration"),animationstart:q("Animation","AnimationStart"),transitionend:q("Transition","TransitionEnd")},K={},Q={};function X(e){if(K[e])return K[e];if(!Y[e])return e;var t,n=Y[e];for(t in n)if(n.hasOwnProperty(t)&&t in Q)return K[e]=n[t];return e}H&&(Q=document.createElement("div").style,"AnimationEvent"in window||(delete Y.animationend.animation,delete Y.animationiteration.animation,delete Y.animationstart.animation),"TransitionEvent"in window||delete Y.transitionend.transition);var G=X("animationend"),J=X("animationiteration"),Z=X("animationstart"),ee=X("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ne=null,re=null,oe=null;function ie(){if(oe)return oe;var e,t,n=re,r=n.length,o="value"in ne?ne.value:ne.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return oe=o.slice(e,1<t?1-t:void 0)}function ae(){return!0}function le(){return!1}function ue(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ae:le,this.isPropagationStopped=le,this}function ce(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function se(e){e instanceof this||a("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function fe(e){e.eventPool=[],e.getPooled=ce,e.release=se}o(ue.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ae)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ae)},persist:function(){this.isPersistent=ae},isPersistent:le,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=le,this._dispatchInstances=this._dispatchListeners=null}}),ue.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},ue.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,fe(n),n},fe(ue);var pe=ue.extend({data:null}),de=ue.extend({data:null}),he=[9,13,27,32],me=H&&"CompositionEvent"in window,ye=null;H&&"documentMode"in document&&(ye=document.documentMode);var ve=H&&"TextEvent"in window&&!ye,ge=H&&(!me||ye&&8<ye&&11>=ye),be=String.fromCharCode(32),we={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},xe=!1;function ke(e,t){switch(e){case"keyup":return-1!==he.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Ee(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Te=!1;var _e={eventTypes:we,extractEvents:function(e,t,n,r){var o=void 0,i=void 0;if(me)e:{switch(e){case"compositionstart":o=we.compositionStart;break e;case"compositionend":o=we.compositionEnd;break e;case"compositionupdate":o=we.compositionUpdate;break e}o=void 0}else Te?ke(e,n)&&(o=we.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=we.compositionStart);return o?(ge&&"ko"!==n.locale&&(Te||o!==we.compositionStart?o===we.compositionEnd&&Te&&(i=ie()):(re="value"in(ne=r)?ne.value:ne.textContent,Te=!0)),o=pe.getPooled(o,t,n,r),i?o.data=i:null!==(i=Ee(n))&&(o.data=i),$(o),i=o):i=null,(e=ve?function(e,t){switch(e){case"compositionend":return Ee(t);case"keypress":return 32!==t.which?null:(xe=!0,be);case"textInput":return(e=t.data)===be&&xe?null:e;default:return null}}(e,n):function(e,t){if(Te)return"compositionend"===e||!me&&ke(e,t)?(e=ie(),oe=re=ne=null,Te=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return ge&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=de.getPooled(we.beforeInput,t,n,r)).data=e,$(t)):t=null,null===i?t:null===t?i:[i,t]}},Ce=null,Se=null,Pe=null;function Oe(e){if(e=k(e)){"function"!=typeof Ce&&a("280");var t=x(e.stateNode);Ce(e.stateNode,e.type,t)}}function Ne(e){Se?Pe?Pe.push(e):Pe=[e]:Se=e}function Re(){if(Se){var e=Se,t=Pe;if(Pe=Se=null,Oe(e),t)for(e=0;e<t.length;e++)Oe(t[e])}}function je(e,t){return e(t)}function Me(e,t,n){return e(t,n)}function Ie(){}var Ue=!1;function Ae(e,t){if(Ue)return e(t);Ue=!0;try{return je(e,t)}finally{Ue=!1,(null!==Se||null!==Pe)&&(Ie(),Re())}}var ze={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Fe(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!ze[e.type]:"textarea"===t}function Le(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function De(e){if(!H)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function We(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Be(e){e._valueTracker||(e._valueTracker=function(e){var t=We(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Ve(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=We(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var $e=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,He=/^(.*)[\\\/]/,qe="function"==typeof Symbol&&Symbol.for,Ye=qe?Symbol.for("react.element"):60103,Ke=qe?Symbol.for("react.portal"):60106,Qe=qe?Symbol.for("react.fragment"):60107,Xe=qe?Symbol.for("react.strict_mode"):60108,Ge=qe?Symbol.for("react.profiler"):60114,Je=qe?Symbol.for("react.provider"):60109,Ze=qe?Symbol.for("react.context"):60110,et=qe?Symbol.for("react.concurrent_mode"):60111,tt=qe?Symbol.for("react.forward_ref"):60112,nt=qe?Symbol.for("react.suspense"):60113,rt=qe?Symbol.for("react.memo"):60115,ot=qe?Symbol.for("react.lazy"):60116,it="function"==typeof Symbol&&Symbol.iterator;function at(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=it&&e[it]||e["@@iterator"])?e:null}function lt(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case et:return"ConcurrentMode";case Qe:return"Fragment";case Ke:return"Portal";case Ge:return"Profiler";case Xe:return"StrictMode";case nt:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case Ze:return"Context.Consumer";case Je:return"Context.Provider";case tt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case rt:return lt(e.type);case ot:if(e=1===e._status?e._result:null)return lt(e)}return null}function ut(e){var t="";do{e:switch(e.tag){case 2:case 16:case 0:case 1:case 5:case 8:case 13:var n=e._debugOwner,r=e._debugSource,o=lt(e.type),i=null;n&&(i=lt(n.type)),n=o,o="",r?o=" (at "+r.fileName.replace(He,"")+":"+r.lineNumber+")":i&&(o=" (created by "+i+")"),i="\n    in "+(n||"Unknown")+o;break e;default:i=""}t+=i,e=e.return}while(e);return t}var ct=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,st=Object.prototype.hasOwnProperty,ft={},pt={};function dt(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var ht={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){ht[e]=new dt(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];ht[t]=new dt(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){ht[e]=new dt(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){ht[e]=new dt(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){ht[e]=new dt(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){ht[e]=new dt(e,3,!0,e,null)}),["capture","download"].forEach(function(e){ht[e]=new dt(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){ht[e]=new dt(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){ht[e]=new dt(e,5,!1,e.toLowerCase(),null)});var mt=/[\-:]([a-z])/g;function yt(e){return e[1].toUpperCase()}function vt(e,t,n,r){var o=ht.hasOwnProperty(t)?ht[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null===t||void 0===t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!st.call(pt,e)||!st.call(ft,e)&&(ct.test(e)?pt[e]=!0:(ft[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function gt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function bt(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function wt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=gt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function xt(e,t){null!=(t=t.checked)&&vt(e,"checked",t,!1)}function kt(e,t){xt(e,t);var n=gt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Tt(e,t.type,n):t.hasOwnProperty("defaultValue")&&Tt(e,t.type,gt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Et(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Tt(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(mt,yt);ht[t]=new dt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(mt,yt);ht[t]=new dt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(mt,yt);ht[t]=new dt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),ht.tabIndex=new dt("tabIndex",1,!1,"tabindex",null);var _t={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Ct(e,t,n){return(e=ue.getPooled(_t.change,e,t,n)).type="change",Ne(n),$(e),e}var St=null,Pt=null;function Ot(e){R(e)}function Nt(e){if(Ve(z(e)))return e}function Rt(e,t){if("change"===e)return t}var jt=!1;function Mt(){St&&(St.detachEvent("onpropertychange",It),Pt=St=null)}function It(e){"value"===e.propertyName&&Nt(Pt)&&Ae(Ot,e=Ct(Pt,e,Le(e)))}function Ut(e,t,n){"focus"===e?(Mt(),Pt=n,(St=t).attachEvent("onpropertychange",It)):"blur"===e&&Mt()}function At(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Nt(Pt)}function zt(e,t){if("click"===e)return Nt(t)}function Ft(e,t){if("input"===e||"change"===e)return Nt(t)}H&&(jt=De("input")&&(!document.documentMode||9<document.documentMode));var Lt={eventTypes:_t,_isInputEventSupported:jt,extractEvents:function(e,t,n,r){var o=t?z(t):window,i=void 0,a=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?i=Rt:Fe(o)?jt?i=Ft:(i=At,a=Ut):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=zt),i&&(i=i(e,t)))return Ct(i,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Tt(o,"number",o.value)}},Dt=ue.extend({view:null,detail:null}),Wt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Bt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Wt[e])&&!!t[e]}function Vt(){return Bt}var $t=0,Ht=0,qt=!1,Yt=!1,Kt=Dt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Vt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=$t;return $t=e.screenX,qt?"mousemove"===e.type?e.screenX-t:0:(qt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Ht;return Ht=e.screenY,Yt?"mousemove"===e.type?e.screenY-t:0:(Yt=!0,0)}}),Qt=Kt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Xt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Gt={eventTypes:Xt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!i&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=t,t=(t=n.relatedTarget||n.toElement)?U(t):null):i=null,i===t)return null;var a=void 0,l=void 0,u=void 0,c=void 0;"mouseout"===e||"mouseover"===e?(a=Kt,l=Xt.mouseLeave,u=Xt.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(a=Qt,l=Xt.pointerLeave,u=Xt.pointerEnter,c="pointer");var s=null==i?o:z(i);if(o=null==t?o:z(t),(e=a.getPooled(l,i,n,r)).type=c+"leave",e.target=s,e.relatedTarget=o,(n=a.getPooled(u,t,n,r)).type=c+"enter",n.target=o,n.relatedTarget=s,r=t,i&&r)e:{for(o=r,c=0,a=t=i;a;a=L(a))c++;for(a=0,u=o;u;u=L(u))a++;for(;0<c-a;)t=L(t),c--;for(;0<a-c;)o=L(o),a--;for(;c--;){if(t===o||t===o.alternate)break e;t=L(t),o=L(o)}t=null}else t=null;for(o=t,t=[];i&&i!==o&&(null===(c=i.alternate)||c!==o);)t.push(i),i=L(i);for(i=[];r&&r!==o&&(null===(c=r.alternate)||c!==o);)i.push(r),r=L(r);for(r=0;r<t.length;r++)B(t[r],"bubbled",e);for(r=i.length;0<r--;)B(i[r],"captured",n);return[e,n]}},Jt=Object.prototype.hasOwnProperty;function Zt(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}function en(e,t){if(Zt(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Jt.call(t,n[r])||!Zt(e[n[r]],t[n[r]]))return!1;return!0}function tn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function nn(e){2!==tn(e)&&a("188")}function rn(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=tn(e))&&a("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,i=o?o.alternate:null;if(!o||!i)break;if(o.child===i.child){for(var l=o.child;l;){if(l===n)return nn(o),e;if(l===r)return nn(o),t;l=l.sibling}a("188")}if(n.return!==r.return)n=o,r=i;else{l=!1;for(var u=o.child;u;){if(u===n){l=!0,n=o,r=i;break}if(u===r){l=!0,r=o,n=i;break}u=u.sibling}if(!l){for(u=i.child;u;){if(u===n){l=!0,n=i,r=o;break}if(u===r){l=!0,r=i,n=o;break}u=u.sibling}l||a("189")}}n.alternate!==r&&a("190")}return 3!==n.tag&&a("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var on=ue.extend({animationName:null,elapsedTime:null,pseudoElement:null}),an=ue.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),ln=Dt.extend({relatedTarget:null});function un(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var cn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},fn=Dt.extend({key:function(e){if(e.key){var t=cn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=un(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?sn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Vt,charCode:function(e){return"keypress"===e.type?un(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?un(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),pn=Kt.extend({dataTransfer:null}),dn=Dt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Vt}),hn=ue.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),mn=Kt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),yn=[["abort","abort"],[G,"animationEnd"],[J,"animationIteration"],[Z,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],vn={},gn={};function bn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},vn[e]=t,gn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){bn(e,!0)}),yn.forEach(function(e){bn(e,!1)});var wn={eventTypes:vn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=gn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=gn[e];if(!o)return null;switch(e){case"keypress":if(0===un(n))return null;case"keydown":case"keyup":e=fn;break;case"blur":case"focus":e=ln;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Kt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=pn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=dn;break;case G:case J:case Z:e=on;break;case ee:e=hn;break;case"scroll":e=Dt;break;case"wheel":e=mn;break;case"copy":case"cut":case"paste":e=an;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Qt;break;default:e=ue}return $(t=e.getPooled(o,t,n,r)),t}},xn=wn.isInteractiveTopLevelEventType,kn=[];function En(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=U(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=Le(e.nativeEvent);r=e.topLevelType;for(var i=e.nativeEvent,a=null,l=0;l<v.length;l++){var u=v[l];u&&(u=u.extractEvents(r,t,i,o))&&(a=_(a,u))}R(a)}}var Tn=!0;function _n(e,t){if(!t)return null;var n=(xn(e)?Sn:Pn).bind(null,e);t.addEventListener(e,n,!1)}function Cn(e,t){if(!t)return null;var n=(xn(e)?Sn:Pn).bind(null,e);t.addEventListener(e,n,!0)}function Sn(e,t){Me(Pn,e,t)}function Pn(e,t){if(Tn){var n=Le(t);if(null===(n=U(n))||"number"!=typeof n.tag||2===tn(n)||(n=null),kn.length){var r=kn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Ae(En,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>kn.length&&kn.push(e)}}}var On={},Nn=0,Rn="_reactListenersID"+(""+Math.random()).slice(2);function jn(e){return Object.prototype.hasOwnProperty.call(e,Rn)||(e[Rn]=Nn++,On[e[Rn]]={}),On[e[Rn]]}function Mn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function In(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Un(e,t){var n,r=In(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=In(r)}}function An(){for(var e=window,t=Mn();t instanceof e.HTMLIFrameElement;){try{e=t.contentDocument.defaultView}catch(e){break}t=Mn(e.document)}return t}function zn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var Fn=H&&"documentMode"in document&&11>=document.documentMode,Ln={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Dn=null,Wn=null,Bn=null,Vn=!1;function $n(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Vn||null==Dn||Dn!==Mn(n)?null:("selectionStart"in(n=Dn)&&zn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Bn&&en(Bn,n)?null:(Bn=n,(e=ue.getPooled(Ln.select,Wn,e,t)).type="select",e.target=Dn,$(e),e))}var Hn={eventTypes:Ln,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=jn(i),o=w.onSelect;for(var a=0;a<o.length;a++){var l=o[a];if(!i.hasOwnProperty(l)||!i[l]){i=!1;break e}}i=!0}o=!i}if(o)return null;switch(i=t?z(t):window,e){case"focus":(Fe(i)||"true"===i.contentEditable)&&(Dn=i,Wn=t,Bn=null);break;case"blur":Bn=Wn=Dn=null;break;case"mousedown":Vn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Vn=!1,$n(n,r);case"selectionchange":if(Fn)break;case"keydown":case"keyup":return $n(n,r)}return null}};function qn(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function Yn(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+gt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Kn(e,t){return null!=t.dangerouslySetInnerHTML&&a("91"),o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Qn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&a("92"),Array.isArray(t)&&(1>=t.length||a("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:gt(n)}}function Xn(e,t){var n=gt(t.value),r=gt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Gn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}O.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x=F,k=A,E=z,O.injectEventPluginsByName({SimpleEventPlugin:wn,EnterLeaveEventPlugin:Gt,ChangeEventPlugin:Lt,SelectEventPlugin:Hn,BeforeInputEventPlugin:_e});var Jn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function Zn(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function er(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Zn(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var tr=void 0,nr=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction(function(){return e(t,n)})}:e}(function(e,t){if(e.namespaceURI!==Jn.svg||"innerHTML"in e)e.innerHTML=t;else{for((tr=tr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=tr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function rr(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var or={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ir=["Webkit","ms","Moz","O"];function ar(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||or.hasOwnProperty(e)&&or[e]?(""+t).trim():t+"px"}function lr(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=ar(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(or).forEach(function(e){ir.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),or[t]=or[e]})});var ur=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function cr(e,t){t&&(ur[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&a("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&a("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||a("61")),null!=t.style&&"object"!=typeof t.style&&a("62",""))}function sr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function fr(e,t){var n=jn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=w[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":Cn("scroll",e);break;case"focus":case"blur":Cn("focus",e),Cn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":De(o)&&Cn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(o)&&_n(o,e)}n[o]=!0}}}function pr(){}var dr=null,hr=null;function mr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function yr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var vr="function"==typeof setTimeout?setTimeout:void 0,gr="function"==typeof clearTimeout?clearTimeout:void 0;function br(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function wr(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var xr=[],kr=-1;function Er(e){0>kr||(e.current=xr[kr],xr[kr]=null,kr--)}function Tr(e,t){xr[++kr]=e.current,e.current=t}var _r={},Cr={current:_r},Sr={current:!1},Pr=_r;function Or(e,t){var n=e.type.contextTypes;if(!n)return _r;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function Nr(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Rr(e){Er(Sr),Er(Cr)}function jr(e){Er(Sr),Er(Cr)}function Mr(e,t,n){Cr.current!==_r&&a("168"),Tr(Cr,t),Tr(Sr,n)}function Ir(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())i in e||a("108",lt(t)||"Unknown",i);return o({},n,r)}function Ur(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||_r,Pr=Cr.current,Tr(Cr,t),Tr(Sr,Sr.current),!0}function Ar(e,t,n){var r=e.stateNode;r||a("169"),n?(t=Ir(e,t,Pr),r.__reactInternalMemoizedMergedChildContext=t,Er(Sr),Er(Cr),Tr(Cr,t)):Er(Sr),Tr(Sr,n)}var zr=null,Fr=null;function Lr(e){return function(t){try{return e(t)}catch(e){}}}function Dr(e,t,n,r){return new function(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}(e,t,n,r)}function Wr(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Br(e,t){var n=e.alternate;return null===n?((n=Dr(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.firstContextDependency=e.firstContextDependency,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Vr(e,t,n,r,o,i){var l=2;if(r=e,"function"==typeof e)Wr(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case Qe:return $r(n.children,o,i,t);case et:return Hr(n,3|o,i,t);case Xe:return Hr(n,2|o,i,t);case Ge:return(e=Dr(12,n,t,4|o)).elementType=Ge,e.type=Ge,e.expirationTime=i,e;case nt:return(e=Dr(13,n,t,o)).elementType=nt,e.type=nt,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case Je:l=10;break e;case Ze:l=9;break e;case tt:l=11;break e;case rt:l=14;break e;case ot:l=16,r=null;break e}a("130",null==e?e:typeof e,"")}return(t=Dr(l,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function $r(e,t,n,r){return(e=Dr(7,e,r,t)).expirationTime=n,e}function Hr(e,t,n,r){return e=Dr(8,e,r,t),t=0==(1&t)?Xe:et,e.elementType=t,e.type=t,e.expirationTime=n,e}function qr(e,t,n){return(e=Dr(6,e,null,t)).expirationTime=n,e}function Yr(e,t,n){return(t=Dr(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Kr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),Gr(t,e)}function Qr(e,t){e.didError=!1;var n=e.latestPingedTime;0!==n&&n>=t&&(e.latestPingedTime=0),n=e.earliestPendingTime;var r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),Gr(t,e)}function Xr(e,t){var n=e.earliestPendingTime;return e=e.earliestSuspendedTime,n>t&&(t=n),e>t&&(t=e),t}function Gr(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,i=t.latestPingedTime;0===(o=0!==o?o:i)&&(0===e||r<e)&&(o=r),0!==(e=o)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}var Jr=!1;function Zr(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function eo(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function to(e){return{expirationTime:e,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function no(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function ro(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=Zr(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=Zr(e.memoizedState),o=n.updateQueue=Zr(n.memoizedState)):r=e.updateQueue=eo(o):null===o&&(o=n.updateQueue=eo(r));null===o||r===o?no(r,t):null===r.lastUpdate||null===o.lastUpdate?(no(r,t),no(o,t)):(no(r,t),o.lastUpdate=t)}function oo(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=Zr(e.memoizedState):io(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function io(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=eo(t)),t}function ao(e,t,n,r,i,a){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(a,r,i):e;case 3:e.effectTag=-2049&e.effectTag|64;case 0:if(null===(i="function"==typeof(e=n.payload)?e.call(a,r,i):e)||void 0===i)break;return o({},r,i);case 2:Jr=!0}return r}function lo(e,t,n,r,o){Jr=!1;for(var i=(t=io(e,t)).baseState,a=null,l=0,u=t.firstUpdate,c=i;null!==u;){var s=u.expirationTime;s<o?(null===a&&(a=u,i=c),l<s&&(l=s)):(c=ao(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(s=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f<o?(null===s&&(s=u,null===a&&(i=c)),l<f&&(l=f)):(c=ao(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===a&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===s&&(i=c),t.baseState=i,t.firstUpdate=a,t.firstCapturedUpdate=s,e.expirationTime=l,e.memoizedState=c}function uo(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),co(t.firstEffect,n),t.firstEffect=t.lastEffect=null,co(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function co(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&a("191",n),n.call(r)}e=e.nextEffect}}function so(e,t){return{value:e,source:t,stack:ut(t)}}var fo={current:null},po=null,ho=null,mo=null;function yo(e,t){var n=e.type._context;Tr(fo,n._currentValue),n._currentValue=t}function vo(e){var t=fo.current;Er(fo),e.type._context._currentValue=t}function go(e){po=e,mo=ho=null,e.firstContextDependency=null}function bo(e,t){return mo!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(mo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===ho?(null===po&&a("293"),po.firstContextDependency=ho=t):ho=ho.next=t),e._currentValue}var wo={},xo={current:wo},ko={current:wo},Eo={current:wo};function To(e){return e===wo&&a("174"),e}function _o(e,t){Tr(Eo,t),Tr(ko,e),Tr(xo,wo);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:er(null,"");break;default:t=er(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}Er(xo),Tr(xo,t)}function Co(e){Er(xo),Er(ko),Er(Eo)}function So(e){To(Eo.current);var t=To(xo.current),n=er(t,e.type);t!==n&&(Tr(ko,e),Tr(xo,n))}function Po(e){ko.current===e&&(Er(xo),Er(ko))}function Oo(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var No=$e.ReactCurrentOwner,Ro=(new r.Component).refs;function jo(e,t,n,r){n=null===(n=n(r,t=e.memoizedState))||void 0===n?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var Mo={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===tn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=ka(),o=to(r=Ki(r,e));o.payload=t,void 0!==n&&null!==n&&(o.callback=n),Vi(),ro(e,o),Gi(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=ka(),o=to(r=Ki(r,e));o.tag=1,o.payload=t,void 0!==n&&null!==n&&(o.callback=n),Vi(),ro(e,o),Gi(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=ka(),r=to(n=Ki(n,e));r.tag=2,void 0!==t&&null!==t&&(r.callback=t),Vi(),ro(e,r),Gi(e,n)}};function Io(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!en(n,r)||!en(o,i))}function Uo(e,t,n){var r=!1,o=_r,i=t.contextType;return"object"==typeof i&&null!==i?i=No.currentDispatcher.readContext(i):(o=Nr(t)?Pr:Cr.current,i=(r=null!==(r=t.contextTypes)&&void 0!==r)?Or(e,o):_r),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Mo,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function Ao(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Mo.enqueueReplaceState(t,t.state,null)}function zo(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=Ro;var i=t.contextType;"object"==typeof i&&null!==i?o.context=No.currentDispatcher.readContext(i):(i=Nr(t)?Pr:Cr.current,o.context=Or(e,i)),null!==(i=e.updateQueue)&&(lo(e,i,n,o,r),o.state=e.memoizedState),"function"==typeof(i=t.getDerivedStateFromProps)&&(jo(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&Mo.enqueueReplaceState(o,o.state,null),null!==(i=e.updateQueue)&&(lo(e,i,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var Fo=Array.isArray;function Lo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){var r=void 0;(n=n._owner)&&(1!==n.tag&&a("289"),r=n.stateNode),r||a("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===Ro&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&a("284"),n._owner||a("290",e)}return e}function Do(e,t){"textarea"!==e.type&&a("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function Wo(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Br(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=qr(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=Lo(e,t,n),r.return=e,r):((r=Vr(n.type,n.key,n.props,null,e.mode,r)).ref=Lo(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Yr(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=$r(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=qr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case Ye:return(n=Vr(t.type,t.key,t.props,null,e.mode,n)).ref=Lo(e,null,t),n.return=e,n;case Ke:return(t=Yr(t,e.mode,n)).return=e,t}if(Fo(t)||at(t))return(t=$r(t,e.mode,n,null)).return=e,t;Do(e,t)}return null}function d(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Ye:return n.key===o?n.type===Qe?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case Ke:return n.key===o?s(e,t,n,r):null}if(Fo(n)||at(n))return null!==o?null:f(e,t,n,r,null);Do(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Ye:return e=e.get(null===r.key?n:r.key)||null,r.type===Qe?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case Ke:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(Fo(r)||at(r))return f(t,e=e.get(n)||null,r,o,null);Do(t,r)}return null}function m(o,a,l,u){for(var c=null,s=null,f=a,m=a=0,y=null;null!==f&&m<l.length;m++){f.index>m?(y=f,f=null):y=f.sibling;var v=d(o,f,l[m],u);if(null===v){null===f&&(f=y);break}e&&f&&null===v.alternate&&t(o,f),a=i(v,a,m),null===s?c=v:s.sibling=v,s=v,f=y}if(m===l.length)return n(o,f),c;if(null===f){for(;m<l.length;m++)(f=p(o,l[m],u))&&(a=i(f,a,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);m<l.length;m++)(y=h(f,o,m,l[m],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?m:y.key),a=i(y,a,m),null===s?c=y:s.sibling=y,s=y);return e&&f.forEach(function(e){return t(o,e)}),c}function y(o,l,u,c){var s=at(u);"function"!=typeof s&&a("150"),null==(u=s.call(u))&&a("151");for(var f=s=null,m=l,y=l=0,v=null,g=u.next();null!==m&&!g.done;y++,g=u.next()){m.index>y?(v=m,m=null):v=m.sibling;var b=d(o,m,g.value,c);if(null===b){m||(m=v);break}e&&m&&null===b.alternate&&t(o,m),l=i(b,l,y),null===f?s=b:f.sibling=b,f=b,m=v}if(g.done)return n(o,m),s;if(null===m){for(;!g.done;y++,g=u.next())null!==(g=p(o,g.value,c))&&(l=i(g,l,y),null===f?s=g:f.sibling=g,f=g);return s}for(m=r(o,m);!g.done;y++,g=u.next())null!==(g=h(m,o,y,g.value,c))&&(e&&null!==g.alternate&&m.delete(null===g.key?y:g.key),l=i(g,l,y),null===f?s=g:f.sibling=g,f=g);return e&&m.forEach(function(e){return t(o,e)}),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===Qe&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case Ye:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){if(7===c.tag?i.type===Qe:c.elementType===i.type){n(e,c.sibling),(r=o(c,i.type===Qe?i.props.children:i.props)).ref=Lo(e,c,i),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}i.type===Qe?((r=$r(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Vr(i.type,i.key,i.props,null,e.mode,u)).ref=Lo(e,r,i),u.return=e,e=u)}return l(e);case Ke:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Yr(i,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=qr(i,e.mode,u)).return=e,e=r),l(e);if(Fo(i))return m(e,r,i,u);if(at(i))return y(e,r,i,u);if(s&&Do(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:a("152",(u=e.type).displayName||u.name||"Component")}return n(e,r)}}var Bo=Wo(!0),Vo=Wo(!1),$o=null,Ho=null,qo=!1;function Yo(e,t){var n=Dr(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ko(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Qo(e){if(qo){var t=Ho;if(t){var n=t;if(!Ko(e,t)){if(!(t=br(n))||!Ko(e,t))return e.effectTag|=2,qo=!1,void($o=e);Yo($o,n)}$o=e,Ho=wr(t)}else e.effectTag|=2,qo=!1,$o=e}}function Xo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;$o=e}function Go(e){if(e!==$o)return!1;if(!qo)return Xo(e),qo=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!yr(t,e.memoizedProps))for(t=Ho;t;)Yo(e,t),t=br(t);return Xo(e),Ho=$o?br(e.stateNode):null,!0}function Jo(){Ho=$o=null,qo=!1}var Zo=$e.ReactCurrentOwner;function ei(e,t,n,r){t.child=null===e?Vo(t,null,n,r):Bo(t,e.child,n,r)}function ti(e,t,n,r,o){n=n.render;var i=t.ref;return go(t),r=n(r,i),t.effectTag|=1,ei(e,t,r,o),t.child}function ni(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||Wr(a)||void 0!==a.defaultProps||null!==n.compare?((e=Vr(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,ri(e,t,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:en)(o,r)&&e.ref===t.ref)?si(e,t,i):(t.effectTag|=1,(e=Br(a,r)).ref=t.ref,e.return=t,t.child=e)}function ri(e,t,n,r,o,i){return null!==e&&o<i&&en(e.memoizedProps,r)&&e.ref===t.ref?si(e,t,i):ii(e,t,n,r,i)}function oi(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function ii(e,t,n,r,o){var i=Nr(n)?Pr:Cr.current;return i=Or(t,i),go(t),n=n(r,i),t.effectTag|=1,ei(e,t,n,o),t.child}function ai(e,t,n,r,o){if(Nr(n)){var i=!0;Ur(t)}else i=!1;if(go(t),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),Uo(t,n,r),zo(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,l=t.memoizedProps;a.props=l;var u=a.context,c=n.contextType;"object"==typeof c&&null!==c?c=No.currentDispatcher.readContext(c):c=Or(t,c=Nr(n)?Pr:Cr.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&Ao(t,a,r,c),Jr=!1;var p=t.memoizedState;u=a.state=p;var d=t.updateQueue;null!==d&&(lo(t,d,r,a,o),u=t.memoizedState),l!==r||p!==u||Sr.current||Jr?("function"==typeof s&&(jo(t,n,s,r),u=t.memoizedState),(l=Jr||Io(t,n,l,r,p,u,c))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),a.props=r,a.state=u,a.context=c,r=l):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,l=t.memoizedProps,a.props=t.type===t.elementType?l:Oo(t.type,l),u=a.context,"object"==typeof(c=n.contextType)&&null!==c?c=No.currentDispatcher.readContext(c):c=Or(t,c=Nr(n)?Pr:Cr.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&Ao(t,a,r,c),Jr=!1,u=t.memoizedState,p=a.state=u,null!==(d=t.updateQueue)&&(lo(t,d,r,a,o),p=t.memoizedState),l!==r||u!==p||Sr.current||Jr?("function"==typeof s&&(jo(t,n,s,r),p=t.memoizedState),(s=Jr||Io(t,n,l,r,u,p,c))?(f||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,p,c),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,p,c)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=p),a.props=r,a.state=p,a.context=c,r=s):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return li(e,t,n,r,i,o)}function li(e,t,n,r,o,i){oi(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&Ar(t,n,!1),si(e,t,i);r=t.stateNode,Zo.current=t;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=Bo(t,e.child,null,i),t.child=Bo(t,null,l,i)):ei(e,t,l,i),t.memoizedState=r.state,o&&Ar(t,n,!0),t.child}function ui(e){var t=e.stateNode;t.pendingContext?Mr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Mr(0,t.context,!1),_o(e,t.containerInfo)}function ci(e,t,n){var r=t.mode,o=t.pendingProps,i=t.memoizedState;if(0==(64&t.effectTag)){i=null;var a=!1}else i={timedOutAt:null!==i?i.timedOutAt:0},a=!0,t.effectTag&=-65;return null===e?a?(a=o.fallback,o=$r(null,r,0,null),0==(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),r=$r(a,r,n,null),o.sibling=r,(n=o).return=r.return=t):n=r=Vo(t,null,o.children,n):null!==e.memoizedState?(e=(r=e.child).sibling,a?(n=o.fallback,o=Br(r,r.pendingProps),0==(1&t.mode)&&((a=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(o.child=a)),r=o.sibling=Br(e,n,e.expirationTime),n=o,o.childExpirationTime=0,n.return=r.return=t):n=r=Bo(t,r.child,o.children,n)):(e=e.child,a?(a=o.fallback,(o=$r(null,r,0,null)).child=e,0==(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),(r=o.sibling=$r(a,r,n,null)).effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=t):r=n=Bo(t,e,o.children,n)),t.memoizedState=i,t.child=n,r}function si(e,t,n){if(null!==e&&(t.firstContextDependency=e.firstContextDependency),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&a("153"),null!==t.child){for(n=Br(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Br(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function fi(e,t,n){var r=t.expirationTime;if(null!==e&&e.memoizedProps===t.pendingProps&&!Sr.current&&r<n){switch(t.tag){case 3:ui(t),Jo();break;case 5:So(t);break;case 1:Nr(t.type)&&Ur(t);break;case 4:_o(t,t.stateNode.containerInfo);break;case 10:yo(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?ci(e,t,n):null!==(t=si(e,t,n))?t.sibling:null}return si(e,t,n)}switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var o=Or(t,Cr.current);if(go(t),o=r(e,o),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,Nr(r)){var i=!0;Ur(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var l=r.getDerivedStateFromProps;"function"==typeof l&&jo(t,r,l,e),o.updater=Mo,t.stateNode=o,o._reactInternalFiber=t,zo(t,r,e,n),t=li(null,t,r,!0,i,n)}else t.tag=0,ei(null,t,o,n),t=t.child;return t;case 16:switch(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),i=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:throw e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._result=t,t}}(o),t.type=e,o=t.tag=function(e){if("function"==typeof e)return Wr(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===tt)return 11;if(e===rt)return 14}return 2}(e),i=Oo(e,i),l=void 0,o){case 0:l=ii(null,t,e,i,n);break;case 1:l=ai(null,t,e,i,n);break;case 11:l=ti(null,t,e,i,n);break;case 14:l=ni(null,t,e,Oo(e.type,i),r,n);break;default:a("283",e)}return l;case 0:return r=t.type,o=t.pendingProps,ii(e,t,r,o=t.elementType===r?o:Oo(r,o),n);case 1:return r=t.type,o=t.pendingProps,ai(e,t,r,o=t.elementType===r?o:Oo(r,o),n);case 3:return ui(t),null===(r=t.updateQueue)&&a("282"),o=null!==(o=t.memoizedState)?o.element:null,lo(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o?(Jo(),t=si(e,t,n)):(o=t.stateNode,(o=(null===e||null===e.child)&&o.hydrate)&&(Ho=wr(t.stateNode.containerInfo),$o=t,o=qo=!0),o?(t.effectTag|=2,t.child=Vo(t,null,r,n)):(ei(e,t,r,n),Jo()),t=t.child),t;case 5:return So(t),null===e&&Qo(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,l=o.children,yr(r,o)?l=null:null!==i&&yr(r,i)&&(t.effectTag|=16),oi(e,t),1!==n&&1&t.mode&&o.hidden?(t.expirationTime=1,t=null):(ei(e,t,l,n),t=t.child),t;case 6:return null===e&&Qo(t),null;case 13:return ci(e,t,n);case 4:return _o(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Bo(t,null,r,n):ei(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,ti(e,t,r,o=t.elementType===r?o:Oo(r,o),n);case 7:return ei(e,t,t.pendingProps,n),t.child;case 8:case 12:return ei(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,l=t.memoizedProps,yo(t,i=o.value),null!==l){var u=l.value;if(0===(i=u===i&&(0!==u||1/u==1/i)||u!=u&&i!=i?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(l.children===o.children&&!Sr.current){t=si(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){if(null!==(u=l.firstContextDependency))do{if(u.context===r&&0!=(u.observedBits&i)){if(1===l.tag){var c=to(n);c.tag=2,ro(l,c)}l.expirationTime<n&&(l.expirationTime=n),null!==(c=l.alternate)&&c.expirationTime<n&&(c.expirationTime=n);for(var s=l.return;null!==s;){if(c=s.alternate,s.childExpirationTime<n)s.childExpirationTime=n,null!==c&&c.childExpirationTime<n&&(c.childExpirationTime=n);else{if(!(null!==c&&c.childExpirationTime<n))break;c.childExpirationTime=n}s=s.return}}c=l.child,u=u.next}while(null!==u);else c=10===l.tag&&l.type===t.type?null:l.child;if(null!==c)c.return=l;else for(c=l;null!==c;){if(c===t){c=null;break}if(null!==(l=c.sibling)){l.return=c.return,c=l;break}c=c.return}l=c}}ei(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,go(t),r=r(o=bo(o,i.unstable_observedBits)),t.effectTag|=1,ei(e,t,r,n),t.child;case 14:return ni(e,t,o=t.type,i=Oo(o.type,t.pendingProps),r,n);case 15:return ri(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Oo(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,Nr(r)?(e=!0,Ur(t)):e=!1,go(t),Uo(t,r,o),zo(t,r,o,n),li(null,t,r,!0,e,n);default:a("156")}}function pi(e){e.effectTag|=4}var di=void 0,hi=void 0,mi=void 0,yi=void 0;function vi(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ut(n)),null!==n&&lt(n.type),t=t.value,null!==e&&1===e.tag&&lt(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function gi(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Yi(e,t)}else t.current=null}function bi(e){switch("function"==typeof Fr&&Fr(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(null!==r){var o=e;try{r()}catch(e){Yi(o,e)}}n=n.next}while(n!==t)}break;case 1:if(gi(e),"function"==typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Yi(e,t)}break;case 5:gi(e);break;case 4:ki(e)}}function wi(e){return 5===e.tag||3===e.tag||4===e.tag}function xi(e){e:{for(var t=e.return;null!==t;){if(wi(t)){var n=t;break e}t=t.return}a("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:a("161")}16&n.effectTag&&(rr(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||wi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var i=t,l=o.stateNode,u=n;8===i.nodeType?i.parentNode.insertBefore(l,u):i.insertBefore(l,u)}else t.insertBefore(o.stateNode,n);else r?(l=t,u=o.stateNode,8===l.nodeType?(i=l.parentNode).insertBefore(u,l):(i=l).appendChild(u),null!==(l=l._reactRootContainer)&&void 0!==l||null!==i.onclick||(i.onclick=pr)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function ki(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&a("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var i=t,l=i;;)if(bi(l),null!==l.child&&4!==l.tag)l.child.return=l,l=l.child;else{if(l===i)break;for(;null===l.sibling;){if(null===l.return||l.return===i)break e;l=l.return}l.sibling.return=l.return,l=l.sibling}o?(i=r,l=t.stateNode,8===i.nodeType?i.parentNode.removeChild(l):i.removeChild(l)):r.removeChild(t.stateNode)}else if(4===t.tag?(r=t.stateNode.containerInfo,o=!0):bi(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function Ei(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[I]=r,"input"===e&&"radio"===r.type&&null!=r.name&&xt(n,r),sr(e,o),t=sr(e,r),o=0;o<i.length;o+=2){var l=i[o],u=i[o+1];"style"===l?lr(n,u):"dangerouslySetInnerHTML"===l?nr(n,u):"children"===l?rr(n,u):vt(n,l,u,t)}switch(e){case"input":kt(n,r);break;case"textarea":Xn(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Yn(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Yn(n,!!r.multiple,r.defaultValue,!0):Yn(n,!!r.multiple,r.multiple?[]:"",!1))}}}break;case 6:null===t.stateNode&&a("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(e=t,null===(n=t.memoizedState)?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=ka())),null!==e)e:for(t=n=e;;){if(5===t.tag)e=t.stateNode,r?e.style.display="none":(e=t.stateNode,i=void 0!==(i=t.memoizedProps.style)&&null!==i&&i.hasOwnProperty("display")?i.display:null,e.style.display=ar("display",i));else if(6===t.tag)t.stateNode.nodeValue=r?"":t.memoizedProps;else{if(13===t.tag&&null!==t.memoizedState){(e=t.child.sibling).return=t,t=e;continue}if(null!==t.child){t.child.return=t,t=t.child;continue}}if(t===n)break e;for(;null===t.sibling;){if(null===t.return||t.return===n)break e;t=t.return}t.sibling.return=t.return,t=t.sibling}break;case 17:break;default:a("163")}}function Ti(e,t,n){(n=to(n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){ja(r),vi(e,t)},n}function _i(e,t,n){(n=to(n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Wi?Wi=new Set([this]):Wi.add(this));var n=t.value,o=t.stack;vi(e,t),this.componentDidCatch(n,{componentStack:null!==o?o:""})}),n}function Ci(e){switch(e.tag){case 1:Nr(e.type)&&Rr();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return Co(),jr(),0!=(64&(t=e.effectTag))&&a("285"),e.effectTag=-2049&t|64,e;case 5:return Po(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 4:return Co(),null;case 10:return vo(e),null;default:return null}}di=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},hi=function(){},mi=function(e,t,n,r,i){var a=e.memoizedProps;if(a!==r){var l=t.stateNode;switch(To(xo.current),e=null,n){case"input":a=bt(l,a),r=bt(l,r),e=[];break;case"option":a=qn(l,a),r=qn(l,r),e=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":a=Kn(l,a),r=Kn(l,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(l.onclick=pr)}cr(n,r),l=n=void 0;var u=null;for(n in a)if(!r.hasOwnProperty(n)&&a.hasOwnProperty(n)&&null!=a[n])if("style"===n){var c=a[n];for(l in c)c.hasOwnProperty(l)&&(u||(u={}),u[l]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(b.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var s=r[n];if(c=null!=a?a[n]:void 0,r.hasOwnProperty(n)&&s!==c&&(null!=s||null!=c))if("style"===n)if(c){for(l in c)!c.hasOwnProperty(l)||s&&s.hasOwnProperty(l)||(u||(u={}),u[l]="");for(l in s)s.hasOwnProperty(l)&&c[l]!==s[l]&&(u||(u={}),u[l]=s[l])}else u||(e||(e=[]),e.push(n,u)),u=s;else"dangerouslySetInnerHTML"===n?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(n,""+s)):"children"===n?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(n,""+s):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(b.hasOwnProperty(n)?(null!=s&&fr(i,n),e||c===s||(e=[])):(e=e||[]).push(n,s))}u&&(e=e||[]).push("style",u),i=e,(t.updateQueue=i)&&pi(t)}},yi=function(e,t,n,r){n!==r&&pi(t)};var Si={readContext:bo},Pi=$e.ReactCurrentOwner,Oi=1073741822,Ni=0,Ri=!1,ji=null,Mi=null,Ii=0,Ui=-1,Ai=!1,zi=null,Fi=!1,Li=null,Di=null,Wi=null;function Bi(){if(null!==ji)for(var e=ji.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!==n&&void 0!==n&&Rr();break;case 3:Co(),jr();break;case 5:Po(t);break;case 4:Co();break;case 10:vo(t)}e=e.return}Mi=null,Ii=0,Ui=-1,Ai=!1,ji=null}function Vi(){null!==Di&&(i.unstable_cancelCallback(Li),Di())}function $i(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(1024&e.effectTag)){ji=e;e:{var i=t,l=Ii,u=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:Nr(t.type)&&Rr();break;case 3:Co(),jr(),(u=t.stateNode).pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),null!==i&&null!==i.child||(Go(t),t.effectTag&=-3),hi(t);break;case 5:Po(t);var c=To(Eo.current);if(l=t.type,null!==i&&null!=t.stateNode)mi(i,t,l,u,c),i.ref!==t.ref&&(t.effectTag|=128);else if(u){var s=To(xo.current);if(Go(t)){i=(u=t).stateNode;var f=u.type,p=u.memoizedProps,d=c;switch(i[M]=u,i[I]=p,l=void 0,c=f){case"iframe":case"object":_n("load",i);break;case"video":case"audio":for(f=0;f<te.length;f++)_n(te[f],i);break;case"source":_n("error",i);break;case"img":case"image":case"link":_n("error",i),_n("load",i);break;case"form":_n("reset",i),_n("submit",i);break;case"details":_n("toggle",i);break;case"input":wt(i,p),_n("invalid",i),fr(d,"onChange");break;case"select":i._wrapperState={wasMultiple:!!p.multiple},_n("invalid",i),fr(d,"onChange");break;case"textarea":Qn(i,p),_n("invalid",i),fr(d,"onChange")}for(l in cr(c,p),f=null,p)p.hasOwnProperty(l)&&(s=p[l],"children"===l?"string"==typeof s?i.textContent!==s&&(f=["children",s]):"number"==typeof s&&i.textContent!==""+s&&(f=["children",""+s]):b.hasOwnProperty(l)&&null!=s&&fr(d,l));switch(c){case"input":Be(i),Et(i,p,!0);break;case"textarea":Be(i),Gn(i);break;case"select":case"option":break;default:"function"==typeof p.onClick&&(i.onclick=pr)}l=f,u.updateQueue=l,(u=null!==l)&&pi(t)}else{p=t,i=l,d=u,f=9===c.nodeType?c:c.ownerDocument,s===Jn.html&&(s=Zn(i)),s===Jn.html?"script"===i?((i=f.createElement("div")).innerHTML="<script><\/script>",f=i.removeChild(i.firstChild)):"string"==typeof d.is?f=f.createElement(i,{is:d.is}):(f=f.createElement(i),"select"===i&&d.multiple&&(f.multiple=!0)):f=f.createElementNS(s,i),(i=f)[M]=p,i[I]=u,di(i,t,!1,!1),d=i;var h=c,m=sr(f=l,p=u);switch(f){case"iframe":case"object":_n("load",d),c=p;break;case"video":case"audio":for(c=0;c<te.length;c++)_n(te[c],d);c=p;break;case"source":_n("error",d),c=p;break;case"img":case"image":case"link":_n("error",d),_n("load",d),c=p;break;case"form":_n("reset",d),_n("submit",d),c=p;break;case"details":_n("toggle",d),c=p;break;case"input":wt(d,p),c=bt(d,p),_n("invalid",d),fr(h,"onChange");break;case"option":c=qn(d,p);break;case"select":d._wrapperState={wasMultiple:!!p.multiple},c=o({},p,{value:void 0}),_n("invalid",d),fr(h,"onChange");break;case"textarea":Qn(d,p),c=Kn(d,p),_n("invalid",d),fr(h,"onChange");break;default:c=p}cr(f,c),s=void 0;var y=f,v=d,g=c;for(s in g)if(g.hasOwnProperty(s)){var w=g[s];"style"===s?lr(v,w):"dangerouslySetInnerHTML"===s?null!=(w=w?w.__html:void 0)&&nr(v,w):"children"===s?"string"==typeof w?("textarea"!==y||""!==w)&&rr(v,w):"number"==typeof w&&rr(v,""+w):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(b.hasOwnProperty(s)?null!=w&&fr(h,s):null!=w&&vt(v,s,w,m))}switch(f){case"input":Be(d),Et(d,p,!1);break;case"textarea":Be(d),Gn(d);break;case"option":null!=p.value&&d.setAttribute("value",""+gt(p.value));break;case"select":(c=d).multiple=!!p.multiple,null!=(d=p.value)?Yn(c,!!p.multiple,d,!1):null!=p.defaultValue&&Yn(c,!!p.multiple,p.defaultValue,!0);break;default:"function"==typeof c.onClick&&(d.onclick=pr)}(u=mr(l,u))&&pi(t),t.stateNode=i}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&a("166");break;case 6:i&&null!=t.stateNode?yi(i,t,i.memoizedProps,u):("string"!=typeof u&&(null===t.stateNode&&a("166")),i=To(Eo.current),To(xo.current),Go(t)?(l=(u=t).stateNode,i=u.memoizedProps,l[M]=u,(u=l.nodeValue!==i)&&pi(t)):(l=t,(u=(9===i.nodeType?i:i.ownerDocument).createTextNode(u))[M]=t,l.stateNode=u));break;case 11:break;case 13:if(u=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=l,ji=t;break e}u=null!==u,l=null!==i&&null!==i.memoizedState,null!==i&&!u&&l&&(null!==(i=i.child.sibling)&&(null!==(c=t.firstEffect)?(t.firstEffect=i,i.nextEffect=c):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),(u!==l||0==(1&t.effectTag)&&u)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Co(),hi(t);break;case 10:vo(t);break;case 9:case 14:break;case 17:Nr(t.type)&&Rr();break;default:a("156")}ji=null}if(t=e,1===Ii||1!==t.childExpirationTime){for(u=0,l=t.child;null!==l;)i=l.expirationTime,c=l.childExpirationTime,i>u&&(u=i),c>u&&(u=c),l=l.sibling;t.childExpirationTime=u}if(null!==ji)return ji;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=Ci(e)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function Hi(e){var t=fi(e.alternate,e,Ii);return e.memoizedProps=e.pendingProps,null===t&&(t=$i(e)),Pi.current=null,t}function qi(e,t){Ri&&a("243"),Vi(),Ri=!0,Pi.currentDispatcher=Si;var n=e.nextExpirationTimeToWorkOn;n===Ii&&e===Mi&&null!==ji||(Bi(),Ii=n,ji=Br((Mi=e).current,null),e.pendingCommitExpirationTime=0);for(var r=!1;;){try{if(t)for(;null!==ji&&!Ca();)ji=Hi(ji);else for(;null!==ji;)ji=Hi(ji)}catch(t){if(mo=ho=po=null,null===ji)r=!0,ja(t);else{null===ji&&a("271");var o=ji,i=o.return;if(null!==i){e:{var l=e,u=i,c=o,s=t;if(i=Ii,c.effectTag|=1024,c.firstEffect=c.lastEffect=null,null!==s&&"object"==typeof s&&"function"==typeof s.then){var f=s;s=u;var p=-1,d=-1;do{if(13===s.tag){var h=s.alternate;if(null!==h&&null!==(h=h.memoizedState)){d=10*(1073741822-h.timedOutAt);break}"number"==typeof(h=s.pendingProps.maxDuration)&&(0>=h?p=0:(-1===p||h<p)&&(p=h))}s=s.return}while(null!==s);s=u;do{if((h=13===s.tag)&&(h=void 0!==s.memoizedProps.fallback&&null===s.memoizedState),h){if(u=Qi.bind(null,l,s,c,0==(1&s.mode)?1073741823:i),f.then(u,u),0==(1&s.mode)){s.effectTag|=64,c.effectTag&=-1957,1===c.tag&&null===c.alternate&&(c.tag=17),c.expirationTime=i;break e}-1===p?l=1073741823:(-1===d&&(d=10*(1073741822-Xr(l,i))-5e3),l=d+p),0<=l&&Ui<l&&(Ui=l),s.effectTag|=2048,s.expirationTime=i;break e}s=s.return}while(null!==s);s=Error((lt(c.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ut(c))}Ai=!0,s=so(s,c),l=u;do{switch(l.tag){case 3:c=s,l.effectTag|=2048,l.expirationTime=i,oo(l,i=Ti(l,c,i));break e;case 1:if(c=s,u=l.type,f=l.stateNode,0==(64&l.effectTag)&&("function"==typeof u.getDerivedStateFromError||null!==f&&"function"==typeof f.componentDidCatch&&(null===Wi||!Wi.has(f)))){l.effectTag|=2048,l.expirationTime=i,oo(l,i=_i(l,c,i));break e}}l=l.return}while(null!==l)}ji=$i(o);continue}r=!0,ja(t)}}break}if(Ri=!1,mo=ho=po=Pi.currentDispatcher=null,r)Mi=null,e.finishedWork=null;else if(null!==ji)e.finishedWork=null;else{if(null===(r=e.current.alternate)&&a("281"),Mi=null,Ai){if(o=e.latestPendingTime,i=e.latestSuspendedTime,l=e.latestPingedTime,0!==o&&o<n||0!==i&&i<n||0!==l&&l<n)return Qr(e,n),void xa(e,r,n,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,n=e.nextExpirationTimeToWorkOn=n,t=e.expirationTime=1073741823,void xa(e,r,n,t,-1)}t&&-1!==Ui?(Qr(e,n),(t=10*(1073741822-Xr(e,n)))<Ui&&(Ui=t),t=10*(1073741822-ka()),t=Ui-t,xa(e,r,n,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=n,e.finishedWork=r)}}function Yi(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Wi||!Wi.has(r)))return ro(n,e=_i(n,e=so(t,e),1073741823)),void Gi(n,1073741823);break;case 3:return ro(n,e=Ti(n,e=so(t,e),1073741823)),void Gi(n,1073741823)}n=n.return}3===e.tag&&(ro(e,n=Ti(e,n=so(t,e),1073741823)),Gi(e,1073741823))}function Ki(e,t){return 0!==Ni?e=Ni:Ri?e=Fi?1073741823:Ii:1&t.mode?(e=fa?1073741822-10*(1+((1073741822-e+15)/10|0)):1073741822-25*(1+((1073741822-e+500)/25|0)),null!==Mi&&e===Ii&&--e):e=1073741823,fa&&(0===aa||e<aa)&&(aa=e),e}function Qi(e,t,n,r){var o=e.earliestSuspendedTime,i=e.latestSuspendedTime;if(0!==o&&r<=o&&r>=i){i=o=r,e.didError=!1;var a=e.latestPingedTime;(0===a||a>i)&&(e.latestPingedTime=i),Gr(i,e)}else Kr(e,o=Ki(o=ka(),t));0!=(1&t.mode)&&e===Mi&&Ii===r&&(Mi=null),Xi(t,o),0==(1&t.mode)&&(Xi(n,o),1===n.tag&&null!==n.stateNode&&((t=to(o)).tag=2,ro(n,t))),0!==(n=e.expirationTime)&&Ea(e,n)}function Xi(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return o}function Gi(e,t){null!==(e=Xi(e,t))&&(!Ri&&0!==Ii&&t>Ii&&Bi(),Kr(e,t),Ri&&!Fi&&Mi===e||Ea(e,e.expirationTime),va>ya&&(va=0,a("185")))}function Ji(e,t,n,r,o){var i=Ni;Ni=1073741823;try{return e(t,n,r,o)}finally{Ni=i}}var Zi=null,ea=null,ta=0,na=void 0,ra=!1,oa=null,ia=0,aa=0,la=!1,ua=null,ca=!1,sa=!1,fa=!1,pa=null,da=i.unstable_now(),ha=1073741822-(da/10|0),ma=ha,ya=50,va=0,ga=null;function ba(){ha=1073741822-((i.unstable_now()-da)/10|0)}function wa(e,t){if(0!==ta){if(t<ta)return;null!==na&&i.unstable_cancelCallback(na)}ta=t,e=i.unstable_now()-da,na=i.unstable_scheduleCallback(Sa,{timeout:10*(1073741822-t)-e})}function xa(e,t,n,r,o){e.expirationTime=r,0!==o||Ca()?0<o&&(e.timeoutHandle=vr(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,ba(),ma=ha,Oa(e,n)}.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function ka(){return ra?ma:(Ta(),0!==ia&&1!==ia||(ba(),ma=ha),ma)}function Ea(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===ea?(Zi=ea=e,e.nextScheduledRoot=e):(ea=ea.nextScheduledRoot=e).nextScheduledRoot=Zi):t>e.expirationTime&&(e.expirationTime=t),ra||(ca?sa&&(oa=e,ia=1073741823,Na(e,1073741823,!1)):1073741823===t?Pa(1073741823,!1):wa(e,t))}function Ta(){var e=0,t=null;if(null!==ea)for(var n=ea,r=Zi;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===ea)&&a("244"),r===r.nextScheduledRoot){Zi=ea=r.nextScheduledRoot=null;break}if(r===Zi)Zi=o=r.nextScheduledRoot,ea.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===ea){(ea=n).nextScheduledRoot=Zi,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(o>e&&(e=o,t=r),r===ea)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}oa=t,ia=e}var _a=!1;function Ca(){return!!_a||!!i.unstable_shouldYield()&&(_a=!0)}function Sa(){try{if(!Ca()&&null!==Zi){ba();var e=Zi;do{var t=e.expirationTime;0!==t&&ha<=t&&(e.nextExpirationTimeToWorkOn=ha),e=e.nextScheduledRoot}while(e!==Zi)}Pa(0,!0)}finally{_a=!1}}function Pa(e,t){if(Ta(),t)for(ba(),ma=ha;null!==oa&&0!==ia&&e<=ia&&!(_a&&ha>ia);)Na(oa,ia,ha>ia),Ta(),ba(),ma=ha;else for(;null!==oa&&0!==ia&&e<=ia;)Na(oa,ia,!1),Ta();if(t&&(ta=0,na=null),0!==ia&&wa(oa,ia),va=0,ga=null,null!==pa)for(e=pa,pa=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){la||(la=!0,ua=e)}}if(la)throw e=ua,ua=null,la=!1,e}function Oa(e,t){ra&&a("253"),oa=e,ia=t,Na(e,t,!1),Pa(1073741823,!1)}function Na(e,t,n){if(ra&&a("245"),ra=!0,n){var r=e.finishedWork;null!==r?Ra(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,gr(r)),qi(e,n),null!==(r=e.finishedWork)&&(Ca()?e.finishedWork=r:Ra(e,r,t)))}else null!==(r=e.finishedWork)?Ra(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,gr(r)),qi(e,n),null!==(r=e.finishedWork)&&Ra(e,r,t));ra=!1}function Ra(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===pa?pa=[r]:pa.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===ga?va++:(ga=e,va=0),Fi=Ri=!0,e.current===t&&a("177"),0===(n=e.pendingCommitExpirationTime)&&a("261"),e.pendingCommitExpirationTime=0,r=t.expirationTime;var o=t.childExpirationTime;if(r=o>r?o:r,e.didError=!1,0===r?(e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0):(0!==(o=e.latestPendingTime)&&(o>r?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>r&&(e.earliestPendingTime=e.latestPendingTime)),0===(o=e.earliestSuspendedTime)?Kr(e,r):r<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Kr(e,r)):r>o&&Kr(e,r)),Gr(0,e),Pi.current=null,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,dr=Tn,zn(o=An())){if("selectionStart"in o)var i={start:o.selectionStart,end:o.selectionEnd};else e:{var l=(i=(i=o.ownerDocument)&&i.defaultView||window).getSelection&&i.getSelection();if(l&&0!==l.rangeCount){i=l.anchorNode;var u=l.anchorOffset,c=l.focusNode;l=l.focusOffset;try{i.nodeType,c.nodeType}catch(e){i=null;break e}var s=0,f=-1,p=-1,d=0,h=0,m=o,y=null;t:for(;;){for(var v;m!==i||0!==u&&3!==m.nodeType||(f=s+u),m!==c||0!==l&&3!==m.nodeType||(p=s+l),3===m.nodeType&&(s+=m.nodeValue.length),null!==(v=m.firstChild);)y=m,m=v;for(;;){if(m===o)break t;if(y===i&&++d===u&&(f=s),y===c&&++h===l&&(p=s),null!==(v=m.nextSibling))break;y=(m=y).parentNode}m=v}i=-1===f||-1===p?null:{start:f,end:p}}else i=null}i=i||{start:0,end:0}}else i=null;for(hr={focusedElem:o,selectionRange:i},Tn=!1,zi=r;null!==zi;){o=!1,i=void 0;try{for(;null!==zi;){if(256&zi.effectTag)e:{var g=zi.alternate;switch((u=zi).tag){case 0:case 11:case 15:break e;case 1:if(256&u.effectTag&&null!==g){var b=g.memoizedProps,w=g.memoizedState,x=u.stateNode,k=x.getSnapshotBeforeUpdate(u.elementType===u.type?b:Oo(u.type,b),w);x.__reactInternalSnapshotBeforeUpdate=k}break e;case 3:case 5:case 6:case 4:case 17:break e;default:a("163")}}zi=zi.nextEffect}}catch(e){o=!0,i=e}o&&(null===zi&&a("178"),Yi(zi,i),null!==zi&&(zi=zi.nextEffect))}for(zi=r;null!==zi;){g=!1,b=void 0;try{for(;null!==zi;){var E=zi.effectTag;if(16&E&&rr(zi.stateNode,""),128&E){var T=zi.alternate;if(null!==T){var _=T.ref;null!==_&&("function"==typeof _?_(null):_.current=null)}}switch(14&E){case 2:xi(zi),zi.effectTag&=-3;break;case 6:xi(zi),zi.effectTag&=-3,Ei(zi.alternate,zi);break;case 4:Ei(zi.alternate,zi);break;case 8:ki(w=zi),w.return=null,w.child=null,w.alternate&&(w.alternate.child=null,w.alternate.return=null)}zi=zi.nextEffect}}catch(e){g=!0,b=e}g&&(null===zi&&a("178"),Yi(zi,b),null!==zi&&(zi=zi.nextEffect))}if(_=hr,T=An(),E=_.focusedElem,b=_.selectionRange,T!==E&&E&&E.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(E.ownerDocument.documentElement,E)){null!==b&&zn(E)&&(T=b.start,void 0===(_=b.end)&&(_=T),"selectionStart"in E?(E.selectionStart=T,E.selectionEnd=Math.min(_,E.value.length)):(_=(T=E.ownerDocument||document)&&T.defaultView||window).getSelection&&(_=_.getSelection(),w=E.textContent.length,g=Math.min(b.start,w),b=void 0===b.end?g:Math.min(b.end,w),!_.extend&&g>b&&(w=b,b=g,g=w),w=Un(E,g),x=Un(E,b),w&&x&&(1!==_.rangeCount||_.anchorNode!==w.node||_.anchorOffset!==w.offset||_.focusNode!==x.node||_.focusOffset!==x.offset)&&((T=T.createRange()).setStart(w.node,w.offset),_.removeAllRanges(),g>b?(_.addRange(T),_.extend(x.node,x.offset)):(T.setEnd(x.node,x.offset),_.addRange(T))))),T=[];for(_=E;_=_.parentNode;)1===_.nodeType&&T.push({element:_,left:_.scrollLeft,top:_.scrollTop});for("function"==typeof E.focus&&E.focus(),E=0;E<T.length;E++)(_=T[E]).element.scrollLeft=_.left,_.element.scrollTop=_.top}for(hr=null,Tn=!!dr,dr=null,e.current=t,zi=r;null!==zi;){r=!1,E=void 0;try{for(T=n;null!==zi;){var C=zi.effectTag;if(36&C){var S=zi.alternate;switch(g=T,(_=zi).tag){case 0:case 11:case 15:break;case 1:var P=_.stateNode;if(4&_.effectTag)if(null===S)P.componentDidMount();else{var O=_.elementType===_.type?S.memoizedProps:Oo(_.type,S.memoizedProps);P.componentDidUpdate(O,S.memoizedState,P.__reactInternalSnapshotBeforeUpdate)}var N=_.updateQueue;null!==N&&uo(0,N,P);break;case 3:var R=_.updateQueue;if(null!==R){if(b=null,null!==_.child)switch(_.child.tag){case 5:b=_.child.stateNode;break;case 1:b=_.child.stateNode}uo(0,R,b)}break;case 5:var j=_.stateNode;null===S&&4&_.effectTag&&mr(_.type,_.memoizedProps)&&j.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:a("163")}}if(128&C){var M=zi.ref;if(null!==M){var I=zi.stateNode;switch(zi.tag){case 5:var U=I;break;default:U=I}"function"==typeof M?M(U):M.current=U}}zi=zi.nextEffect}}catch(e){r=!0,E=e}r&&(null===zi&&a("178"),Yi(zi,E),null!==zi&&(zi=zi.nextEffect))}Ri=Fi=!1,"function"==typeof zr&&zr(t.stateNode),C=t.expirationTime,0===(t=(t=t.childExpirationTime)>C?t:C)&&(Wi=null),e.expirationTime=t,e.finishedWork=null}function ja(e){null===oa&&a("246"),oa.expirationTime=0,la||(la=!0,ua=e)}function Ma(e,t){var n=ca;ca=!0;try{return e(t)}finally{(ca=n)||ra||Pa(1073741823,!1)}}function Ia(e,t){if(ca&&!sa){sa=!0;try{return e(t)}finally{sa=!1}}return e(t)}function Ua(e,t,n){if(fa)return e(t,n);ca||ra||0===aa||(Pa(aa,!1),aa=0);var r=fa,o=ca;ca=fa=!0;try{return e(t,n)}finally{fa=r,(ca=o)||ra||Pa(1073741823,!1)}}function Aa(e,t,n,r,o){var i=t.current;e:if(n){n=n._reactInternalFiber;t:{2===tn(n)&&1===n.tag||a("170");var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(Nr(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);a("171"),l=void 0}if(1===n.tag){var u=n.type;if(Nr(u)){n=Ir(n,u,l);break e}}n=l}else n=_r;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=to(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Vi(),ro(i,o),Gi(i,r),r}function za(e,t,n,r){var o=t.current;return Aa(e,t,n,o=Ki(ka(),o),r)}function Fa(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function La(e){var t=1073741822-25*(1+((1073741822-ka()+500)/25|0));t>=Oi&&(t=Oi-1),this._expirationTime=Oi=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function Da(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Wa(e,t,n){e={current:t=Dr(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function Ba(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Va(e,t,n,r,o){Ba(n)||a("200");var i=n._reactRootContainer;if(i){if("function"==typeof o){var l=o;o=function(){var e=Fa(i._internalRoot);l.call(e)}}null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Wa(e,!1,t)}(n,r),"function"==typeof o){var u=o;o=function(){var e=Fa(i._internalRoot);u.call(e)}}Ia(function(){null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)})}return Fa(i._internalRoot)}function $a(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Ba(t)||a("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ke,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Ce=function(e,t,n){switch(t){case"input":if(kt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=F(r);o||a("90"),Ve(r),kt(r,o)}}}break;case"textarea":Xn(e,n);break;case"select":null!=(t=n.value)&&Yn(e,!!n.multiple,t,!1)}},La.prototype.render=function(e){this._defer||a("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new Da;return Aa(e,t,null,n,r._onCommit),r},La.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},La.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||a("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&a("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,Oa(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},La.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},Da.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Da.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&a("191",n),n()}}},Wa.prototype.render=function(e,t){var n=this._internalRoot,r=new Da;return null!==(t=void 0===t?null:t)&&r.then(t),za(e,n,null,r._onCommit),r},Wa.prototype.unmount=function(e){var t=this._internalRoot,n=new Da;return null!==(e=void 0===e?null:e)&&n.then(e),za(null,t,null,n._onCommit),n},Wa.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new Da;return null!==(n=void 0===n?null:n)&&o.then(n),za(t,r,e,o._onCommit),o},Wa.prototype.createBatch=function(){var e=new La(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},je=Ma,Me=Ua,Ie=function(){ra||0===aa||(Pa(aa,!1),aa=0)};var Ha={createPortal:$a,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?a("188"):a("268",Object.keys(e))),e=null===(e=rn(t))?null:e.stateNode},hydrate:function(e,t,n){return Va(null,e,t,!0,n)},render:function(e,t,n){return Va(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return(null==e||void 0===e._reactInternalFiber)&&a("38"),Va(e,t,n,!1,r)},unmountComponentAtNode:function(e){return Ba(e)||a("40"),!!e._reactRootContainer&&(Ia(function(){Va(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return $a.apply(void 0,arguments)},unstable_batchedUpdates:Ma,unstable_interactiveUpdates:Ua,flushSync:function(e,t){ra&&a("187");var n=ca;ca=!0;try{return Ji(e,t)}finally{ca=n,Pa(1073741823,!1)}},unstable_flushControlled:function(e){var t=ca;ca=!0;try{Ji(e)}finally{(ca=t)||ra||Pa(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[A,z,F,O.injectEventPluginsByName,g,$,function(e){C(e,V)},Ne,Re,Pn,R]},unstable_createRoot:function(e,t){return Ba(e)||a("299","unstable_createRoot"),new Wa(e,!0,null!=t&&!0===t.hydrate)}};!function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);zr=Lr(function(e){return t.onCommitFiberRoot(n,e)}),Fr=Lr(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}})(o({},e,{findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}({findFiberByHostInstance:U,bundleType:0,version:"16.6.3",rendererPackageName:"react-dom"});var qa={default:Ha},Ya=qa&&Ha||qa;e.exports=Ya.default||Ya},function(e,t,n){"use strict";e.exports=n(15)},function(e,t,n){"use strict";
/** @license React v16.6.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Object.defineProperty(t,"__esModule",{value:!0});var r=null,o=!1,i=3,a=-1,l=-1,u=!1,c=!1;function s(){if(!u){var e=r.expirationTime;c?v():c=!0,y(d,e)}}function f(){var e=r,t=r.next;if(r===t)r=null;else{var n=r.previous;r=n.next=t,t.previous=n}e.next=e.previous=null,n=e.callback,t=e.expirationTime,e=e.priorityLevel;var o=i,a=l;i=e,l=t;try{var u=n()}finally{i=o,l=a}if("function"==typeof u)if(u={callback:u,priorityLevel:e,expirationTime:t,next:null,previous:null},null===r)r=u.next=u.previous=u;else{n=null,e=r;do{if(e.expirationTime>=t){n=e;break}e=e.next}while(e!==r);null===n?n=r:n===r&&(r=u,s()),(t=n.previous).next=n.previous=u,u.next=n,u.previous=t}}function p(){if(-1===a&&null!==r&&1===r.priorityLevel){u=!0;try{do{f()}while(null!==r&&1===r.priorityLevel)}finally{u=!1,null!==r?s():c=!1}}}function d(e){u=!0;var n=o;o=e;try{if(e)for(;null!==r;){var i=t.unstable_now();if(!(r.expirationTime<=i))break;do{f()}while(null!==r&&r.expirationTime<=i)}else if(null!==r)do{f()}while(null!==r&&!g())}finally{u=!1,o=n,null!==r?s():c=!1,p()}}var h,m,y,v,g,b=Date,w="function"==typeof setTimeout?setTimeout:void 0,x="function"==typeof clearTimeout?clearTimeout:void 0,k="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,E="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function T(e){h=k(function(t){x(m),e(t)}),m=w(function(){E(h),e(t.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var _=performance;t.unstable_now=function(){return _.now()}}else t.unstable_now=function(){return b.now()};if("undefined"!=typeof window&&window._schedMock){var C=window._schedMock;y=C[0],v=C[1],g=C[2]}else if("undefined"==typeof window||"function"!=typeof window.addEventListener){var S=null,P=-1,O=function(e,t){if(null!==S){var n=S;S=null;try{P=t,n(e)}finally{P=-1}}};y=function(e,t){-1!==P?setTimeout(y,0,e,t):(S=e,setTimeout(O,t,!0,t),setTimeout(O,1073741823,!1,1073741823))},v=function(){S=null},g=function(){return!1},t.unstable_now=function(){return-1===P?0:P}}else{"undefined"!=typeof console&&("function"!=typeof k&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof E&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var N=null,R=!1,j=-1,M=!1,I=!1,U=0,A=33,z=33;g=function(){return U<=t.unstable_now()};var F="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(e){if(e.source===window&&e.data===F){R=!1,e=N;var n=j;N=null,j=-1;var r=t.unstable_now(),o=!1;if(0>=U-r){if(!(-1!==n&&n<=r))return M||(M=!0,T(L)),N=e,void(j=n);o=!0}if(null!==e){I=!0;try{e(o)}finally{I=!1}}}},!1);var L=function(e){if(null!==N){T(L);var t=e-U+z;t<z&&A<z?(8>t&&(t=8),z=t<A?A:t):A=t,U=e+z,R||(R=!0,window.postMessage(F,"*"))}else M=!1};y=function(e,t){N=e,j=t,I||0>t?window.postMessage(F,"*"):M||(M=!0,T(L))},v=function(){N=null,R=!1,j=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=i,o=a;i=e,a=t.unstable_now();try{return n()}finally{i=r,a=o,p()}},t.unstable_scheduleCallback=function(e,n){var o=-1!==a?a:t.unstable_now();if("object"==typeof n&&null!==n&&"number"==typeof n.timeout)n=o+n.timeout;else switch(i){case 1:n=o+-1;break;case 2:n=o+250;break;case 5:n=o+1073741823;break;case 4:n=o+1e4;break;default:n=o+5e3}if(e={callback:e,priorityLevel:i,expirationTime:n,next:null,previous:null},null===r)r=e.next=e.previous=e,s();else{o=null;var l=r;do{if(l.expirationTime>n){o=l;break}l=l.next}while(l!==r);null===o?o=r:o===r&&(r=e,s()),(n=o.previous).next=o.previous=e,e.next=o,e.previous=n}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)r=null;else{e===r&&(r=t);var n=e.previous;n.next=t,t.previous=n}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=i;return function(){var r=i,o=a;i=n,a=t.unstable_now();try{return e.apply(this,arguments)}finally{i=r,a=o,p()}}},t.unstable_getCurrentPriorityLevel=function(){return i},t.unstable_shouldYield=function(){return!o&&(null!==r&&r.expirationTime<l||g())}},function(e,t,n){"use strict";var r=n(17);function o(){}e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=o,n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t,n){var r=n(20);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(8)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(7)(!1)).push([e.i,'/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */\n/* Document\n   ========================================================================== */\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\nhtml {\n  line-height: 1.15;\n  /* 1 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */ }\n\n/* Sections\n   ========================================================================== */\n/**\n * Remove the margin in all browsers.\n */\nbody {\n  margin: 0; }\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0; }\n\n/* Grouping content\n   ========================================================================== */\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\nhr {\n  box-sizing: content-box;\n  /* 1 */\n  height: 0;\n  /* 1 */\n  overflow: visible;\n  /* 2 */ }\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\npre {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */ }\n\n/* Text-level semantics\n   ========================================================================== */\n/**\n * Remove the gray background on active links in IE 10.\n */\na {\n  background-color: transparent; }\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\nabbr[title] {\n  border-bottom: none;\n  /* 1 */\n  text-decoration: underline;\n  /* 2 */\n  text-decoration: underline dotted;\n  /* 2 */ }\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\nb,\nstrong {\n  font-weight: bolder; }\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */ }\n\n/**\n * Add the correct font size in all browsers.\n */\nsmall {\n  font-size: 80%; }\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline; }\n\nsub {\n  bottom: -0.25em; }\n\nsup {\n  top: -0.5em; }\n\n/* Embedded content\n   ========================================================================== */\n/**\n * Remove the border on images inside links in IE 10.\n */\nimg {\n  border-style: none; }\n\n/* Forms\n   ========================================================================== */\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n  /* 1 */\n  font-size: 100%;\n  /* 1 */\n  line-height: 1.15;\n  /* 1 */\n  margin: 0;\n  /* 2 */ }\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\nbutton,\ninput {\n  /* 1 */\n  overflow: visible; }\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\nbutton,\nselect {\n  /* 1 */\n  text-transform: none; }\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button; }\n\n/**\n * Remove the inner border and padding in Firefox.\n */\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0; }\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText; }\n\n/**\n * Correct the padding in Firefox.\n */\nfieldset {\n  padding: 0.35em 0.75em 0.625em; }\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\nlegend {\n  box-sizing: border-box;\n  /* 1 */\n  color: inherit;\n  /* 2 */\n  display: table;\n  /* 1 */\n  max-width: 100%;\n  /* 1 */\n  padding: 0;\n  /* 3 */\n  white-space: normal;\n  /* 1 */ }\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\nprogress {\n  vertical-align: baseline; }\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\ntextarea {\n  overflow: auto; }\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */ }\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto; }\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n[type="search"] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */ }\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none; }\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */ }\n\n/* Interactive\n   ========================================================================== */\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\ndetails {\n  display: block; }\n\n/*\n * Add the correct display in all browsers.\n */\nsummary {\n  display: list-item; }\n\n/* Misc\n   ========================================================================== */\n/**\n * Add the correct display in IE 10+.\n */\ntemplate {\n  display: none; }\n\n/**\n * Add the correct display in IE 10.\n */\n[hidden] {\n  display: none; }\n',""])},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,i=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?e:(o=0===i.indexOf("//")?i:0===i.indexOf("/")?n+i:r+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(e,t,n){var r=n(23);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(8)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(7)(!1)).push([e.i,'* {\n  box-sizing: border-box; }\n\nhtml {\n  font-size: 62.5%; }\n\nbody {\n  color: #c14102;\n  font-family: Helvetica, Arial, sans-serif;\n  font-size: 1.6rem;\n  line-height: 1.6; }\n\nbutton {\n  cursor: pointer; }\n\nbutton:disabled {\n  cursor: default; }\n\n.is-active {\n  font-weight: bold; }\n\nh1 {\n  color: #f94414;\n  text-shadow: 2px 2px #6cf4e3; }\n\nhtml,\nbody,\n#root {\n  width: 100%;\n  height: 100%; }\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: sans-serif; }\n\n.loginWrapper {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center; }\n\n.header {\n  background: -moz-linear-gradient(left, #f2f6f8 0%, #d8e1e7 50%, #b5c6d0 51%, #e0eff9 100%); }\n\n.header__content {\n  justify-content: space-between;\n  padding: 1.2rem 0; }\n\n.header__title {\n  text-align: center;\n  color: #3a0c7d;\n  text-decoration: none; }\n  .header__title h1 {\n    margin: 10px; }\n\nul {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  overflow: hidden; }\n\nli {\n  float: left; }\n\nli a {\n  display: flex;\n  color: #000000;\n  text-align: center;\n  padding: 14px 16px;\n  text-decoration: none; }\n\nli a:hover:not(.active) {\n  box-shadow: inset 0 0 0 10px #a3f4ff;\n  opacity: 0.5; }\n\n.active {\n  background-color: #168f1b; }\n\n.box-layout {\n  align-items: center;\n  background: url("/images/thefloat.jpg") no-repeat center;\n  background-size: cover;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  width: 100vw; }\n\n.box-layout__about {\n  align-items: center;\n  background: url("/images/breakfast.jpg") no-repeat center;\n  background-size: cover;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  width: 100vw; }\n\n.box-layout__hotelroom {\n  align-items: center;\n  background: url("/images/hotel-room.jpg") no-repeat center;\n  background-size: cover;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  width: 100vw; }\n\n.box-layout__shop {\n  color: #000000;\n  align-items: center;\n  background: url("/images/thereel.jpg") no-repeat center;\n  background-size: cover;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  width: 100vw; }\n\n.box-layout__box {\n  background: rgba(255, 255, 255, 0.85);\n  border-radius: 3px;\n  padding: 3.2rem 1.6rem;\n  text-align: center;\n  width: 25rem; }\n\n.box-layout__mouseybox {\n  display: flex;\n  font-size: 20px;\n  padding-bottom: 40px;\n  padding-left: 25px;\n  padding-right: 25px;\n  margin-left: auto;\n  margin-right: auto; }\n\n.box-layout__title {\n  margin: 0 0 1.6rem 0;\n  line-height: 1; }\n\n.content-container {\n  margin: 0 auto;\n  padding: 0 1.6rem;\n  max-width: 100rem; }\n\n.footer {\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  text-align: center;\n  background: #a3f4ff; }\n\n.footer__content {\n  justify-content: space-between;\n  padding: 1.2rem 0; }\n\n.footer__title {\n  text-align: center;\n  color: #3a0c7d;\n  text-decoration: none; }\n  .footer__title h1 {\n    margin: 10px; }\n\nul {\n  list-style-type: none;\n  margin: 80;\n  padding: 0;\n  overflow: hidden; }\n\nli {\n  float: left; }\n\nli a {\n  display: flex;\n  color: #000000;\n  text-align: center;\n  padding: 14px 16px;\n  text-decoration: none; }\n\nli a:hover:not(.active) {\n  box-shadow: inset 0 0 0 10px #a3f4ff;\n  opacity: 0.5; }\n\n.active {\n  background-color: #168f1b; }\n',""])},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),i=n(9),a=n.n(i),l=n(11),u=n.n(l),c=n(1),s=n.n(c),f=n(2),p=n.n(f),d=n(3),h=n.n(d);function m(e){return"/"===e.charAt(0)}function y(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var v=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=e&&e.split("/")||[],r=t&&t.split("/")||[],o=e&&m(e),i=t&&m(t),a=o||i;if(e&&m(e)?r=n:n.length&&(r.pop(),r=r.concat(n)),!r.length)return"/";var l=void 0;if(r.length){var u=r[r.length-1];l="."===u||".."===u||""===u}else l=!1;for(var c=0,s=r.length;s>=0;s--){var f=r[s];"."===f?y(r,s):".."===f?(y(r,s),c++):c&&(y(r,s),c--)}if(!a)for(;c--;c)r.unshift("..");!a||""===r[0]||r[0]&&m(r[0])||r.unshift("");var p=r.join("/");return l&&"/"!==p.substr(-1)&&(p+="/"),p};"function"==typeof Symbol&&Symbol.iterator;var g=function(e){return"/"===e.charAt(0)?e:"/"+e},b=function(e,t){return new RegExp("^"+t+"(\\/|\\?|#|$)","i").test(e)},w=function(e,t){return b(e,t)?e.substr(t.length):e},x=function(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e},k=function(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o},E=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},T=function(e,t,n,r){var o=void 0;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var i=t.indexOf("?");return-1!==i&&(n=t.substr(i),t=t.substr(0,i)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=E({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=v(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o},_=function(){var e=null,t=[];return{setPrompt:function(t){return p()(null==e,"A history supports only one prompt at a time"),e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof r?r(i,o):(p()(!1,"A history needs a getUserConfirmation function in order to use a prompt message"),o(!0)):o(!1!==i)}else o(!0)},appendListener:function(e){var n=!0,r=function(){n&&e.apply(void 0,arguments)};return t.push(r),function(){n=!1,t=t.filter(function(e){return e!==r})}},notifyListeners:function(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach(function(e){return e.apply(void 0,n)})}}},C=!("undefined"==typeof window||!window.document||!window.document.createElement),S=function(e,t,n){return e.addEventListener?e.addEventListener(t,n,!1):e.attachEvent("on"+t,n)},P=function(e,t,n){return e.removeEventListener?e.removeEventListener(t,n,!1):e.detachEvent("on"+t,n)},O=function(e,t){return t(window.confirm(e))},N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},j=function(){try{return window.history.state||{}}catch(e){return{}}},M=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};h()(C,"Browser history needs a DOM");var t=window.history,n=function(){var e=window.navigator.userAgent;return(-1===e.indexOf("Android 2.")&&-1===e.indexOf("Android 4.0")||-1===e.indexOf("Mobile Safari")||-1!==e.indexOf("Chrome")||-1!==e.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history}(),r=!(-1===window.navigator.userAgent.indexOf("Trident")),o=e.forceRefresh,i=void 0!==o&&o,a=e.getUserConfirmation,l=void 0===a?O:a,u=e.keyLength,c=void 0===u?6:u,s=e.basename?x(g(e.basename)):"",f=function(e){var t=e||{},n=t.key,r=t.state,o=window.location,i=o.pathname+o.search+o.hash;return p()(!s||b(i,s),'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "'+i+'" to begin with "'+s+'".'),s&&(i=w(i,s)),T(i,r,n)},d=function(){return Math.random().toString(36).substr(2,c)},m=_(),y=function(e){R(V,e),V.length=t.length,m.notifyListeners(V.location,V.action)},v=function(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||I(f(e.state))},E=function(){I(f(j()))},M=!1,I=function(e){M?(M=!1,y()):m.confirmTransitionTo(e,"POP",l,function(t){t?y({action:"POP",location:e}):U(e)})},U=function(e){var t=V.location,n=z.indexOf(t.key);-1===n&&(n=0);var r=z.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(M=!0,L(o))},A=f(j()),z=[A.key],F=function(e){return s+k(e)},L=function(e){t.go(e)},D=0,W=function(e){1===(D+=e)?(S(window,"popstate",v),r&&S(window,"hashchange",E)):0===D&&(P(window,"popstate",v),r&&P(window,"hashchange",E))},B=!1,V={length:t.length,action:"POP",location:A,createHref:F,push:function(e,r){p()(!("object"===(void 0===e?"undefined":N(e))&&void 0!==e.state&&void 0!==r),"You should avoid providing a 2nd state argument to push when the 1st argument is a location-like object that already has state; it is ignored");var o=T(e,r,d(),V.location);m.confirmTransitionTo(o,"PUSH",l,function(e){if(e){var r=F(o),a=o.key,l=o.state;if(n)if(t.pushState({key:a,state:l},null,r),i)window.location.href=r;else{var u=z.indexOf(V.location.key),c=z.slice(0,-1===u?0:u+1);c.push(o.key),z=c,y({action:"PUSH",location:o})}else p()(void 0===l,"Browser history cannot push state in browsers that do not support HTML5 history"),window.location.href=r}})},replace:function(e,r){p()(!("object"===(void 0===e?"undefined":N(e))&&void 0!==e.state&&void 0!==r),"You should avoid providing a 2nd state argument to replace when the 1st argument is a location-like object that already has state; it is ignored");var o=T(e,r,d(),V.location);m.confirmTransitionTo(o,"REPLACE",l,function(e){if(e){var r=F(o),a=o.key,l=o.state;if(n)if(t.replaceState({key:a,state:l},null,r),i)window.location.replace(r);else{var u=z.indexOf(V.location.key);-1!==u&&(z[u]=o.key),y({action:"REPLACE",location:o})}else p()(void 0===l,"Browser history cannot replace state in browsers that do not support HTML5 history"),window.location.replace(r)}})},go:L,goBack:function(){return L(-1)},goForward:function(){return L(1)},block:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=m.setPrompt(e);return B||(W(1),B=!0),function(){return B&&(B=!1,W(-1)),t()}},listen:function(e){var t=m.appendListener(e);return W(1),function(){W(-1),t()}}};return V},I=(Object.assign,"function"==typeof Symbol&&Symbol.iterator,Object.assign,n(4)),U=n.n(I),A=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function z(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var F=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=z(this,e.call.apply(e,[this].concat(i))),r.state={match:r.computeMatch(r.props.history.location.pathname)},z(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:A({},this.context.router,{history:this.props.history,route:{location:this.props.history.location,match:this.state.match}})}},t.prototype.computeMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}},t.prototype.componentWillMount=function(){var e=this,t=this.props,n=t.children,r=t.history;h()(null==n||1===o.a.Children.count(n),"A <Router> may have only one child element"),this.unlisten=r.listen(function(){e.setState({match:e.computeMatch(r.location.pathname)})})},t.prototype.componentWillReceiveProps=function(e){U()(this.props.history===e.history,"You cannot change <Router history>")},t.prototype.componentWillUnmount=function(){this.unlisten()},t.prototype.render=function(){var e=this.props.children;return e?o.a.Children.only(e):null},t}(o.a.Component);F.propTypes={history:s.a.object.isRequired,children:s.a.node},F.contextTypes={router:s.a.object},F.childContextTypes={router:s.a.object.isRequired};var L=F;function D(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var W=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=D(this,e.call.apply(e,[this].concat(i))),r.history=M(r.props),D(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){u()(!this.props.history,"<BrowserRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { BrowserRouter as Router }`.")},t.prototype.render=function(){return o.a.createElement(L,{history:this.history,children:this.props.children})},t}(o.a.Component);W.propTypes={basename:s.a.string,forceRefresh:s.a.bool,getUserConfirmation:s.a.func,keyLength:s.a.number,children:s.a.node};var B=W,V=n(10),$=n.n(V),H={},q=0,Y=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments[2];"string"==typeof t&&(t={path:t});var r=t,o=r.path,i=r.exact,a=void 0!==i&&i,l=r.strict,u=void 0!==l&&l,c=r.sensitive,s=void 0!==c&&c;if(null==o)return n;var f=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=H[n]||(H[n]={});if(r[e])return r[e];var o=[],i={re:$()(e,o,t),keys:o};return q<1e4&&(r[e]=i,q++),i}(o,{end:a,strict:u,sensitive:s}),p=f.re,d=f.keys,h=p.exec(e);if(!h)return null;var m=h[0],y=h.slice(1),v=e===m;return a&&!v?null:{path:o,url:"/"===o&&""===m?"/":m,isExact:v,params:d.reduce(function(e,t,n){return e[t.name]=y[n],e},{})}};var K=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){h()(this.context.router,"You should not use <Switch> outside a <Router>")},t.prototype.componentWillReceiveProps=function(e){U()(!(e.location&&!this.props.location),'<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),U()(!(!e.location&&this.props.location),'<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.')},t.prototype.render=function(){var e=this.context.router.route,t=this.props.children,n=this.props.location||e.location,r=void 0,i=void 0;return o.a.Children.forEach(t,function(t){if(null==r&&o.a.isValidElement(t)){var a=t.props,l=a.path,u=a.exact,c=a.strict,s=a.sensitive,f=a.from,p=l||f;i=t,r=Y(n.pathname,{path:p,exact:u,strict:c,sensitive:s},e.match)}}),r?o.a.cloneElement(i,{location:n,computedMatch:r}):null},t}(o.a.Component);K.contextTypes={router:s.a.shape({route:s.a.object.isRequired}).isRequired},K.propTypes={children:s.a.node,location:s.a.object};var Q=K,X=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function G(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var J=function(e){return 0===o.a.Children.count(e)},Z=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=G(this,e.call.apply(e,[this].concat(i))),r.state={match:r.computeMatch(r.props,r.context.router)},G(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:X({},this.context.router,{route:{location:this.props.location||this.context.router.route.location,match:this.state.match}})}},t.prototype.computeMatch=function(e,t){var n=e.computedMatch,r=e.location,o=e.path,i=e.strict,a=e.exact,l=e.sensitive;if(n)return n;h()(t,"You should not use <Route> or withRouter() outside a <Router>");var u=t.route,c=(r||u.location).pathname;return Y(c,{path:o,strict:i,exact:a,sensitive:l},u.match)},t.prototype.componentWillMount=function(){U()(!(this.props.component&&this.props.render),"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored"),U()(!(this.props.component&&this.props.children&&!J(this.props.children)),"You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored"),U()(!(this.props.render&&this.props.children&&!J(this.props.children)),"You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored")},t.prototype.componentWillReceiveProps=function(e,t){U()(!(e.location&&!this.props.location),'<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),U()(!(!e.location&&this.props.location),'<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.'),this.setState({match:this.computeMatch(e,t.router)})},t.prototype.render=function(){var e=this.state.match,t=this.props,n=t.children,r=t.component,i=t.render,a=this.context.router,l=a.history,u=a.route,c=a.staticContext,s={match:e,location:this.props.location||u.location,history:l,staticContext:c};return r?e?o.a.createElement(r,s):null:i?e?i(s):null:"function"==typeof n?n(s):n&&!J(n)?o.a.Children.only(n):null},t}(o.a.Component);Z.propTypes={computedMatch:s.a.object,path:s.a.string,exact:s.a.bool,strict:s.a.bool,sensitive:s.a.bool,component:s.a.func,render:s.a.func,children:s.a.oneOfType([s.a.func,s.a.node]),location:s.a.object},Z.contextTypes={router:s.a.shape({history:s.a.object.isRequired,route:s.a.object.isRequired,staticContext:s.a.object})},Z.childContextTypes={router:s.a.object.isRequired};var ee=Z,te=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function ne(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var re=function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)},oe=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=ne(this,e.call.apply(e,[this].concat(i))),r.handleClick=function(e){if(r.props.onClick&&r.props.onClick(e),!e.defaultPrevented&&0===e.button&&!r.props.target&&!re(e)){e.preventDefault();var t=r.context.router.history,n=r.props,o=n.replace,i=n.to;o?t.replace(i):t.push(i)}},ne(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.render=function(){var e=this.props,t=(e.replace,e.to),n=e.innerRef,r=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["replace","to","innerRef"]);h()(this.context.router,"You should not use <Link> outside a <Router>"),h()(void 0!==t,'You must specify the "to" property');var i=this.context.router.history,a="string"==typeof t?T(t,null,null,i.location):t,l=i.createHref(a);return o.a.createElement("a",te({},r,{onClick:this.handleClick,href:l,ref:n}))},t}(o.a.Component);oe.propTypes={onClick:s.a.func,target:s.a.string,replace:s.a.bool,to:s.a.oneOfType([s.a.string,s.a.object]).isRequired,innerRef:s.a.oneOfType([s.a.string,s.a.func])},oe.defaultProps={replace:!1},oe.contextTypes={router:s.a.shape({history:s.a.shape({push:s.a.func.isRequired,replace:s.a.func.isRequired,createHref:s.a.func.isRequired}).isRequired}).isRequired};var ie=oe,ae=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},le="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var ue=function(e){var t=e.to,n=e.exact,r=e.strict,i=e.location,a=e.activeClassName,l=e.className,u=e.activeStyle,c=e.style,s=e.isActive,f=e["aria-current"],p=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["to","exact","strict","location","activeClassName","className","activeStyle","style","isActive","aria-current"]),d="object"===(void 0===t?"undefined":le(t))?t.pathname:t,h=d&&d.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1");return o.a.createElement(ee,{path:h,exact:n,strict:r,location:i,children:function(e){var n=e.location,r=e.match,i=!!(s?s(r,n):r);return o.a.createElement(ie,ae({to:t,className:i?[l,a].filter(function(e){return e}).join(" "):l,style:i?ae({},c,u):c,"aria-current":i&&f||null},p))}})};ue.propTypes={to:ie.propTypes.to,exact:s.a.bool,strict:s.a.bool,location:s.a.object,activeClassName:s.a.string,className:s.a.string,activeStyle:s.a.object,style:s.a.object,isActive:s.a.func,"aria-current":s.a.oneOf(["page","step","location","date","time","true"])},ue.defaultProps={activeClassName:"active","aria-current":"page"};var ce=ue,se=function(){return o.a.createElement("div",null,"404 - ",o.a.createElement(ce,{to:"/"},"Go home"))},fe=function(){return o.a.createElement("header",{className:"header"},o.a.createElement("div",{className:"content-container"},o.a.createElement("div",{className:"header__content"},o.a.createElement("h1",{className:"header__title"},"Heaton Fly Shop"),o.a.createElement("div",null,o.a.createElement("ul",null,o.a.createElement("li",null,o.a.createElement(ce,{to:"/landing",activeClassName:"is-active"},"Landing")),o.a.createElement("li",null,o.a.createElement(ce,{to:"/shop",activeClassName:"is-active"},"Fly Shop")),o.a.createElement("li",null,o.a.createElement(ce,{to:"/hotel",activeClassName:"is-active"},"Hotel")),o.a.createElement("li",null,o.a.createElement(ce,{to:"/dining",activeClassName:"is-active"},"Dining")),o.a.createElement("li",null,o.a.createElement(ce,{to:"/mousey",activeClassName:"is-active"},"Mouse Trap")))))))},pe=function(){return o.a.createElement("div",{className:"box-layout"},o.a.createElement("div",{className:"box-layout__box"},o.a.createElement(ce,{className:"header__title",to:"/"}),o.a.createElement("h1",{className:"box-layout__title"},"Fish On."),o.a.createElement("p",null,"Roaring Fork Valley fly fishing since 1988.")))},de=function(){return o.a.createElement("div",{className:"box-layout__hotelroom"},o.a.createElement("div",{className:"box-layout__box"},o.a.createElement("div",{className:"content-container"},o.a.createElement(ce,{className:"header__title",to:"/"}),o.a.createElement("h1",null,"The Lodge"),o.a.createElement("p",null," Modern Cottage style rooms."))))},he=function(){return o.a.createElement("div",{className:"box-layout__about"},o.a.createElement("div",{className:"box-layout__box"},o.a.createElement("div",{className:"content-container"},o.a.createElement(ce,{className:"header__title",to:"/"}),o.a.createElement("h1",null,"le Cafe des Grille"),o.a.createElement("p",null,"Chef Barasso from breafast to Last night dining."))))},me=function(){return o.a.createElement("div",{className:"box-layout__shop"},o.a.createElement("div",{className:"box-layout__box"},o.a.createElement("div",{className:"content-container"},o.a.createElement(ce,{className:"header__title",to:"/"}),o.a.createElement("h1",null,"The Fly Shop"),o.a.createElement("p",null,"The Art of Fly Fishing"))))},ye=function(){return o.a.createElement("footer",{className:"footer"},o.a.createElement("div",{className:"content-container"},o.a.createElement("div",{className:"footer__content"},o.a.createElement("div",null,o.a.createElement("ul",null,o.a.createElement("li",null,o.a.createElement(ce,{to:"/about",activeClassName:"is-active"},"ABOUT US")),o.a.createElement("li",null,o.a.createElement(ce,{to:"/contact",activeClassName:"is-active"},"CONTACT")))))))},ve=function(){return o.a.createElement("div",{className:"box-layout__box"},o.a.createElement("div",{className:"content-container"},o.a.createElement(ce,{className:"footer__title",to:"/"}),o.a.createElement("h1",null,"Aspen, Colorado "),o.a.createElement("p",null)))},ge=function(){return o.a.createElement("div",null,o.a.createElement(ce,{className:"footer__title",to:"/"}),o.a.createElement("h1",null,"Call us "))};function be(e){return(be="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function we(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function xe(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ke(e,t,n){return t&&xe(e.prototype,t),n&&xe(e,n),e}function Ee(e,t){return!t||"object"!==be(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Te(e){return(Te=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _e(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Ce(e,t)}function Ce(e,t){return(Ce=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Se=function(e){function t(){var e,n,r;we(this,t);for(var o=arguments.length,i=new Array(o),a=0;a<o;a++)i[a]=arguments[a];return Ee(r,(n=r=Ee(this,(e=Te(t)).call.apply(e,[this].concat(i))),r.state={x:0,y:0},r.handleMouseMove=function(e){r.setState({x:e.clientX,y:e.clientY})},n))}return _e(t,r["Component"]),ke(t,[{key:"render",value:function(){return o.a.createElement("div",{onMouseMove:this.handleMouseMove},this.props.children(this.state))}}]),t}(),Pe=function(e){function t(){return we(this,t),Ee(this,Te(t).apply(this,arguments))}return _e(t,o.a.Component),ke(t,[{key:"render",value:function(){var e={position:"fixed",border:"10px solid #73AD21",height:"50%",width:"75%",textAlign:"center",color:"black",background:'url("/images/cheese-wedge-icon.png") no-repeat center',backgroundColor:"#344dd1"};return o.a.createElement(Se,null,function(t){return o.a.createElement("ul",{className:"box-layout__mouseybox"},o.a.createElement("div",{style:e},"Mouse Position: (",t.x,", ",t.y,")"))})}}]),t}(),Oe=function(){return o.a.createElement(B,null,o.a.createElement("div",null,o.a.createElement(fe,null),o.a.createElement(Q,null,o.a.createElement(ee,{path:"/",component:pe,exact:!0}),o.a.createElement(ee,{path:"/landing",component:pe}),o.a.createElement(ee,{path:"/hotel",component:de}),o.a.createElement(ee,{path:"/dining",component:he}),o.a.createElement(ee,{path:"/shop",component:me}),o.a.createElement(ee,{path:"/about",component:ge}),o.a.createElement(ee,{path:"/contact",component:ve}),o.a.createElement(ee,{path:"/mousey",component:Pe}),o.a.createElement(ee,{component:se})),o.a.createElement(ye,null)))};n(19),n(22);a.a.render(o.a.createElement(Oe,null),document.getElementById("app"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy93YXJuaW5nL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ludmFyaWFudC9icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvbm9kZV9tb2R1bGVzL3dhcm5pbmcvd2FybmluZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vbm9kZV9tb2R1bGVzL3dhcm5pbmcvd2FybmluZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL25vcm1hbGl6ZS5jc3Mvbm9ybWFsaXplLmNzcz8wNjAzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUuY3NzL25vcm1hbGl6ZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvdXJscy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL3N0eWxlcy5zY3NzPzk2MTEiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0eWxlcy9zdHlsZXMuc2NzcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVzb2x2ZS1wYXRobmFtZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmFsdWUtZXF1YWwvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvUGF0aFV0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL0xvY2F0aW9uVXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvRE9NVXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvY3JlYXRlQnJvd3Nlckhpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvY3JlYXRlSGFzaEhpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvY3JlYXRlTWVtb3J5SGlzdG9yeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL1JvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9Sb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvQnJvd3NlclJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL21hdGNoUGF0aC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL1N3aXRjaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9Td2l0Y2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lcy9Sb3V0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9Sb3V0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9MaW5rLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL05hdkxpbmsuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvTm90Rm91bmRQYWdlLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0hlYWRlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9MYW5kaW5nUGFnZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Ib3RlbFBhZ2UuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvRGluaW5nUGFnZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9TaG9wUGFnZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Gb290ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvQ29udGFjdFBhZ2UuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvQWJvdXRQYWdlLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL01vdXNleVBhZ2UuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JvdXRlcnMvQXBwUm91dGVyLmpzIiwid2VicGFjazovLy8uL3NyYy9hcHAuanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJjb25kaXRpb24iLCJmb3JtYXQiLCJhIiwiYiIsImUiLCJmIiwiZXJyb3IiLCJ1bmRlZmluZWQiLCJFcnJvciIsImFyZ3MiLCJhcmdJbmRleCIsInJlcGxhY2UiLCJmcmFtZXNUb1BvcCIsIndhcm5pbmciLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJhc3NpZ24iLCJ0ZXN0MSIsIlN0cmluZyIsImdldE93blByb3BlcnR5TmFtZXMiLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsIm1hcCIsImpvaW4iLCJ0ZXN0MyIsInNwbGl0IiwiZm9yRWFjaCIsImxldHRlciIsImtleXMiLCJlcnIiLCJzaG91bGRVc2VOYXRpdmUiLCJ0YXJnZXQiLCJzb3VyY2UiLCJmcm9tIiwic3ltYm9scyIsInRvIiwidmFsIiwiVHlwZUVycm9yIiwidG9PYmplY3QiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1c2VTb3VyY2VNYXAiLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwiaXRlbSIsImNvbnRlbnQiLCJjc3NNYXBwaW5nIiwiYnRvYSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VNYXAiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0b0NvbW1lbnQiLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZVJvb3QiLCJjb25jYXQiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibWVkaWFRdWVyeSIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJpZCIsInB1c2giLCJzdHlsZXNJbkRvbSIsImlzT2xkSUUiLCJmbiIsIm1lbW8iLCJhcHBseSIsIm1lbW9pemUiLCJ3aW5kb3ciLCJkb2N1bWVudCIsImFsbCIsImF0b2IiLCJnZXRFbGVtZW50IiwicGFyZW50Iiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwic2luZ2xldG9uIiwic2luZ2xldG9uQ291bnRlciIsInN0eWxlc0luc2VydGVkQXRUb3AiLCJmaXhVcmxzIiwiYWRkU3R5bGVzVG9Eb20iLCJzdHlsZXMiLCJvcHRpb25zIiwiZG9tU3R5bGUiLCJyZWZzIiwiaiIsInBhcnRzIiwiYWRkU3R5bGUiLCJsaXN0VG9TdHlsZXMiLCJuZXdTdHlsZXMiLCJiYXNlIiwicGFydCIsImNzcyIsIm1lZGlhIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGUiLCJpbnNlcnRJbnRvIiwibGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AiLCJpbnNlcnRBdCIsIm5leHRTaWJsaW5nIiwiaW5zZXJ0QmVmb3JlIiwiYXBwZW5kQ2hpbGQiLCJmaXJzdENoaWxkIiwiYmVmb3JlIiwicmVtb3ZlU3R5bGVFbGVtZW50IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwiaWR4IiwiaW5kZXhPZiIsInNwbGljZSIsImNyZWF0ZVN0eWxlRWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJhdHRycyIsInR5cGUiLCJub25jZSIsIm5jIiwiZ2V0Tm9uY2UiLCJhZGRBdHRycyIsImVsIiwic2V0QXR0cmlidXRlIiwib2JqIiwidXBkYXRlIiwicmVtb3ZlIiwicmVzdWx0IiwidHJhbnNmb3JtIiwiZGVmYXVsdCIsInN0eWxlSW5kZXgiLCJhcHBseVRvU2luZ2xldG9uVGFnIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwicmV2b2tlT2JqZWN0VVJMIiwiQmxvYiIsImxpbmsiLCJyZWwiLCJjcmVhdGVMaW5rRWxlbWVudCIsImF1dG9GaXhVcmxzIiwiY29udmVydFRvQWJzb2x1dGVVcmxzIiwiYmxvYiIsIm9sZFNyYyIsImhyZWYiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImNyZWF0ZVRleHROb2RlIiwibmV3T2JqIiwiREVCVUciLCJuZXdMaXN0IiwibWF5UmVtb3ZlIiwicmVwbGFjZVRleHQiLCJ0ZXh0U3RvcmUiLCJpbmRleCIsInJlcGxhY2VtZW50IiwiZmlsdGVyIiwiQm9vbGVhbiIsImNzc05vZGUiLCJjaGlsZE5vZGVzIiwiY2hlY2tEQ0UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJjb25zb2xlIiwiaXNhcnJheSIsInBhdGhUb1JlZ2V4cCIsInBhcnNlIiwiY29tcGlsZSIsInN0ciIsInRva2Vuc1RvRnVuY3Rpb24iLCJ0b2tlbnNUb1JlZ0V4cCIsIlBBVEhfUkVHRVhQIiwiUmVnRXhwIiwicmVzIiwidG9rZW5zIiwicGF0aCIsImRlZmF1bHREZWxpbWl0ZXIiLCJkZWxpbWl0ZXIiLCJleGVjIiwiZXNjYXBlZCIsIm9mZnNldCIsInNsaWNlIiwibmV4dCIsInByZWZpeCIsImNhcHR1cmUiLCJncm91cCIsIm1vZGlmaWVyIiwiYXN0ZXJpc2siLCJwYXJ0aWFsIiwicmVwZWF0Iiwib3B0aW9uYWwiLCJwYXR0ZXJuIiwiZXNjYXBlR3JvdXAiLCJlc2NhcGVTdHJpbmciLCJzdWJzdHIiLCJlbmNvZGVVUklDb21wb25lbnRQcmV0dHkiLCJlbmNvZGVVUkkiLCJjaGFyQ29kZUF0IiwidG9VcHBlckNhc2UiLCJlbmNvZGVBc3RlcmlzayIsIm1hdGNoZXMiLCJBcnJheSIsIm9wdHMiLCJkYXRhIiwiZW5jb2RlIiwicHJldHR5IiwidG9rZW4iLCJzZWdtZW50IiwidGVzdCIsImF0dGFjaEtleXMiLCJyZSIsImZsYWdzIiwic2Vuc2l0aXZlIiwic3RyaWN0IiwiZW5kIiwicm91dGUiLCJlbmRzV2l0aERlbGltaXRlciIsImdyb3VwcyIsIm1hdGNoIiwicmVnZXhwVG9SZWdleHAiLCJhcnJheVRvUmVnZXhwIiwic3RyaW5nVG9SZWdleHAiLCJrIiwiZm9yIiwicSIsInUiLCJ2IiwidyIsIngiLCJ5IiwieiIsIkEiLCJCIiwiQyIsIml0ZXJhdG9yIiwiRCIsImciLCJoIiwiYWEiLCJFIiwiaXNNb3VudGVkIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVTZXRTdGF0ZSIsIkYiLCJHIiwicHJvcHMiLCJjb250ZXh0IiwidXBkYXRlciIsIkgiLCJJIiwiaXNSZWFjdENvbXBvbmVudCIsInNldFN0YXRlIiwiZm9yY2VVcGRhdGUiLCJKIiwiY29uc3RydWN0b3IiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIksiLCJjdXJyZW50IiwiY3VycmVudERpc3BhdGNoZXIiLCJMIiwiTSIsInJlZiIsIl9fc2VsZiIsIl9fc291cmNlIiwiTiIsImNoaWxkcmVuIiwiZGVmYXVsdFByb3BzIiwiJCR0eXBlb2YiLCJfb3duZXIiLCJPIiwiUCIsIlEiLCJSIiwicG9wIiwia2V5UHJlZml4IiwiZnVuYyIsImNvdW50IiwiUyIsIlYiLCJUIiwiVSIsImlzQXJyYXkiLCJkb25lIiwiPSIsIjoiLCJlc2NhcGUiLCJjYSIsImRhIiwiVyIsImJhIiwiWCIsIkNoaWxkcmVuIiwidG9BcnJheSIsIm9ubHkiLCJjcmVhdGVSZWYiLCJDb21wb25lbnQiLCJQdXJlQ29tcG9uZW50IiwiY3JlYXRlQ29udGV4dCIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9jdXJyZW50VmFsdWUiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIlByb3ZpZGVyIiwiQ29uc3VtZXIiLCJfY29udGV4dCIsImZvcndhcmRSZWYiLCJyZW5kZXIiLCJsYXp5IiwiX2N0b3IiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsImNvbXBhcmUiLCJGcmFnbWVudCIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsImNsb25lRWxlbWVudCIsImNyZWF0ZUZhY3RvcnkiLCJpc1ZhbGlkRWxlbWVudCIsInZlcnNpb24iLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsIlJlYWN0Q3VycmVudE93bmVyIiwidW5zdGFibGVfQ29uY3VycmVudE1vZGUiLCJ1bnN0YWJsZV9Qcm9maWxlciIsIlkiLCJaIiwiZWEiLCJmYSIsImhhIiwiaWEiLCJqYSIsIm9uRXJyb3IiLCJrYSIsIm1hIiwibmEiLCJvYSIsInBhIiwiZXh0cmFjdEV2ZW50cyIsImV2ZW50VHlwZXMiLCJxYSIsInBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzIiwicmEiLCJyZWdpc3RyYXRpb25OYW1lIiwic2EiLCJ0YSIsImRlcGVuZGVuY2llcyIsInVhIiwidmEiLCJ3YSIsInhhIiwiY3VycmVudFRhcmdldCIsImxhIiwieWEiLCJ6YSIsIkFhIiwiQmEiLCJfZGlzcGF0Y2hMaXN0ZW5lcnMiLCJfZGlzcGF0Y2hJbnN0YW5jZXMiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImlzUGVyc2lzdGVudCIsInJlbGVhc2UiLCJDYSIsImluamVjdEV2ZW50UGx1Z2luT3JkZXIiLCJpbmplY3RFdmVudFBsdWdpbnNCeU5hbWUiLCJEYSIsInN0YXRlTm9kZSIsImRpc2FibGVkIiwiRWEiLCJGYSIsIk1hdGgiLCJyYW5kb20iLCJHYSIsIkhhIiwiSWEiLCJ0YWciLCJKYSIsIkthIiwiTGEiLCJNYSIsInJldHVybiIsIk5hIiwiZGlzcGF0Y2hDb25maWciLCJPYSIsIl90YXJnZXRJbnN0IiwiUGEiLCJRYSIsIlJhIiwiU2EiLCJUYSIsInRvTG93ZXJDYXNlIiwiVWEiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJWYSIsIldhIiwiWGEiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiWWEiLCJaYSIsIiRhIiwiYWIiLCJiYiIsImNiIiwiZWIiLCJmYiIsImdiIiwidGV4dENvbnRlbnQiLCJoYiIsImliIiwibmF0aXZlRXZlbnQiLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJrYiIsImV2ZW50UG9vbCIsImxiIiwiZGVzdHJ1Y3RvciIsImpiIiwiZ2V0UG9vbGVkIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiRGF0ZSIsIm5vdyIsImlzVHJ1c3RlZCIsImV4dGVuZCIsIm1iIiwibmIiLCJvYiIsInBiIiwicWIiLCJkb2N1bWVudE1vZGUiLCJyYiIsInNiIiwidGIiLCJ1YiIsImJlZm9yZUlucHV0IiwiYnViYmxlZCIsImNhcHR1cmVkIiwiY29tcG9zaXRpb25FbmQiLCJjb21wb3NpdGlvblN0YXJ0IiwiY29tcG9zaXRpb25VcGRhdGUiLCJ2YiIsIndiIiwia2V5Q29kZSIsInhiIiwiZGV0YWlsIiwieWIiLCJCYiIsImxvY2FsZSIsIndoaWNoIiwiemIiLCJjdHJsS2V5IiwiYWx0S2V5IiwibWV0YUtleSIsImNoYXIiLCJBYiIsIkNiIiwiRGIiLCJFYiIsIkhiIiwiSWIiLCJKYiIsIktiIiwiTGIiLCJNYiIsIk5iIiwiT2IiLCJQYiIsImNvbG9yIiwiZGF0ZSIsImRhdGV0aW1lIiwiZGF0ZXRpbWUtbG9jYWwiLCJlbWFpbCIsIm1vbnRoIiwibnVtYmVyIiwicGFzc3dvcmQiLCJyYW5nZSIsInNlYXJjaCIsInRlbCIsInRleHQiLCJ0aW1lIiwidXJsIiwid2VlayIsIlFiIiwibm9kZU5hbWUiLCJSYiIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsIm5vZGVUeXBlIiwiU2IiLCJUYiIsIlZiIiwiX3ZhbHVlVHJhY2tlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInNldCIsImNvbmZpZ3VyYWJsZSIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJVYiIsIldiIiwiY2hlY2tlZCIsIlhiIiwiWWIiLCJaYiIsIiRiIiwiYWMiLCJiYyIsImNjIiwiZGMiLCJlYyIsImZjIiwiZ2MiLCJoYyIsImljIiwiamMiLCJrYyIsImxjIiwibWMiLCJkaXNwbGF5TmFtZSIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwib2MiLCJwYyIsInFjIiwicmMiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwidmMiLCJ4YyIsInljIiwidGMiLCJpc05hTiIsInVjIiwic2MiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsInpjIiwiQWMiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIkJjIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIkNjIiwiRGMiLCJFYyIsIkZjIiwib3duZXJEb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJ0YWJJbmRleCIsIkdjIiwiY2hhbmdlIiwiSGMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJQYyIsImRldGFjaEV2ZW50IiwiUWMiLCJSYyIsImF0dGFjaEV2ZW50IiwiU2MiLCJUYyIsIlVjIiwiVmMiLCJfaXNJbnB1dEV2ZW50U3VwcG9ydGVkIiwiV2MiLCJ2aWV3IiwiWGMiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiWWMiLCJnZXRNb2RpZmllclN0YXRlIiwiWmMiLCIkYyIsImFkIiwiYmQiLCJjZCIsImRkIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJzaGlmdEtleSIsImJ1dHRvbiIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJ0b0VsZW1lbnQiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJlZCIsInBvaW50ZXJJZCIsIndpZHRoIiwiaGVpZ2h0IiwicHJlc3N1cmUiLCJ0YW5nZW50aWFsUHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwidHdpc3QiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsImZkIiwibW91c2VFbnRlciIsIm1vdXNlTGVhdmUiLCJwb2ludGVyRW50ZXIiLCJwb2ludGVyTGVhdmUiLCJnZCIsImRlZmF1bHRWaWV3IiwicGFyZW50V2luZG93IiwiYWx0ZXJuYXRlIiwiaGQiLCJqZCIsImtkIiwiZWZmZWN0VGFnIiwibGQiLCJuZCIsImNoaWxkIiwic2libGluZyIsIm1kIiwib2QiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwicGQiLCJjbGlwYm9hcmREYXRhIiwicWQiLCJyZCIsImNoYXJDb2RlIiwic2QiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwidGQiLCI4IiwiOSIsIjEyIiwiMTMiLCIxNiIsIjE3IiwiMTgiLCIxOSIsIjIwIiwiMjciLCIzMiIsIjMzIiwiMzQiLCIzNSIsIjM2IiwiMzciLCIzOCIsIjM5IiwiNDAiLCI0NSIsIjQ2IiwiMTEyIiwiMTEzIiwiMTE0IiwiMTE1IiwiMTE2IiwiMTE3IiwiMTE4IiwiMTE5IiwiMTIwIiwiMTIxIiwiMTIyIiwiMTIzIiwiMTQ0IiwiMTQ1IiwiMjI0IiwidWQiLCJsb2NhdGlvbiIsInZkIiwiZGF0YVRyYW5zZmVyIiwid2QiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwieGQiLCJ5ZCIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwiemQiLCJBZCIsIkJkIiwiQ2QiLCJpc0ludGVyYWN0aXZlIiwiRGQiLCJpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGUiLCJFZCIsIkZkIiwiR2QiLCJ0YXJnZXRJbnN0IiwiYW5jZXN0b3JzIiwiY29udGFpbmVySW5mbyIsInRvcExldmVsVHlwZSIsIkhkIiwiSWQiLCJKZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJLZCIsIkxkIiwiTWQiLCJOZCIsIk9kIiwiUGQiLCJib2R5IiwiUWQiLCJSZCIsIm5vZGUiLCJUZCIsIlVkIiwiY29udGVudEVkaXRhYmxlIiwiVmQiLCJXZCIsInNlbGVjdCIsIlhkIiwiWWQiLCJaZCIsIiRkIiwiYWUiLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0Iiwic2VsZWN0aW9uRW5kIiwiYW5jaG9yTm9kZSIsImdldFNlbGVjdGlvbiIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0IiwiYmUiLCJvblNlbGVjdCIsImVlIiwiZGUiLCJmZSIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiZ2UiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsImhlIiwiaWUiLCJqZSIsIlNpbXBsZUV2ZW50UGx1Z2luIiwiRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIiwiQ2hhbmdlRXZlbnRQbHVnaW4iLCJTZWxlY3RFdmVudFBsdWdpbiIsIkJlZm9yZUlucHV0RXZlbnRQbHVnaW4iLCJrZSIsImh0bWwiLCJtYXRobWwiLCJzdmciLCJsZSIsIm1lIiwibmUiLCJvZSIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJwZSIsImxhc3RDaGlsZCIsIm5vZGVWYWx1ZSIsInFlIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJzZSIsInRyaW0iLCJ0ZSIsInNldFByb3BlcnR5IiwiY2hhckF0Iiwic3Vic3RyaW5nIiwidWUiLCJtZW51aXRlbSIsImFyZWEiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwidmUiLCJ3ZSIsImlzIiwieGUiLCJibHVyIiwiZm9jdXMiLCJ5ZSIsInplIiwiQWUiLCJCZSIsImF1dG9Gb2N1cyIsIkNlIiwiX19odG1sIiwiRGUiLCJzZXRUaW1lb3V0IiwiRWUiLCJjbGVhclRpbWVvdXQiLCJGZSIsIkdlIiwiU2V0IiwiSGUiLCJJZSIsIkplIiwiS2UiLCJMZSIsImNvbnRleHRUeXBlcyIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsImNoaWxkQ29udGV4dFR5cGVzIiwiTWUiLCJOZSIsIk9lIiwiUGUiLCJnZXRDaGlsZENvbnRleHQiLCJRZSIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiUmUiLCJTZSIsIlRlIiwiVWUiLCJlbGVtZW50VHlwZSIsInBlbmRpbmdQcm9wcyIsImZpcnN0Q29udGV4dERlcGVuZGVuY3kiLCJtZW1vaXplZFN0YXRlIiwidXBkYXRlUXVldWUiLCJtZW1vaXplZFByb3BzIiwibGFzdEVmZmVjdCIsImZpcnN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImNoaWxkRXhwaXJhdGlvblRpbWUiLCJleHBpcmF0aW9uVGltZSIsIlhlIiwiWmUiLCIkZSIsImFmIiwiYmYiLCJjZiIsImRmIiwicGVuZGluZ0NoaWxkcmVuIiwiaW1wbGVtZW50YXRpb24iLCJlZiIsImRpZEVycm9yIiwiZWFybGllc3RQZW5kaW5nVGltZSIsImxhdGVzdFBlbmRpbmdUaW1lIiwiZmYiLCJnZiIsImxhdGVzdFBpbmdlZFRpbWUiLCJlYXJsaWVzdFN1c3BlbmRlZFRpbWUiLCJsYXRlc3RTdXNwZW5kZWRUaW1lIiwiaGYiLCJuZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbiIsImpmIiwia2YiLCJiYXNlU3RhdGUiLCJmaXJzdFVwZGF0ZSIsImxhc3RVcGRhdGUiLCJmaXJzdENhcHR1cmVkVXBkYXRlIiwibGFzdENhcHR1cmVkVXBkYXRlIiwiZmlyc3RDYXB0dXJlZEVmZmVjdCIsImxhc3RDYXB0dXJlZEVmZmVjdCIsImxmIiwibWYiLCJwYXlsb2FkIiwiY2FsbGJhY2siLCJuZiIsIm9mIiwicGYiLCJxZiIsInJmIiwic2YiLCJ0ZiIsInVmIiwidmYiLCJzdGFjayIsIndmIiwieGYiLCJ5ZiIsInpmIiwiQWYiLCJCZiIsIkNmIiwiRGYiLCJvYnNlcnZlZEJpdHMiLCJFZiIsIkZmIiwiR2YiLCJIZiIsIklmIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsIkpmIiwiS2YiLCJMZiIsIk5mIiwiT2YiLCJQZiIsIlVmIiwiX3JlYWN0SW50ZXJuYWxGaWJlciIsIlFmIiwiUmYiLCJTZiIsIlRmIiwiVmYiLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJXZiIsImNvbnRleHRUeXBlIiwicmVhZENvbnRleHQiLCJzdGF0ZSIsIlhmIiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiWWYiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnREaWRNb3VudCIsIlpmIiwiJGYiLCJfc3RyaW5nUmVmIiwiYWciLCJiZyIsIk1hcCIsImRlbGV0ZSIsImNnIiwiZGciLCJlZyIsImZnIiwiZ2ciLCJoZyIsImlnIiwiamciLCJrZyIsImxnIiwibWciLCJuZyIsIm9nIiwicGciLCJxZyIsInJnIiwic2ciLCJ0ZyIsInVnIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwidmciLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJ3ZyIsInBlbmRpbmdDb250ZXh0IiwieGciLCJ0aW1lZE91dEF0IiwiZmFsbGJhY2siLCJ5ZyIsInRoZW4iLCJNZiIsIlllIiwiZWxlbWVudCIsImh5ZHJhdGUiLCJoaWRkZW4iLCJ1bnN0YWJsZV9vYnNlcnZlZEJpdHMiLCJ6ZyIsIkFnIiwiQmciLCJGZyIsIkdnIiwiSGciLCJJZyIsIkpnIiwiS2ciLCJkZXN0cm95IiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJMZyIsIk1nIiwiTmciLCJfcmVhY3RSb290Q29udGFpbmVyIiwib25jbGljayIsIk9nIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsImRpc3BsYXkiLCJQZyIsIlFnIiwiUmciLCJjb21wb25lbnREaWRDYXRjaCIsIlNnIiwiYWRkIiwiY29tcG9uZW50U3RhY2siLCJUZyIsIm9uQ2xpY2siLCJVZyIsIlZnIiwiV2ciLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJjaCIsImRoIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJlaCIsImNyZWF0ZUVsZW1lbnROUyIsImZoIiwiZ2giLCJwZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWUiLCJoaCIsIm1heER1cmF0aW9uIiwiaWgiLCJoYXMiLCJmaW5pc2hlZFdvcmsiLCJqaCIsImtoIiwibGgiLCJtaCIsIm5oIiwib2giLCJwaCIsInFoIiwicmgiLCJzaCIsInRoIiwidWgiLCJ2aCIsIndoIiwieGgiLCJ5aCIsInpoIiwidW5zdGFibGVfbm93IiwiQWgiLCJCaCIsIkNoIiwiRGgiLCJFaCIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJGaCIsInRpbWVvdXQiLCJ0aW1lb3V0SGFuZGxlIiwiSGgiLCJJaCIsIm5leHRTY2hlZHVsZWRSb290IiwiSmgiLCJLaCIsIkxoIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJfb25Db21wbGV0ZSIsIk1oIiwiZmlyc3RCYXRjaCIsIl9leHBpcmF0aW9uVGltZSIsIl9kZWZlciIsInJhbmdlQ291bnQiLCJkYiIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJUaCIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiU2QiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwibWluIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJGYiIsIkdiIiwid2MiLCJjaSIsIkNnIiwiRGciLCJkaSIsIkljIiwiRWciLCJjZSIsIk5oIiwiT2giLCJQaCIsIlFoIiwiUmgiLCJTaCIsIlZoIiwiX3Jvb3QiLCJfY2FsbGJhY2tzIiwiX25leHQiLCJfaGFzQ2hpbGRyZW4iLCJfZGlkQ29tcGxldGUiLCJfY2hpbGRyZW4iLCJXaCIsIl9kaWRDb21taXQiLCJfb25Db21taXQiLCJYaCIsIl9pbnRlcm5hbFJvb3QiLCJZaCIsIiRoIiwibGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiaGFzQXR0cmlidXRlIiwiWmgiLCJhaSIsIlVoIiwicXVlcnlTZWxlY3RvckFsbCIsImZvcm0iLCJjb21taXQiLCJ1bm1vdW50IiwiY3JlYXRlQmF0Y2giLCJiaSIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9pbnRlcmFjdGl2ZVVwZGF0ZXMiLCJmbHVzaFN5bmMiLCJ1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQiLCJFdmVudHMiLCJ1bnN0YWJsZV9jcmVhdGVSb290IiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsIm9uQ29tbWl0RmliZXJSb290Iiwib25Db21taXRGaWJlclVubW91bnQiLCJWZSIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiYnVuZGxlVHlwZSIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJlaSIsImZpIiwicHJldmlvdXMiLCJwcmlvcml0eUxldmVsIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJwZXJmb3JtYW5jZSIsIl9zY2hlZE1vY2siLCJwb3N0TWVzc2FnZSIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJ1bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJzaGltIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiZ2V0U2hpbSIsImlzUmVxdWlyZWQiLCJSZWFjdFByb3BUeXBlcyIsImFycmF5IiwiYm9vbCIsInN0cmluZyIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJpbnN0YW5jZU9mIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsImFyciIsImhtciIsImxvY2FscyIsImJhc2VVcmwiLCJwcm90b2NvbCIsImhvc3QiLCJjdXJyZW50RGlyIiwicGF0aG5hbWUiLCJmdWxsTWF0Y2giLCJvcmlnVXJsIiwibmV3VXJsIiwidW5xdW90ZWRPcmlnVXJsIiwiJDEiLCJpc0Fic29sdXRlIiwic3BsaWNlT25lIiwicmVzb2x2ZV9wYXRobmFtZSIsInRvUGFydHMiLCJmcm9tUGFydHMiLCJpc1RvQWJzIiwiaXNGcm9tQWJzIiwibXVzdEVuZEFicyIsImhhc1RyYWlsaW5nU2xhc2giLCJsYXN0IiwidXAiLCJ1bnNoaWZ0IiwiYWRkTGVhZGluZ1NsYXNoIiwiaGFzQmFzZW5hbWUiLCJzdHJpcEJhc2VuYW1lIiwic3RyaXBUcmFpbGluZ1NsYXNoIiwiY3JlYXRlUGF0aCIsImhhc2giLCJfZXh0ZW5kcyIsIkxvY2F0aW9uVXRpbHNfY3JlYXRlTG9jYXRpb24iLCJjdXJyZW50TG9jYXRpb24iLCJoYXNoSW5kZXgiLCJzZWFyY2hJbmRleCIsInBhcnNlUGF0aCIsImRlY29kZVVSSSIsIlVSSUVycm9yIiwiZXNfY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIiLCJwcm9tcHQiLCJsaXN0ZW5lcnMiLCJzZXRQcm9tcHQiLCJuZXh0UHJvbXB0IiwiYnJvd3Nlcl9kZWZhdWx0IiwiY29uZmlybVRyYW5zaXRpb25UbyIsImFjdGlvbiIsImdldFVzZXJDb25maXJtYXRpb24iLCJhcHBlbmRMaXN0ZW5lciIsImlzQWN0aXZlIiwibGlzdGVuZXIiLCJub3RpZnlMaXN0ZW5lcnMiLCJfbGVuIiwiX2tleSIsImNhblVzZURPTSIsImV2ZW50IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImdldENvbmZpcm1hdGlvbiIsIm1lc3NhZ2UiLCJjb25maXJtIiwiY3JlYXRlQnJvd3Nlckhpc3RvcnlfdHlwZW9mIiwiY3JlYXRlQnJvd3Nlckhpc3RvcnlfZXh0ZW5kcyIsImdldEhpc3RvcnlTdGF0ZSIsImhpc3RvcnkiLCJlc19jcmVhdGVCcm93c2VySGlzdG9yeSIsImludmFyaWFudF9icm93c2VyX2RlZmF1bHQiLCJnbG9iYWxIaXN0b3J5IiwiY2FuVXNlSGlzdG9yeSIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsInN1cHBvcnRzSGlzdG9yeSIsIm5lZWRzSGFzaENoYW5nZUxpc3RlbmVyIiwiX3Byb3BzJGZvcmNlUmVmcmVzaCIsImZvcmNlUmVmcmVzaCIsIl9wcm9wcyRnZXRVc2VyQ29uZmlybSIsIl9wcm9wcyRrZXlMZW5ndGgiLCJrZXlMZW5ndGgiLCJiYXNlbmFtZSIsImdldERPTUxvY2F0aW9uIiwiaGlzdG9yeVN0YXRlIiwiX3JlZiIsIl93aW5kb3ckbG9jYXRpb24iLCJjcmVhdGVLZXkiLCJ0cmFuc2l0aW9uTWFuYWdlciIsIm5leHRTdGF0ZSIsImhhbmRsZVBvcFN0YXRlIiwiaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudCIsImhhbmRsZVBvcCIsImhhbmRsZUhhc2hDaGFuZ2UiLCJmb3JjZU5leHRQb3AiLCJvayIsInJldmVydFBvcCIsImZyb21Mb2NhdGlvbiIsInRvTG9jYXRpb24iLCJ0b0luZGV4IiwiYWxsS2V5cyIsImZyb21JbmRleCIsImRlbHRhIiwiZ28iLCJpbml0aWFsTG9jYXRpb24iLCJjcmVhdGVIcmVmIiwibGlzdGVuZXJDb3VudCIsImNoZWNrRE9NTGlzdGVuZXJzIiwiaXNCbG9ja2VkIiwicHVzaFN0YXRlIiwicHJldkluZGV4IiwibmV4dEtleXMiLCJyZXBsYWNlU3RhdGUiLCJnb0JhY2siLCJnb0ZvcndhcmQiLCJibG9jayIsInVuYmxvY2siLCJsaXN0ZW4iLCJ1bmxpc3RlbiIsIlJvdXRlcl9leHRlbmRzIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJzZWxmIiwiUmVmZXJlbmNlRXJyb3IiLCJSb3V0ZXJfUm91dGVyIiwiX1JlYWN0JENvbXBvbmVudCIsIlJvdXRlciIsIl90ZW1wIiwiX3RoaXMiLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiX2NsYXNzQ2FsbENoZWNrIiwiY29tcHV0ZU1hdGNoIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwid3JpdGFibGUiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIl9pbmhlcml0cyIsInJvdXRlciIsInBhcmFtcyIsImlzRXhhY3QiLCJfdGhpczIiLCJfcHJvcHMiLCJyZWFjdF9kZWZhdWx0IiwibmV4dFByb3BzIiwid2FybmluZ193YXJuaW5nX2RlZmF1bHQiLCJwcm9wVHlwZXMiLCJwcm9wX3R5cGVzX2RlZmF1bHQiLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX1JvdXRlciIsIkJyb3dzZXJSb3V0ZXJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIkJyb3dzZXJSb3V0ZXJfQnJvd3NlclJvdXRlciIsIkJyb3dzZXJSb3V0ZXIiLCJCcm93c2VyUm91dGVyX2NsYXNzQ2FsbENoZWNrIiwiQnJvd3NlclJvdXRlcl9pbmhlcml0cyIsIndhcm5pbmdfZGVmYXVsdCIsImVzX0Jyb3dzZXJSb3V0ZXIiLCJwYXR0ZXJuQ2FjaGUiLCJjYWNoZUNvdW50IiwiZXNfbWF0Y2hQYXRoIiwiX29wdGlvbnMiLCJfb3B0aW9ucyRleGFjdCIsIl9vcHRpb25zJHN0cmljdCIsIl9vcHRpb25zJHNlbnNpdGl2ZSIsIl9jb21waWxlUGF0aCIsImNhY2hlS2V5IiwiY2FjaGUiLCJjb21waWxlZFBhdHRlcm4iLCJwYXRoX3RvX3JlZ2V4cF9kZWZhdWx0IiwibWF0Y2hQYXRoX2NvbXBpbGVQYXRoIiwidmFsdWVzIiwicmVkdWNlIiwiU3dpdGNoX1N3aXRjaCIsIlN3aXRjaCIsIlN3aXRjaF9jbGFzc0NhbGxDaGVjayIsIlN3aXRjaF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiU3dpdGNoX2luaGVyaXRzIiwiX2VsZW1lbnQkcHJvcHMiLCJwYXRoUHJvcCIsImNvbXB1dGVkTWF0Y2giLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX1N3aXRjaCIsIlJvdXRlX2V4dGVuZHMiLCJSb3V0ZV9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiUm91dGVfaXNFbXB0eUNoaWxkcmVuIiwiUm91dGVfUm91dGUiLCJSb3V0ZSIsIlJvdXRlX2NsYXNzQ2FsbENoZWNrIiwiUm91dGVfaW5oZXJpdHMiLCJjb21wb25lbnQiLCJuZXh0Q29udGV4dCIsIl9jb250ZXh0JHJvdXRlciIsInN0YXRpY0NvbnRleHQiLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX1JvdXRlIiwiTGlua19leHRlbmRzIiwiTGlua19wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiaXNNb2RpZmllZEV2ZW50IiwiTGlua19MaW5rIiwiTGluayIsIkxpbmtfY2xhc3NDYWxsQ2hlY2siLCJoYW5kbGVDbGljayIsIl90aGlzJHByb3BzIiwiTGlua19pbmhlcml0cyIsImlubmVyUmVmIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwiZXNfTGluayIsIk5hdkxpbmtfZXh0ZW5kcyIsIk5hdkxpbmtfdHlwZW9mIiwiTmF2TGlua19OYXZMaW5rIiwiYWN0aXZlQ2xhc3NOYW1lIiwiY2xhc3NOYW1lIiwiYWN0aXZlU3R5bGUiLCJnZXRJc0FjdGl2ZSIsImFyaWFDdXJyZW50IiwicmVzdCIsIk5hdkxpbmtfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJlc2NhcGVkUGF0aCIsIl9yZWYyIiwiYXJpYS1jdXJyZW50IiwiZXNfTmF2TGluayIsIk5vdEZvdW5kUGFnZSIsIkhlYWRlciIsIkxhbmRpbmdQYWdlIiwiSG90ZWxQYWdlIiwiRGluaW5nUGFnZSIsIlNob3BQYWdlIiwiRm9vdGVyIiwiQ29udGFjdFBhZ2UiLCJBYm91dFBhZ2UiLCJNb3VzZSIsImhhbmRsZU1vdXNlTW92ZSIsIm9uTW91c2VNb3ZlIiwiTW91c2V5UGFnZSIsIlJlYWN0IiwicG9zaXRpb24iLCJib3JkZXIiLCJ0ZXh0QWxpZ24iLCJiYWNrZ3JvdW5kIiwiYmFja2dyb3VuZENvbG9yIiwiTW91c2V5UGFnZV9Nb3VzZSIsIm1vdXNlIiwiQXBwUm91dGVyIiwiY29tcG9uZW50c19IZWFkZXIiLCJjb21wb25lbnRzX0Zvb3RlciIsIlJlYWN0RE9NIiwicm91dGVyc19BcHBSb3V0ZXIiLCJnZXRFbGVtZW50QnlJZCJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBQUEsS0FHQSxTQUFBQyxFQUFBQyxHQUdBLEdBQUFGLEVBQUFFLEdBQ0EsT0FBQUYsRUFBQUUsR0FBQUMsUUFHQSxJQUFBQyxFQUFBSixFQUFBRSxJQUNBRyxFQUFBSCxFQUNBSSxHQUFBLEVBQ0FILFlBVUEsT0FOQUksRUFBQUwsR0FBQU0sS0FBQUosRUFBQUQsUUFBQUMsSUFBQUQsUUFBQUYsR0FHQUcsRUFBQUUsR0FBQSxFQUdBRixFQUFBRCxRQUtBRixFQUFBUSxFQUFBRixFQUdBTixFQUFBUyxFQUFBVixF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QSxXQUNFNnZDLEVBQUFqM0MsRUFBQW9ILGNBQUM4MUMsR0FBRCxNQUNBakcsRUFBQWozQyxFQUFBb0gsY0FBQ2l5QyxFQUFELEtBQ0VwQyxFQUFBajNDLEVBQUFvSCxjQUFDNnlDLElBQU1udkMsS0FBSyxJQUFJK3VDLFVBQVdpQyxHQUFhMU4sT0FBTyxJQUMvQzZJLEVBQUFqM0MsRUFBQW9ILGNBQUM2eUMsSUFBTW52QyxLQUFLLFdBQVcrdUMsVUFBV2lDLEtBQ2xDN0UsRUFBQWozQyxFQUFBb0gsY0FBQzZ5QyxJQUFNbnZDLEtBQUssU0FBUyt1QyxVQUFXa0MsS0FDaEM5RSxFQUFBajNDLEVBQUFvSCxjQUFDNnlDLElBQU1udkMsS0FBSyxVQUFVK3VDLFVBQVdtQyxLQUNqQy9FLEVBQUFqM0MsRUFBQW9ILGNBQUM2eUMsSUFBTW52QyxLQUFLLFFBQVErdUMsVUFBV29DLEtBQy9CaEYsRUFBQWozQyxFQUFBb0gsY0FBQzZ5QyxJQUFNbnZDLEtBQUssU0FBUyt1QyxVQUFXdUMsS0FDaENuRixFQUFBajNDLEVBQUFvSCxjQUFDNnlDLElBQU1udkMsS0FBSyxXQUFXK3VDLFVBQVdzQyxLQUNsQ2xGLEVBQUFqM0MsRUFBQW9ILGNBQUM2eUMsSUFBTW52QyxLQUFLLFVBQVUrdUMsVUFBVzJDLEtBQ2pDdkYsRUFBQWozQyxFQUFBb0gsY0FBQzZ5QyxJQUFNSixVQUFXK0IsTUFFcEIzRSxFQUFBajNDLEVBQUFvSCxjQUFDKzFDLEdBQUQscUJDdEJOQyxJQUFTbHFDLE9BQU8rakMsRUFBQWozQyxFQUFBb0gsY0FBQ2kyQyxHQUFELE1BQWU5NEMsU0FBUys0QyxlQUFlIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAyNCk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJFQUNUX0VMRU1FTlRfVFlQRSA9ICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmXG4gICAgU3ltYm9sLmZvciAmJlxuICAgIFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKSkgfHxcbiAgICAweGVhYzc7XG5cbiAgdmFyIGlzVmFsaWRFbGVtZW50ID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnICYmXG4gICAgICBvYmplY3QgIT09IG51bGwgJiZcbiAgICAgIG9iamVjdC4kJHR5cGVvZiA9PT0gUkVBQ1RfRUxFTUVOVF9UWVBFO1xuICB9O1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoaXNWYWxpZEVsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTQtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTaW1pbGFyIHRvIGludmFyaWFudCBidXQgb25seSBsb2dzIGEgd2FybmluZyBpZiB0aGUgY29uZGl0aW9uIGlzIG5vdCBtZXQuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGxvZyBpc3N1ZXMgaW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzIGluIGNyaXRpY2FsXG4gKiBwYXRocy4gUmVtb3ZpbmcgdGhlIGxvZ2dpbmcgY29kZSBmb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMgd2lsbCBrZWVwIHRoZVxuICogc2FtZSBsb2dpYyBhbmQgZm9sbG93IHRoZSBzYW1lIGNvZGUgcGF0aHMuXG4gKi9cblxudmFyIHdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB3YXJuaW5nID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGFyZ3MpIHtcbiAgICB2YXIgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBhcmdzID0gbmV3IEFycmF5KGxlbiA+IDIgPyBsZW4gLSAyIDogMCk7XG4gICAgZm9yICh2YXIga2V5ID0gMjsga2V5IDwgbGVuOyBrZXkrKykge1xuICAgICAgYXJnc1trZXkgLSAyXSA9IGFyZ3VtZW50c1trZXldO1xuICAgIH1cbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ2B3YXJuaW5nKGNvbmRpdGlvbiwgZm9ybWF0LCAuLi5hcmdzKWAgcmVxdWlyZXMgYSB3YXJuaW5nICcgK1xuICAgICAgICAnbWVzc2FnZSBhcmd1bWVudCdcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKGZvcm1hdC5sZW5ndGggPCAxMCB8fCAoL15bc1xcV10qJC8pLnRlc3QoZm9ybWF0KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnVGhlIHdhcm5pbmcgZm9ybWF0IHNob3VsZCBiZSBhYmxlIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgJyArXG4gICAgICAgICd3YXJuaW5nLiBQbGVhc2UsIHVzZSBhIG1vcmUgZGVzY3JpcHRpdmUgZm9ybWF0IHRoYW46ICcgKyBmb3JtYXRcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKCFjb25kaXRpb24pIHtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICB2YXIgbWVzc2FnZSA9ICdXYXJuaW5nOiAnICtcbiAgICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgICAgICB9KTtcbiAgICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICAgIH1cbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgICAvLyB0byBmaW5kIHRoZSBjYWxsc2l0ZSB0aGF0IGNhdXNlZCB0aGlzIHdhcm5pbmcgdG8gZmlyZS5cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgICAgfSBjYXRjaCh4KSB7fVxuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB3YXJuaW5nO1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVXNlIGludmFyaWFudCgpIHRvIGFzc2VydCBzdGF0ZSB3aGljaCB5b3VyIHByb2dyYW0gYXNzdW1lcyB0byBiZSB0cnVlLlxuICpcbiAqIFByb3ZpZGUgc3ByaW50Zi1zdHlsZSBmb3JtYXQgKG9ubHkgJXMgaXMgc3VwcG9ydGVkKSBhbmQgYXJndW1lbnRzXG4gKiB0byBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHdoYXQgYnJva2UgYW5kIHdoYXQgeW91IHdlcmVcbiAqIGV4cGVjdGluZy5cbiAqXG4gKiBUaGUgaW52YXJpYW50IG1lc3NhZ2Ugd2lsbCBiZSBzdHJpcHBlZCBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGludmFyaWFudFxuICogd2lsbCByZW1haW4gdG8gZW5zdXJlIGxvZ2ljIGRvZXMgbm90IGRpZmZlciBpbiBwcm9kdWN0aW9uLlxuICovXG5cbnZhciBpbnZhcmlhbnQgPSBmdW5jdGlvbihjb25kaXRpb24sIGZvcm1hdCwgYSwgYiwgYywgZCwgZSwgZikge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhcmlhbnQgcmVxdWlyZXMgYW4gZXJyb3IgbWVzc2FnZSBhcmd1bWVudCcpO1xuICAgIH1cbiAgfVxuXG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdmFyIGVycm9yO1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgICdNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCAnICtcbiAgICAgICAgJ2ZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuJ1xuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFyZ3MgPSBbYSwgYiwgYywgZCwgZSwgZl07XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHsgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107IH0pXG4gICAgICApO1xuICAgICAgZXJyb3IubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB9XG5cbiAgICBlcnJvci5mcmFtZXNUb1BvcCA9IDE7IC8vIHdlIGRvbid0IGNhcmUgYWJvdXQgaW52YXJpYW50J3Mgb3duIGZyYW1lXG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gaW52YXJpYW50O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU2ltaWxhciB0byBpbnZhcmlhbnQgYnV0IG9ubHkgbG9ncyBhIHdhcm5pbmcgaWYgdGhlIGNvbmRpdGlvbiBpcyBub3QgbWV0LlxuICogVGhpcyBjYW4gYmUgdXNlZCB0byBsb2cgaXNzdWVzIGluIGRldmVsb3BtZW50IGVudmlyb25tZW50cyBpbiBjcml0aWNhbFxuICogcGF0aHMuIFJlbW92aW5nIHRoZSBsb2dnaW5nIGNvZGUgZm9yIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzIHdpbGwga2VlcCB0aGVcbiAqIHNhbWUgbG9naWMgYW5kIGZvbGxvdyB0aGUgc2FtZSBjb2RlIHBhdGhzLlxuICovXG5cbnZhciBfX0RFVl9fID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJztcblxudmFyIHdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAoX19ERVZfXykge1xuICB2YXIgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24gcHJpbnRXYXJuaW5nKGZvcm1hdCwgYXJncykge1xuICAgIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGFyZ3MgPSBuZXcgQXJyYXkobGVuID4gMiA/IGxlbiAtIDIgOiAwKTtcbiAgICBmb3IgKHZhciBrZXkgPSAyOyBrZXkgPCBsZW47IGtleSsrKSB7XG4gICAgICBhcmdzW2tleSAtIDJdID0gYXJndW1lbnRzW2tleV07XG4gICAgfVxuICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgdmFyIG1lc3NhZ2UgPSAnV2FybmluZzogJyArXG4gICAgICBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgICAgfSk7XG4gICAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgIC8vIC0tLSBXZWxjb21lIHRvIGRlYnVnZ2luZyBSZWFjdCAtLS1cbiAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgLy8gdG8gZmluZCB0aGUgY2FsbHNpdGUgdGhhdCBjYXVzZWQgdGhpcyB3YXJuaW5nIHRvIGZpcmUuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgfSBjYXRjaCAoeCkge31cbiAgfVxuXG4gIHdhcm5pbmcgPSBmdW5jdGlvbihjb25kaXRpb24sIGZvcm1hdCwgYXJncykge1xuICAgIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGFyZ3MgPSBuZXcgQXJyYXkobGVuID4gMiA/IGxlbiAtIDIgOiAwKTtcbiAgICBmb3IgKHZhciBrZXkgPSAyOyBrZXkgPCBsZW47IGtleSsrKSB7XG4gICAgICBhcmdzW2tleSAtIDJdID0gYXJndW1lbnRzW2tleV07XG4gICAgfVxuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICdgd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCwgLi4uYXJncylgIHJlcXVpcmVzIGEgd2FybmluZyAnICtcbiAgICAgICAgICAnbWVzc2FnZSBhcmd1bWVudCdcbiAgICAgICk7XG4gICAgfVxuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICBwcmludFdhcm5pbmcuYXBwbHkobnVsbCwgW2Zvcm1hdF0uY29uY2F0KGFyZ3MpKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2FybmluZztcbiIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXNlU291cmNlTWFwKSB7XG5cdHZhciBsaXN0ID0gW107XG5cblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXHRsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG5cdFx0XHR2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblx0XHRcdGlmKGl0ZW1bMl0pIHtcblx0XHRcdFx0cmV0dXJuIFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgY29udGVudCArIFwifVwiO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdFx0XHR9XG5cdFx0fSkuam9pbihcIlwiKTtcblx0fTtcblxuXHQvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXHRsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5KSB7XG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXG5cdFx0XHRtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG5cdFx0dmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGlkID0gdGhpc1tpXVswXTtcblx0XHRcdGlmKHR5cGVvZiBpZCA9PT0gXCJudW1iZXJcIilcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuXHRcdH1cblx0XHRmb3IoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XG5cdFx0XHQvLyBza2lwIGFscmVhZHkgaW1wb3J0ZWQgbW9kdWxlXG5cdFx0XHQvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cblx0XHRcdC8vICBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cdFx0XHRpZih0eXBlb2YgaXRlbVswXSAhPT0gXCJudW1iZXJcIiB8fCAhYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IG1lZGlhUXVlcnk7XG5cdFx0XHRcdH0gZWxzZSBpZihtZWRpYVF1ZXJ5KSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGxpc3QucHVzaChpdGVtKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcblx0dmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnO1xuXHR2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cdGlmICghY3NzTWFwcGluZykge1xuXHRcdHJldHVybiBjb250ZW50O1xuXHR9XG5cblx0aWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuXHRcdHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG5cdFx0XHRyZXR1cm4gJy8qIyBzb3VyY2VVUkw9JyArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArICcgKi8nXG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcblx0fVxuXG5cdHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59XG5cbi8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG5cdHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuXHR2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0O1xuXG5cdHJldHVybiAnLyojICcgKyBkYXRhICsgJyAqLyc7XG59XG4iLCIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuXG52YXIgc3R5bGVzSW5Eb20gPSB7fTtcblxudmFyXHRtZW1vaXplID0gZnVuY3Rpb24gKGZuKSB7XG5cdHZhciBtZW1vO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoKSB7XG5cdFx0aWYgKHR5cGVvZiBtZW1vID09PSBcInVuZGVmaW5lZFwiKSBtZW1vID0gZm4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblx0XHRyZXR1cm4gbWVtbztcblx0fTtcbn07XG5cbnZhciBpc09sZElFID0gbWVtb2l6ZShmdW5jdGlvbiAoKSB7XG5cdC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG5cdC8vIEBzZWUgaHR0cDovL2Jyb3dzZXJoYWNrcy5jb20vI2hhY2stZTcxZDg2OTJmNjUzMzQxNzNmZWU3MTVjMjIyY2I4MDVcblx0Ly8gVGVzdHMgZm9yIGV4aXN0ZW5jZSBvZiBzdGFuZGFyZCBnbG9iYWxzIGlzIHRvIGFsbG93IHN0eWxlLWxvYWRlclxuXHQvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcblx0Ly8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlci9pc3N1ZXMvMTc3XG5cdHJldHVybiB3aW5kb3cgJiYgZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYjtcbn0pO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gKHRhcmdldCwgcGFyZW50KSB7XG4gIGlmIChwYXJlbnQpe1xuICAgIHJldHVybiBwYXJlbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuICB9XG4gIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG59O1xuXG52YXIgZ2V0RWxlbWVudCA9IChmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW8gPSB7fTtcblxuXHRyZXR1cm4gZnVuY3Rpb24odGFyZ2V0LCBwYXJlbnQpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiBwYXNzaW5nIGZ1bmN0aW9uIGluIG9wdGlvbnMsIHRoZW4gdXNlIGl0IGZvciByZXNvbHZlIFwiaGVhZFwiIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgLy8gVXNlZnVsIGZvciBTaGFkb3cgUm9vdCBzdHlsZSBpLmVcbiAgICAgICAgICAgICAgICAvLyB7XG4gICAgICAgICAgICAgICAgLy8gICBpbnNlcnRJbnRvOiBmdW5jdGlvbiAoKSB7IHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zvb1wiKS5zaGFkb3dSb290IH1cbiAgICAgICAgICAgICAgICAvLyB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0YXJnZXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0YXJnZXQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcblx0XHRcdHZhciBzdHlsZVRhcmdldCA9IGdldFRhcmdldC5jYWxsKHRoaXMsIHRhcmdldCwgcGFyZW50KTtcblx0XHRcdC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cdFx0XHRpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0Ly8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcblx0XHRcdFx0XHQvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuXHRcdFx0XHRcdHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG5cdFx0XHRcdH0gY2F0Y2goZSkge1xuXHRcdFx0XHRcdHN0eWxlVGFyZ2V0ID0gbnVsbDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0bWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG5cdFx0fVxuXHRcdHJldHVybiBtZW1vW3RhcmdldF1cblx0fTtcbn0pKCk7XG5cbnZhciBzaW5nbGV0b24gPSBudWxsO1xudmFyXHRzaW5nbGV0b25Db3VudGVyID0gMDtcbnZhclx0c3R5bGVzSW5zZXJ0ZWRBdFRvcCA9IFtdO1xuXG52YXJcdGZpeFVybHMgPSByZXF1aXJlKFwiLi91cmxzXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGxpc3QsIG9wdGlvbnMpIHtcblx0aWYgKHR5cGVvZiBERUJVRyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBERUJVRykge1xuXHRcdGlmICh0eXBlb2YgZG9jdW1lbnQgIT09IFwib2JqZWN0XCIpIHRocm93IG5ldyBFcnJvcihcIlRoZSBzdHlsZS1sb2FkZXIgY2Fubm90IGJlIHVzZWQgaW4gYSBub24tYnJvd3NlciBlbnZpcm9ubWVudFwiKTtcblx0fVxuXG5cdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG5cdG9wdGlvbnMuYXR0cnMgPSB0eXBlb2Ygb3B0aW9ucy5hdHRycyA9PT0gXCJvYmplY3RcIiA/IG9wdGlvbnMuYXR0cnMgOiB7fTtcblxuXHQvLyBGb3JjZSBzaW5nbGUtdGFnIHNvbHV0aW9uIG9uIElFNi05LCB3aGljaCBoYXMgYSBoYXJkIGxpbWl0IG9uIHRoZSAjIG9mIDxzdHlsZT5cblx0Ly8gdGFncyBpdCB3aWxsIGFsbG93IG9uIGEgcGFnZVxuXHRpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gXCJib29sZWFuXCIpIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIDxoZWFkPiBlbGVtZW50XG4gICAgICAgIGlmICghb3B0aW9ucy5pbnNlcnRJbnRvKSBvcHRpb25zLmluc2VydEludG8gPSBcImhlYWRcIjtcblxuXHQvLyBCeSBkZWZhdWx0LCBhZGQgPHN0eWxlPiB0YWdzIHRvIHRoZSBib3R0b20gb2YgdGhlIHRhcmdldFxuXHRpZiAoIW9wdGlvbnMuaW5zZXJ0QXQpIG9wdGlvbnMuaW5zZXJ0QXQgPSBcImJvdHRvbVwiO1xuXG5cdHZhciBzdHlsZXMgPSBsaXN0VG9TdHlsZXMobGlzdCwgb3B0aW9ucyk7XG5cblx0YWRkU3R5bGVzVG9Eb20oc3R5bGVzLCBvcHRpb25zKTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gdXBkYXRlIChuZXdMaXN0KSB7XG5cdFx0dmFyIG1heVJlbW92ZSA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRcdGRvbVN0eWxlLnJlZnMtLTtcblx0XHRcdG1heVJlbW92ZS5wdXNoKGRvbVN0eWxlKTtcblx0XHR9XG5cblx0XHRpZihuZXdMaXN0KSB7XG5cdFx0XHR2YXIgbmV3U3R5bGVzID0gbGlzdFRvU3R5bGVzKG5ld0xpc3QsIG9wdGlvbnMpO1xuXHRcdFx0YWRkU3R5bGVzVG9Eb20obmV3U3R5bGVzLCBvcHRpb25zKTtcblx0XHR9XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IG1heVJlbW92ZS5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gbWF5UmVtb3ZlW2ldO1xuXG5cdFx0XHRpZihkb21TdHlsZS5yZWZzID09PSAwKSB7XG5cdFx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIGRvbVN0eWxlLnBhcnRzW2pdKCk7XG5cblx0XHRcdFx0ZGVsZXRlIHN0eWxlc0luRG9tW2RvbVN0eWxlLmlkXTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG59O1xuXG5mdW5jdGlvbiBhZGRTdHlsZXNUb0RvbSAoc3R5bGVzLCBvcHRpb25zKSB7XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRpZihkb21TdHlsZSkge1xuXHRcdFx0ZG9tU3R5bGUucmVmcysrO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHNbal0oaXRlbS5wYXJ0c1tqXSk7XG5cdFx0XHR9XG5cblx0XHRcdGZvcig7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHR2YXIgcGFydHMgPSBbXTtcblxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0cGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cblx0XHRcdHN0eWxlc0luRG9tW2l0ZW0uaWRdID0ge2lkOiBpdGVtLmlkLCByZWZzOiAxLCBwYXJ0czogcGFydHN9O1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBsaXN0VG9TdHlsZXMgKGxpc3QsIG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlcyA9IFtdO1xuXHR2YXIgbmV3U3R5bGVzID0ge307XG5cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBsaXN0W2ldO1xuXHRcdHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuXHRcdHZhciBjc3MgPSBpdGVtWzFdO1xuXHRcdHZhciBtZWRpYSA9IGl0ZW1bMl07XG5cdFx0dmFyIHNvdXJjZU1hcCA9IGl0ZW1bM107XG5cdFx0dmFyIHBhcnQgPSB7Y3NzOiBjc3MsIG1lZGlhOiBtZWRpYSwgc291cmNlTWFwOiBzb3VyY2VNYXB9O1xuXG5cdFx0aWYoIW5ld1N0eWxlc1tpZF0pIHN0eWxlcy5wdXNoKG5ld1N0eWxlc1tpZF0gPSB7aWQ6IGlkLCBwYXJ0czogW3BhcnRdfSk7XG5cdFx0ZWxzZSBuZXdTdHlsZXNbaWRdLnBhcnRzLnB1c2gocGFydCk7XG5cdH1cblxuXHRyZXR1cm4gc3R5bGVzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQgKG9wdGlvbnMsIHN0eWxlKSB7XG5cdHZhciB0YXJnZXQgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0SW50bylcblxuXHRpZiAoIXRhcmdldCkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0SW50bycgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuXHR9XG5cblx0dmFyIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcFtzdHlsZXNJbnNlcnRlZEF0VG9wLmxlbmd0aCAtIDFdO1xuXG5cdGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcInRvcFwiKSB7XG5cdFx0aWYgKCFsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCkge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgdGFyZ2V0LmZpcnN0Q2hpbGQpO1xuXHRcdH0gZWxzZSBpZiAobGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpIHtcblx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0XHR9XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5wdXNoKHN0eWxlKTtcblx0fSBlbHNlIGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcImJvdHRvbVwiKSB7XG5cdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0fSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJvYmplY3RcIiAmJiBvcHRpb25zLmluc2VydEF0LmJlZm9yZSkge1xuXHRcdHZhciBuZXh0U2libGluZyA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRBdC5iZWZvcmUsIHRhcmdldCk7XG5cdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbmV4dFNpYmxpbmcpO1xuXHR9IGVsc2Uge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIltTdHlsZSBMb2FkZXJdXFxuXFxuIEludmFsaWQgdmFsdWUgZm9yIHBhcmFtZXRlciAnaW5zZXJ0QXQnICgnb3B0aW9ucy5pbnNlcnRBdCcpIGZvdW5kLlxcbiBNdXN0IGJlICd0b3AnLCAnYm90dG9tJywgb3IgT2JqZWN0LlxcbiAoaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIjaW5zZXJ0YXQpXFxuXCIpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudCAoc3R5bGUpIHtcblx0aWYgKHN0eWxlLnBhcmVudE5vZGUgPT09IG51bGwpIHJldHVybiBmYWxzZTtcblx0c3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG5cblx0dmFyIGlkeCA9IHN0eWxlc0luc2VydGVkQXRUb3AuaW5kZXhPZihzdHlsZSk7XG5cdGlmKGlkeCA+PSAwKSB7XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5zcGxpY2UoaWR4LCAxKTtcblx0fVxufVxuXG5mdW5jdGlvbiBjcmVhdGVTdHlsZUVsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuXG5cdGlmKG9wdGlvbnMuYXR0cnMudHlwZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0b3B0aW9ucy5hdHRycy50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuXHR9XG5cblx0aWYob3B0aW9ucy5hdHRycy5ub25jZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dmFyIG5vbmNlID0gZ2V0Tm9uY2UoKTtcblx0XHRpZiAobm9uY2UpIHtcblx0XHRcdG9wdGlvbnMuYXR0cnMubm9uY2UgPSBub25jZTtcblx0XHR9XG5cdH1cblxuXHRhZGRBdHRycyhzdHlsZSwgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBzdHlsZSk7XG5cblx0cmV0dXJuIHN0eWxlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMaW5rRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIpO1xuXG5cdGlmKG9wdGlvbnMuYXR0cnMudHlwZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0b3B0aW9ucy5hdHRycy50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuXHR9XG5cdG9wdGlvbnMuYXR0cnMucmVsID0gXCJzdHlsZXNoZWV0XCI7XG5cblx0YWRkQXR0cnMobGluaywgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBsaW5rKTtcblxuXHRyZXR1cm4gbGluaztcbn1cblxuZnVuY3Rpb24gYWRkQXR0cnMgKGVsLCBhdHRycykge1xuXHRPYmplY3Qua2V5cyhhdHRycykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG5cdFx0ZWwuc2V0QXR0cmlidXRlKGtleSwgYXR0cnNba2V5XSk7XG5cdH0pO1xufVxuXG5mdW5jdGlvbiBnZXROb25jZSgpIHtcblx0aWYgKHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyA9PT0gJ3VuZGVmaW5lZCcpIHtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXG5cdHJldHVybiBfX3dlYnBhY2tfbm9uY2VfXztcbn1cblxuZnVuY3Rpb24gYWRkU3R5bGUgKG9iaiwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGUsIHVwZGF0ZSwgcmVtb3ZlLCByZXN1bHQ7XG5cblx0Ly8gSWYgYSB0cmFuc2Zvcm0gZnVuY3Rpb24gd2FzIGRlZmluZWQsIHJ1biBpdCBvbiB0aGUgY3NzXG5cdGlmIChvcHRpb25zLnRyYW5zZm9ybSAmJiBvYmouY3NzKSB7XG5cdCAgICByZXN1bHQgPSB0eXBlb2Ygb3B0aW9ucy50cmFuc2Zvcm0gPT09ICdmdW5jdGlvbidcblx0XHQgPyBvcHRpb25zLnRyYW5zZm9ybShvYmouY3NzKSBcblx0XHQgOiBvcHRpb25zLnRyYW5zZm9ybS5kZWZhdWx0KG9iai5jc3MpO1xuXG5cdCAgICBpZiAocmVzdWx0KSB7XG5cdCAgICBcdC8vIElmIHRyYW5zZm9ybSByZXR1cm5zIGEgdmFsdWUsIHVzZSB0aGF0IGluc3RlYWQgb2YgdGhlIG9yaWdpbmFsIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgcnVubmluZyBydW50aW1lIHRyYW5zZm9ybWF0aW9ucyBvbiB0aGUgY3NzLlxuXHQgICAgXHRvYmouY3NzID0gcmVzdWx0O1xuXHQgICAgfSBlbHNlIHtcblx0ICAgIFx0Ly8gSWYgdGhlIHRyYW5zZm9ybSBmdW5jdGlvbiByZXR1cm5zIGEgZmFsc3kgdmFsdWUsIGRvbid0IGFkZCB0aGlzIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgY29uZGl0aW9uYWwgbG9hZGluZyBvZiBjc3Ncblx0ICAgIFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHQgICAgXHRcdC8vIG5vb3Bcblx0ICAgIFx0fTtcblx0ICAgIH1cblx0fVxuXG5cdGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuXHRcdHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuXG5cdFx0c3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKSk7XG5cblx0XHR1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIGZhbHNlKTtcblx0XHRyZW1vdmUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIHRydWUpO1xuXG5cdH0gZWxzZSBpZiAoXG5cdFx0b2JqLnNvdXJjZU1hcCAmJlxuXHRcdHR5cGVvZiBVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwuY3JlYXRlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgVVJMLnJldm9rZU9iamVjdFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIEJsb2IgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCJcblx0KSB7XG5cdFx0c3R5bGUgPSBjcmVhdGVMaW5rRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSB1cGRhdGVMaW5rLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cblx0XHRcdGlmKHN0eWxlLmhyZWYpIFVSTC5yZXZva2VPYmplY3RVUkwoc3R5bGUuaHJlZik7XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHRzdHlsZSA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cdFx0fTtcblx0fVxuXG5cdHVwZGF0ZShvYmopO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZSAobmV3T2JqKSB7XG5cdFx0aWYgKG5ld09iaikge1xuXHRcdFx0aWYgKFxuXHRcdFx0XHRuZXdPYmouY3NzID09PSBvYmouY3NzICYmXG5cdFx0XHRcdG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmXG5cdFx0XHRcdG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXBcblx0XHRcdCkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdHVwZGF0ZShvYmogPSBuZXdPYmopO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZW1vdmUoKTtcblx0XHR9XG5cdH07XG59XG5cbnZhciByZXBsYWNlVGV4dCA9IChmdW5jdGlvbiAoKSB7XG5cdHZhciB0ZXh0U3RvcmUgPSBbXTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gKGluZGV4LCByZXBsYWNlbWVudCkge1xuXHRcdHRleHRTdG9yZVtpbmRleF0gPSByZXBsYWNlbWVudDtcblxuXHRcdHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuXHR9O1xufSkoKTtcblxuZnVuY3Rpb24gYXBwbHlUb1NpbmdsZXRvblRhZyAoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuXHR2YXIgY3NzID0gcmVtb3ZlID8gXCJcIiA6IG9iai5jc3M7XG5cblx0aWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKTtcblx0fSBlbHNlIHtcblx0XHR2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyk7XG5cdFx0dmFyIGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuXG5cdFx0aWYgKGNoaWxkTm9kZXNbaW5kZXhdKSBzdHlsZS5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSk7XG5cblx0XHRpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcblx0XHRcdHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnIChzdHlsZSwgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgbWVkaWEgPSBvYmoubWVkaWE7XG5cblx0aWYobWVkaWEpIHtcblx0XHRzdHlsZS5zZXRBdHRyaWJ1dGUoXCJtZWRpYVwiLCBtZWRpYSlcblx0fVxuXG5cdGlmKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG5cdH0gZWxzZSB7XG5cdFx0d2hpbGUoc3R5bGUuZmlyc3RDaGlsZCkge1xuXHRcdFx0c3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG5cdFx0fVxuXG5cdFx0c3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gdXBkYXRlTGluayAobGluaywgb3B0aW9ucywgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuXHQvKlxuXHRcdElmIGNvbnZlcnRUb0Fic29sdXRlVXJscyBpc24ndCBkZWZpbmVkLCBidXQgc291cmNlbWFwcyBhcmUgZW5hYmxlZFxuXHRcdGFuZCB0aGVyZSBpcyBubyBwdWJsaWNQYXRoIGRlZmluZWQgdGhlbiBsZXRzIHR1cm4gY29udmVydFRvQWJzb2x1dGVVcmxzXG5cdFx0b24gYnkgZGVmYXVsdC4gIE90aGVyd2lzZSBkZWZhdWx0IHRvIHRoZSBjb252ZXJ0VG9BYnNvbHV0ZVVybHMgb3B0aW9uXG5cdFx0ZGlyZWN0bHlcblx0Ki9cblx0dmFyIGF1dG9GaXhVcmxzID0gb3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgPT09IHVuZGVmaW5lZCAmJiBzb3VyY2VNYXA7XG5cblx0aWYgKG9wdGlvbnMuY29udmVydFRvQWJzb2x1dGVVcmxzIHx8IGF1dG9GaXhVcmxzKSB7XG5cdFx0Y3NzID0gZml4VXJscyhjc3MpO1xuXHR9XG5cblx0aWYgKHNvdXJjZU1hcCkge1xuXHRcdC8vIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzI2NjAzODc1XG5cdFx0Y3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIiArIGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSkgKyBcIiAqL1wiO1xuXHR9XG5cblx0dmFyIGJsb2IgPSBuZXcgQmxvYihbY3NzXSwgeyB0eXBlOiBcInRleHQvY3NzXCIgfSk7XG5cblx0dmFyIG9sZFNyYyA9IGxpbmsuaHJlZjtcblxuXHRsaW5rLmhyZWYgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuXG5cdGlmKG9sZFNyYykgVVJMLnJldm9rZU9iamVjdFVSTChvbGRTcmMpO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwidmFyIGlzYXJyYXkgPSByZXF1aXJlKCdpc2FycmF5JylcblxuLyoqXG4gKiBFeHBvc2UgYHBhdGhUb1JlZ2V4cGAuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gcGF0aFRvUmVnZXhwXG5tb2R1bGUuZXhwb3J0cy5wYXJzZSA9IHBhcnNlXG5tb2R1bGUuZXhwb3J0cy5jb21waWxlID0gY29tcGlsZVxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9GdW5jdGlvbiA9IHRva2Vuc1RvRnVuY3Rpb25cbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvUmVnRXhwID0gdG9rZW5zVG9SZWdFeHBcblxuLyoqXG4gKiBUaGUgbWFpbiBwYXRoIG1hdGNoaW5nIHJlZ2V4cCB1dGlsaXR5LlxuICpcbiAqIEB0eXBlIHtSZWdFeHB9XG4gKi9cbnZhciBQQVRIX1JFR0VYUCA9IG5ldyBSZWdFeHAoW1xuICAvLyBNYXRjaCBlc2NhcGVkIGNoYXJhY3RlcnMgdGhhdCB3b3VsZCBvdGhlcndpc2UgYXBwZWFyIGluIGZ1dHVyZSBtYXRjaGVzLlxuICAvLyBUaGlzIGFsbG93cyB0aGUgdXNlciB0byBlc2NhcGUgc3BlY2lhbCBjaGFyYWN0ZXJzIHRoYXQgd29uJ3QgdHJhbnNmb3JtLlxuICAnKFxcXFxcXFxcLiknLFxuICAvLyBNYXRjaCBFeHByZXNzLXN0eWxlIHBhcmFtZXRlcnMgYW5kIHVuLW5hbWVkIHBhcmFtZXRlcnMgd2l0aCBhIHByZWZpeFxuICAvLyBhbmQgb3B0aW9uYWwgc3VmZml4ZXMuIE1hdGNoZXMgYXBwZWFyIGFzOlxuICAvL1xuICAvLyBcIi86dGVzdChcXFxcZCspP1wiID0+IFtcIi9cIiwgXCJ0ZXN0XCIsIFwiXFxkK1wiLCB1bmRlZmluZWQsIFwiP1wiLCB1bmRlZmluZWRdXG4gIC8vIFwiL3JvdXRlKFxcXFxkKylcIiAgPT4gW3VuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiXFxkK1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZF1cbiAgLy8gXCIvKlwiICAgICAgICAgICAgPT4gW1wiL1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiKlwiXVxuICAnKFtcXFxcLy5dKT8oPzooPzpcXFxcOihcXFxcdyspKD86XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSk/fFxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpKFsrKj9dKT98KFxcXFwqKSknXG5dLmpvaW4oJ3wnKSwgJ2cnKVxuXG4vKipcbiAqIFBhcnNlIGEgc3RyaW5nIGZvciB0aGUgcmF3IHRva2Vucy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19IG9wdGlvbnNcbiAqIEByZXR1cm4geyFBcnJheX1cbiAqL1xuZnVuY3Rpb24gcGFyc2UgKHN0ciwgb3B0aW9ucykge1xuICB2YXIgdG9rZW5zID0gW11cbiAgdmFyIGtleSA9IDBcbiAgdmFyIGluZGV4ID0gMFxuICB2YXIgcGF0aCA9ICcnXG4gIHZhciBkZWZhdWx0RGVsaW1pdGVyID0gb3B0aW9ucyAmJiBvcHRpb25zLmRlbGltaXRlciB8fCAnLydcbiAgdmFyIHJlc1xuXG4gIHdoaWxlICgocmVzID0gUEFUSF9SRUdFWFAuZXhlYyhzdHIpKSAhPSBudWxsKSB7XG4gICAgdmFyIG0gPSByZXNbMF1cbiAgICB2YXIgZXNjYXBlZCA9IHJlc1sxXVxuICAgIHZhciBvZmZzZXQgPSByZXMuaW5kZXhcbiAgICBwYXRoICs9IHN0ci5zbGljZShpbmRleCwgb2Zmc2V0KVxuICAgIGluZGV4ID0gb2Zmc2V0ICsgbS5sZW5ndGhcblxuICAgIC8vIElnbm9yZSBhbHJlYWR5IGVzY2FwZWQgc2VxdWVuY2VzLlxuICAgIGlmIChlc2NhcGVkKSB7XG4gICAgICBwYXRoICs9IGVzY2FwZWRbMV1cbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgdmFyIG5leHQgPSBzdHJbaW5kZXhdXG4gICAgdmFyIHByZWZpeCA9IHJlc1syXVxuICAgIHZhciBuYW1lID0gcmVzWzNdXG4gICAgdmFyIGNhcHR1cmUgPSByZXNbNF1cbiAgICB2YXIgZ3JvdXAgPSByZXNbNV1cbiAgICB2YXIgbW9kaWZpZXIgPSByZXNbNl1cbiAgICB2YXIgYXN0ZXJpc2sgPSByZXNbN11cblxuICAgIC8vIFB1c2ggdGhlIGN1cnJlbnQgcGF0aCBvbnRvIHRoZSB0b2tlbnMuXG4gICAgaWYgKHBhdGgpIHtcbiAgICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gICAgICBwYXRoID0gJydcbiAgICB9XG5cbiAgICB2YXIgcGFydGlhbCA9IHByZWZpeCAhPSBudWxsICYmIG5leHQgIT0gbnVsbCAmJiBuZXh0ICE9PSBwcmVmaXhcbiAgICB2YXIgcmVwZWF0ID0gbW9kaWZpZXIgPT09ICcrJyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIG9wdGlvbmFsID0gbW9kaWZpZXIgPT09ICc/JyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIGRlbGltaXRlciA9IHJlc1syXSB8fCBkZWZhdWx0RGVsaW1pdGVyXG4gICAgdmFyIHBhdHRlcm4gPSBjYXB0dXJlIHx8IGdyb3VwXG5cbiAgICB0b2tlbnMucHVzaCh7XG4gICAgICBuYW1lOiBuYW1lIHx8IGtleSsrLFxuICAgICAgcHJlZml4OiBwcmVmaXggfHwgJycsXG4gICAgICBkZWxpbWl0ZXI6IGRlbGltaXRlcixcbiAgICAgIG9wdGlvbmFsOiBvcHRpb25hbCxcbiAgICAgIHJlcGVhdDogcmVwZWF0LFxuICAgICAgcGFydGlhbDogcGFydGlhbCxcbiAgICAgIGFzdGVyaXNrOiAhIWFzdGVyaXNrLFxuICAgICAgcGF0dGVybjogcGF0dGVybiA/IGVzY2FwZUdyb3VwKHBhdHRlcm4pIDogKGFzdGVyaXNrID8gJy4qJyA6ICdbXicgKyBlc2NhcGVTdHJpbmcoZGVsaW1pdGVyKSArICddKz8nKVxuICAgIH0pXG4gIH1cblxuICAvLyBNYXRjaCBhbnkgY2hhcmFjdGVycyBzdGlsbCByZW1haW5pbmcuXG4gIGlmIChpbmRleCA8IHN0ci5sZW5ndGgpIHtcbiAgICBwYXRoICs9IHN0ci5zdWJzdHIoaW5kZXgpXG4gIH1cblxuICAvLyBJZiB0aGUgcGF0aCBleGlzdHMsIHB1c2ggaXQgb250byB0aGUgZW5kLlxuICBpZiAocGF0aCkge1xuICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gIH1cblxuICByZXR1cm4gdG9rZW5zXG59XG5cbi8qKlxuICogQ29tcGlsZSBhIHN0cmluZyB0byBhIHRlbXBsYXRlIGZ1bmN0aW9uIGZvciB0aGUgcGF0aC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICAgICAgICAgICAgIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshZnVuY3Rpb24oT2JqZWN0PSwgT2JqZWN0PSl9XG4gKi9cbmZ1bmN0aW9uIGNvbXBpbGUgKHN0ciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9GdW5jdGlvbihwYXJzZShzdHIsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIFByZXR0aWVyIGVuY29kaW5nIG9mIFVSSSBwYXRoIHNlZ21lbnRzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1tcXC8/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRW5jb2RlIHRoZSBhc3RlcmlzayBwYXJhbWV0ZXIuIFNpbWlsYXIgdG8gYHByZXR0eWAsIGJ1dCBhbGxvd3Mgc2xhc2hlcy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZUFzdGVyaXNrIChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1s/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRXhwb3NlIGEgbWV0aG9kIGZvciB0cmFuc2Zvcm1pbmcgdG9rZW5zIGludG8gdGhlIHBhdGggZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvRnVuY3Rpb24gKHRva2Vucykge1xuICAvLyBDb21waWxlIGFsbCB0aGUgdG9rZW5zIGludG8gcmVnZXhwcy5cbiAgdmFyIG1hdGNoZXMgPSBuZXcgQXJyYXkodG9rZW5zLmxlbmd0aClcblxuICAvLyBDb21waWxlIGFsbCB0aGUgcGF0dGVybnMgYmVmb3JlIGNvbXBpbGF0aW9uLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIGlmICh0eXBlb2YgdG9rZW5zW2ldID09PSAnb2JqZWN0Jykge1xuICAgICAgbWF0Y2hlc1tpXSA9IG5ldyBSZWdFeHAoJ14oPzonICsgdG9rZW5zW2ldLnBhdHRlcm4gKyAnKSQnKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAob2JqLCBvcHRzKSB7XG4gICAgdmFyIHBhdGggPSAnJ1xuICAgIHZhciBkYXRhID0gb2JqIHx8IHt9XG4gICAgdmFyIG9wdGlvbnMgPSBvcHRzIHx8IHt9XG4gICAgdmFyIGVuY29kZSA9IG9wdGlvbnMucHJldHR5ID8gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IDogZW5jb2RlVVJJQ29tcG9uZW50XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHBhdGggKz0gdG9rZW5cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICB2YXIgdmFsdWUgPSBkYXRhW3Rva2VuLm5hbWVdXG4gICAgICB2YXIgc2VnbWVudFxuXG4gICAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAvLyBQcmVwZW5kIHBhcnRpYWwgc2VnbWVudCBwcmVmaXhlcy5cbiAgICAgICAgICBpZiAodG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgICAgcGF0aCArPSB0b2tlbi5wcmVmaXhcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gYmUgZGVmaW5lZCcpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGlzYXJyYXkodmFsdWUpKSB7XG4gICAgICAgIGlmICghdG9rZW4ucmVwZWF0KSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgcmVwZWF0LCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeSh2YWx1ZSkgKyAnYCcpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAodmFsdWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCBiZSBlbXB0eScpXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xuICAgICAgICAgIHNlZ21lbnQgPSBlbmNvZGUodmFsdWVbal0pXG5cbiAgICAgICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgYWxsIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkoc2VnbWVudCkgKyAnYCcpXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcGF0aCArPSAoaiA9PT0gMCA/IHRva2VuLnByZWZpeCA6IHRva2VuLmRlbGltaXRlcikgKyBzZWdtZW50XG4gICAgICAgIH1cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBzZWdtZW50ID0gdG9rZW4uYXN0ZXJpc2sgPyBlbmNvZGVBc3Rlcmlzayh2YWx1ZSkgOiBlbmNvZGUodmFsdWUpXG5cbiAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIFwiJyArIHNlZ21lbnQgKyAnXCInKVxuICAgICAgfVxuXG4gICAgICBwYXRoICs9IHRva2VuLnByZWZpeCArIHNlZ21lbnRcbiAgICB9XG5cbiAgICByZXR1cm4gcGF0aFxuICB9XG59XG5cbi8qKlxuICogRXNjYXBlIGEgcmVndWxhciBleHByZXNzaW9uIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHN0clxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVTdHJpbmcgKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18XFwvXFxcXF0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEVzY2FwZSB0aGUgY2FwdHVyaW5nIGdyb3VwIGJ5IGVzY2FwaW5nIHNwZWNpYWwgY2hhcmFjdGVycyBhbmQgbWVhbmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGdyb3VwXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZUdyb3VwIChncm91cCkge1xuICByZXR1cm4gZ3JvdXAucmVwbGFjZSgvKFs9ITokXFwvKCldKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBBdHRhY2ggdGhlIGtleXMgYXMgYSBwcm9wZXJ0eSBvZiB0aGUgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHJlXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhdHRhY2hLZXlzIChyZSwga2V5cykge1xuICByZS5rZXlzID0ga2V5c1xuICByZXR1cm4gcmVcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGZsYWdzIGZvciBhIHJlZ2V4cCBmcm9tIHRoZSBvcHRpb25zLlxuICpcbiAqIEBwYXJhbSAge09iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBmbGFncyAob3B0aW9ucykge1xuICByZXR1cm4gb3B0aW9ucy5zZW5zaXRpdmUgPyAnJyA6ICdpJ1xufVxuXG4vKipcbiAqIFB1bGwgb3V0IGtleXMgZnJvbSBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiByZWdleHBUb1JlZ2V4cCAocGF0aCwga2V5cykge1xuICAvLyBVc2UgYSBuZWdhdGl2ZSBsb29rYWhlYWQgdG8gbWF0Y2ggb25seSBjYXB0dXJpbmcgZ3JvdXBzLlxuICB2YXIgZ3JvdXBzID0gcGF0aC5zb3VyY2UubWF0Y2goL1xcKCg/IVxcPykvZylcblxuICBpZiAoZ3JvdXBzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBncm91cHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGtleXMucHVzaCh7XG4gICAgICAgIG5hbWU6IGksXG4gICAgICAgIHByZWZpeDogbnVsbCxcbiAgICAgICAgZGVsaW1pdGVyOiBudWxsLFxuICAgICAgICBvcHRpb25hbDogZmFsc2UsXG4gICAgICAgIHJlcGVhdDogZmFsc2UsXG4gICAgICAgIHBhcnRpYWw6IGZhbHNlLFxuICAgICAgICBhc3RlcmlzazogZmFsc2UsXG4gICAgICAgIHBhdHRlcm46IG51bGxcbiAgICAgIH0pXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocGF0aCwga2V5cylcbn1cblxuLyoqXG4gKiBUcmFuc2Zvcm0gYW4gYXJyYXkgaW50byBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBwYXRoXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhcnJheVRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHZhciBwYXJ0cyA9IFtdXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXRoLmxlbmd0aDsgaSsrKSB7XG4gICAgcGFydHMucHVzaChwYXRoVG9SZWdleHAocGF0aFtpXSwga2V5cywgb3B0aW9ucykuc291cmNlKVxuICB9XG5cbiAgdmFyIHJlZ2V4cCA9IG5ldyBSZWdFeHAoJyg/OicgKyBwYXJ0cy5qb2luKCd8JykgKyAnKScsIGZsYWdzKG9wdGlvbnMpKVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHJlZ2V4cCwga2V5cylcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBwYXRoIHJlZ2V4cCBmcm9tIHN0cmluZyBpbnB1dC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBzdHJpbmdUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9SZWdFeHAocGFyc2UocGF0aCwgb3B0aW9ucyksIGtleXMsIG9wdGlvbnMpXG59XG5cbi8qKlxuICogRXhwb3NlIGEgZnVuY3Rpb24gZm9yIHRha2luZyB0b2tlbnMgYW5kIHJldHVybmluZyBhIFJlZ0V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICAgICAgICAgIHRva2Vuc1xuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvUmVnRXhwICh0b2tlbnMsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgdmFyIHN0cmljdCA9IG9wdGlvbnMuc3RyaWN0XG4gIHZhciBlbmQgPSBvcHRpb25zLmVuZCAhPT0gZmFsc2VcbiAgdmFyIHJvdXRlID0gJydcblxuICAvLyBJdGVyYXRlIG92ZXIgdGhlIHRva2VucyBhbmQgY3JlYXRlIG91ciByZWdleHAgc3RyaW5nLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxuXG4gICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJvdXRlICs9IGVzY2FwZVN0cmluZyh0b2tlbilcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHByZWZpeCA9IGVzY2FwZVN0cmluZyh0b2tlbi5wcmVmaXgpXG4gICAgICB2YXIgY2FwdHVyZSA9ICcoPzonICsgdG9rZW4ucGF0dGVybiArICcpJ1xuXG4gICAgICBrZXlzLnB1c2godG9rZW4pXG5cbiAgICAgIGlmICh0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgY2FwdHVyZSArPSAnKD86JyArIHByZWZpeCArIGNhcHR1cmUgKyAnKSonXG4gICAgICB9XG5cbiAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICBpZiAoIXRva2VuLnBhcnRpYWwpIHtcbiAgICAgICAgICBjYXB0dXJlID0gJyg/OicgKyBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJykpPydcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpPydcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSdcbiAgICAgIH1cblxuICAgICAgcm91dGUgKz0gY2FwdHVyZVxuICAgIH1cbiAgfVxuXG4gIHZhciBkZWxpbWl0ZXIgPSBlc2NhcGVTdHJpbmcob3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nKVxuICB2YXIgZW5kc1dpdGhEZWxpbWl0ZXIgPSByb3V0ZS5zbGljZSgtZGVsaW1pdGVyLmxlbmd0aCkgPT09IGRlbGltaXRlclxuXG4gIC8vIEluIG5vbi1zdHJpY3QgbW9kZSB3ZSBhbGxvdyBhIHNsYXNoIGF0IHRoZSBlbmQgb2YgbWF0Y2guIElmIHRoZSBwYXRoIHRvXG4gIC8vIG1hdGNoIGFscmVhZHkgZW5kcyB3aXRoIGEgc2xhc2gsIHdlIHJlbW92ZSBpdCBmb3IgY29uc2lzdGVuY3kuIFRoZSBzbGFzaFxuICAvLyBpcyB2YWxpZCBhdCB0aGUgZW5kIG9mIGEgcGF0aCBtYXRjaCwgbm90IGluIHRoZSBtaWRkbGUuIFRoaXMgaXMgaW1wb3J0YW50XG4gIC8vIGluIG5vbi1lbmRpbmcgbW9kZSwgd2hlcmUgXCIvdGVzdC9cIiBzaG91bGRuJ3QgbWF0Y2ggXCIvdGVzdC8vcm91dGVcIi5cbiAgaWYgKCFzdHJpY3QpIHtcbiAgICByb3V0ZSA9IChlbmRzV2l0aERlbGltaXRlciA/IHJvdXRlLnNsaWNlKDAsIC1kZWxpbWl0ZXIubGVuZ3RoKSA6IHJvdXRlKSArICcoPzonICsgZGVsaW1pdGVyICsgJyg/PSQpKT8nXG4gIH1cblxuICBpZiAoZW5kKSB7XG4gICAgcm91dGUgKz0gJyQnXG4gIH0gZWxzZSB7XG4gICAgLy8gSW4gbm9uLWVuZGluZyBtb2RlLCB3ZSBuZWVkIHRoZSBjYXB0dXJpbmcgZ3JvdXBzIHRvIG1hdGNoIGFzIG11Y2ggYXNcbiAgICAvLyBwb3NzaWJsZSBieSB1c2luZyBhIHBvc2l0aXZlIGxvb2thaGVhZCB0byB0aGUgZW5kIG9yIG5leHQgcGF0aCBzZWdtZW50LlxuICAgIHJvdXRlICs9IHN0cmljdCAmJiBlbmRzV2l0aERlbGltaXRlciA/ICcnIDogJyg/PScgKyBkZWxpbWl0ZXIgKyAnfCQpJ1xuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMobmV3IFJlZ0V4cCgnXicgKyByb3V0ZSwgZmxhZ3Mob3B0aW9ucykpLCBrZXlzKVxufVxuXG4vKipcbiAqIE5vcm1hbGl6ZSB0aGUgZ2l2ZW4gcGF0aCBzdHJpbmcsIHJldHVybmluZyBhIHJlZ3VsYXIgZXhwcmVzc2lvbi5cbiAqXG4gKiBBbiBlbXB0eSBhcnJheSBjYW4gYmUgcGFzc2VkIGluIGZvciB0aGUga2V5cywgd2hpY2ggd2lsbCBob2xkIHRoZVxuICogcGxhY2Vob2xkZXIga2V5IGRlc2NyaXB0aW9ucy4gRm9yIGV4YW1wbGUsIHVzaW5nIGAvdXNlci86aWRgLCBga2V5c2Agd2lsbFxuICogY29udGFpbiBgW3sgbmFtZTogJ2lkJywgZGVsaW1pdGVyOiAnLycsIG9wdGlvbmFsOiBmYWxzZSwgcmVwZWF0OiBmYWxzZSB9XWAuXG4gKlxuICogQHBhcmFtICB7KHN0cmluZ3xSZWdFeHB8QXJyYXkpfSBwYXRoXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19ICAgICAgIGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcGF0aFRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIGlmIChwYXRoIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgcmV0dXJuIHJlZ2V4cFRvUmVnZXhwKHBhdGgsIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cykpXG4gIH1cblxuICBpZiAoaXNhcnJheShwYXRoKSkge1xuICAgIHJldHVybiBhcnJheVRvUmVnZXhwKC8qKiBAdHlwZSB7IUFycmF5fSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG4gIH1cblxuICByZXR1cm4gc3RyaW5nVG9SZWdleHAoLyoqIEB0eXBlIHtzdHJpbmd9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFNpbWlsYXIgdG8gaW52YXJpYW50IGJ1dCBvbmx5IGxvZ3MgYSB3YXJuaW5nIGlmIHRoZSBjb25kaXRpb24gaXMgbm90IG1ldC5cbiAqIFRoaXMgY2FuIGJlIHVzZWQgdG8gbG9nIGlzc3VlcyBpbiBkZXZlbG9wbWVudCBlbnZpcm9ubWVudHMgaW4gY3JpdGljYWxcbiAqIHBhdGhzLiBSZW1vdmluZyB0aGUgbG9nZ2luZyBjb2RlIGZvciBwcm9kdWN0aW9uIGVudmlyb25tZW50cyB3aWxsIGtlZXAgdGhlXG4gKiBzYW1lIGxvZ2ljIGFuZCBmb2xsb3cgdGhlIHNhbWUgY29kZSBwYXRocy5cbiAqL1xuXG52YXIgX19ERVZfXyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbic7XG5cbnZhciB3YXJuaW5nID0gZnVuY3Rpb24oKSB7fTtcblxuaWYgKF9fREVWX18pIHtcbiAgdmFyIHByaW50V2FybmluZyA9IGZ1bmN0aW9uIHByaW50V2FybmluZyhmb3JtYXQsIGFyZ3MpIHtcbiAgICB2YXIgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBhcmdzID0gbmV3IEFycmF5KGxlbiA+IDIgPyBsZW4gLSAyIDogMCk7XG4gICAgZm9yICh2YXIga2V5ID0gMjsga2V5IDwgbGVuOyBrZXkrKykge1xuICAgICAgYXJnc1trZXkgLSAyXSA9IGFyZ3VtZW50c1trZXldO1xuICAgIH1cbiAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgIHZhciBtZXNzYWdlID0gJ1dhcm5pbmc6ICcgK1xuICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYXJnc1thcmdJbmRleCsrXTtcbiAgICAgIH0pO1xuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAvLyAtLS0gV2VsY29tZSB0byBkZWJ1Z2dpbmcgUmVhY3QgLS0tXG4gICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgIC8vIHRvIGZpbmQgdGhlIGNhbGxzaXRlIHRoYXQgY2F1c2VkIHRoaXMgd2FybmluZyB0byBmaXJlLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIH0gY2F0Y2ggKHgpIHt9XG4gIH1cblxuICB3YXJuaW5nID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGFyZ3MpIHtcbiAgICB2YXIgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBhcmdzID0gbmV3IEFycmF5KGxlbiA+IDIgPyBsZW4gLSAyIDogMCk7XG4gICAgZm9yICh2YXIga2V5ID0gMjsga2V5IDwgbGVuOyBrZXkrKykge1xuICAgICAgYXJnc1trZXkgLSAyXSA9IGFyZ3VtZW50c1trZXldO1xuICAgIH1cbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAnYHdhcm5pbmcoY29uZGl0aW9uLCBmb3JtYXQsIC4uLmFyZ3MpYCByZXF1aXJlcyBhIHdhcm5pbmcgJyArXG4gICAgICAgICAgJ21lc3NhZ2UgYXJndW1lbnQnXG4gICAgICApO1xuICAgIH1cbiAgICBpZiAoIWNvbmRpdGlvbikge1xuICAgICAgcHJpbnRXYXJuaW5nLmFwcGx5KG51bGwsIFtmb3JtYXRdLmNvbmNhdChhcmdzKSk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHdhcm5pbmc7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjYuMVxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGs9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPW4/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPW4/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSx5PW4/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHo9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsQT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOlxuNjAxMTUsQj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LEM9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIGFhKGEsYixlLGMsZCxnLGgsZil7aWYoIWEpe2E9dm9pZCAwO2lmKHZvaWQgMD09PWIpYT1FcnJvcihcIk1pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2Vsc2V7dmFyIGw9W2UsYyxkLGcsaCxmXSxtPTA7YT1FcnJvcihiLnJlcGxhY2UoLyVzL2csZnVuY3Rpb24oKXtyZXR1cm4gbFttKytdfSkpO2EubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIn1hLmZyYW1lc1RvUG9wPTE7dGhyb3cgYTt9fVxuZnVuY3Rpb24gRChhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGU9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MDtjPGI7YysrKWUrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2MrMV0pO2FhKCExLFwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0ICVzIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4gXCIsZSl9dmFyIEU9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEY9e307XG5mdW5jdGlvbiBHKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUY7dGhpcy51cGRhdGVyPWV8fEV9Ry5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtHLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe1wib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWE/RChcIjg1XCIpOnZvaWQgMDt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0cucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O2Z1bmN0aW9uIEgoKXt9SC5wcm90b3R5cGU9Ry5wcm90b3R5cGU7ZnVuY3Rpb24gSShhLGIsZSl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1GO3RoaXMudXBkYXRlcj1lfHxFfXZhciBKPUkucHJvdG90eXBlPW5ldyBIO1xuSi5jb25zdHJ1Y3Rvcj1JO2soSixHLnByb3RvdHlwZSk7Si5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgSz17Y3VycmVudDpudWxsLGN1cnJlbnREaXNwYXRjaGVyOm51bGx9LEw9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxNPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBOKGEsYixlKXt2YXIgYz12b2lkIDAsZD17fSxnPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGMgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilMLmNhbGwoYixjKSYmIU0uaGFzT3duUHJvcGVydHkoYykmJihkW2NdPWJbY10pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZilkLmNoaWxkcmVuPWU7ZWxzZSBpZigxPGYpe2Zvcih2YXIgbD1BcnJheShmKSxtPTA7bTxmO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49bH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoYyBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZFtjXSYmKGRbY109ZltjXSk7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLGtleTpnLHJlZjpoLHByb3BzOmQsX293bmVyOksuY3VycmVudH19XG5mdW5jdGlvbiBiYShhLGIpe3JldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTyhhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBQPS9cXC8rL2csUT1bXTtmdW5jdGlvbiBSKGEsYixlLGMpe2lmKFEubGVuZ3RoKXt2YXIgZD1RLnBvcCgpO2QucmVzdWx0PWE7ZC5rZXlQcmVmaXg9YjtkLmZ1bmM9ZTtkLmNvbnRleHQ9YztkLmNvdW50PTA7cmV0dXJuIGR9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6ZSxjb250ZXh0OmMsY291bnQ6MH19XG5mdW5jdGlvbiBTKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+US5sZW5ndGgmJlEucHVzaChhKX1cbmZ1bmN0aW9uIFQoYSxiLGUsYyl7dmFyIGQ9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWR8fFwiYm9vbGVhblwiPT09ZClhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChkKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHA6Y2FzZSBxOmc9ITB9fWlmKGcpcmV0dXJuIGUoYyxhLFwiXCI9PT1iP1wiLlwiK1UoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGg9MDtoPGEubGVuZ3RoO2grKyl7ZD1hW2hdO3ZhciBmPWIrVShkLGgpO2crPVQoZCxmLGUsYyl9ZWxzZSBpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhP2Y9bnVsbDooZj1DJiZhW0NdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGg9XG4wOyEoZD1hLm5leHQoKSkuZG9uZTspZD1kLnZhbHVlLGY9YitVKGQsaCsrKSxnKz1UKGQsZixlLGMpO2Vsc2VcIm9iamVjdFwiPT09ZCYmKGU9XCJcIithLEQoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1lP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmUsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFYoYSxiLGUpe3JldHVybiBudWxsPT1hPzA6VChhLFwiXCIsYixlKX1mdW5jdGlvbiBVKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBjYShhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBkYShhLGIsZSl7dmFyIGM9YS5yZXN1bHQsZD1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9XKGEsYyxlLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk6bnVsbCE9YSYmKE8oYSkmJihhPWJhKGEsZCsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIikrZSkpLGMucHVzaChhKSl9ZnVuY3Rpb24gVyhhLGIsZSxjLGQpe3ZhciBnPVwiXCI7bnVsbCE9ZSYmKGc9KFwiXCIrZSkucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKTtiPVIoYixnLGMsZCk7VihhLGRhLGIpO1MoYil9XG52YXIgWD17Q2hpbGRyZW46e21hcDpmdW5jdGlvbihhLGIsZSl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgYz1bXTtXKGEsYyxudWxsLGIsZSk7cmV0dXJuIGN9LGZvckVhY2g6ZnVuY3Rpb24oYSxiLGUpe2lmKG51bGw9PWEpcmV0dXJuIGE7Yj1SKG51bGwsbnVsbCxiLGUpO1YoYSxjYSxiKTtTKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gVihhLGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1coYSxiLG51bGwsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtPKGEpP3ZvaWQgMDpEKFwiMTQzXCIpO3JldHVybiBhfX0sY3JlYXRlUmVmOmZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19LENvbXBvbmVudDpHLFB1cmVDb21wb25lbnQ6SSxjcmVhdGVDb250ZXh0OmZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6dyxfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6Yixcbl9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6dixfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfSxmb3J3YXJkUmVmOmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp5LHJlbmRlcjphfX0sbGF6eTpmdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6QixfY3RvcjphLF9zdGF0dXM6LTEsX3Jlc3VsdDpudWxsfX0sbWVtbzpmdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjpBLHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX0sRnJhZ21lbnQ6cixTdHJpY3RNb2RlOnQsU3VzcGVuc2U6eixjcmVhdGVFbGVtZW50Ok4sY2xvbmVFbGVtZW50OmZ1bmN0aW9uKGEsYixlKXtudWxsPT09YXx8dm9pZCAwPT09YT9EKFwiMjY3XCIsYSk6dm9pZCAwO3ZhciBjPXZvaWQgMCxkPWsoe30sYS5wcm9wcyksZz1hLmtleSxoPWEucmVmLGY9YS5fb3duZXI7XG5pZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYsZj1LLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KTt2YXIgbD12b2lkIDA7YS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzJiYobD1hLnR5cGUuZGVmYXVsdFByb3BzKTtmb3IoYyBpbiBiKUwuY2FsbChiLGMpJiYhTS5oYXNPd25Qcm9wZXJ0eShjKSYmKGRbY109dm9pZCAwPT09YltjXSYmdm9pZCAwIT09bD9sW2NdOmJbY10pfWM9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1jKWQuY2hpbGRyZW49ZTtlbHNlIGlmKDE8Yyl7bD1BcnJheShjKTtmb3IodmFyIG09MDttPGM7bSsrKWxbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1sfXJldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpnLHJlZjpoLHByb3BzOmQsX293bmVyOmZ9fSxjcmVhdGVGYWN0b3J5OmZ1bmN0aW9uKGEpe3ZhciBiPU4uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifSxpc1ZhbGlkRWxlbWVudDpPLHZlcnNpb246XCIxNi42LjNcIixcbl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntSZWFjdEN1cnJlbnRPd25lcjpLLGFzc2lnbjprfX07WC51bnN0YWJsZV9Db25jdXJyZW50TW9kZT14O1gudW5zdGFibGVfUHJvZmlsZXI9dTt2YXIgWT17ZGVmYXVsdDpYfSxaPVkmJlh8fFk7bW9kdWxlLmV4cG9ydHM9Wi5kZWZhdWx0fHxaO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi42LjFcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbj1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxiYT1yZXF1aXJlKFwic2NoZWR1bGVyXCIpO2Z1bmN0aW9uIGNhKGEsYixjLGQsZSxmLGcsaCl7aWYoIWEpe2E9dm9pZCAwO2lmKHZvaWQgMD09PWIpYT1FcnJvcihcIk1pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2Vsc2V7dmFyIGs9W2MsZCxlLGYsZyxoXSxsPTA7YT1FcnJvcihiLnJlcGxhY2UoLyVzL2csZnVuY3Rpb24oKXtyZXR1cm4ga1tsKytdfSkpO2EubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIn1hLmZyYW1lc1RvUG9wPTE7dGhyb3cgYTt9fVxuZnVuY3Rpb24gdChhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGM9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGQ9MDtkPGI7ZCsrKWMrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2QrMV0pO2NhKCExLFwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0ICVzIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4gXCIsYyl9YWE/dm9pZCAwOnQoXCIyMjdcIik7ZnVuY3Rpb24gZGEoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG0pe3RoaXMub25FcnJvcihtKX19XG52YXIgZWE9ITEsZmE9bnVsbCxoYT0hMSxpYT1udWxsLGphPXtvbkVycm9yOmZ1bmN0aW9uKGEpe2VhPSEwO2ZhPWF9fTtmdW5jdGlvbiBrYShhLGIsYyxkLGUsZixnLGgsayl7ZWE9ITE7ZmE9bnVsbDtkYS5hcHBseShqYSxhcmd1bWVudHMpfWZ1bmN0aW9uIGxhKGEsYixjLGQsZSxmLGcsaCxrKXtrYS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoZWEpe2lmKGVhKXt2YXIgbD1mYTtlYT0hMTtmYT1udWxsfWVsc2UgdChcIjE5OFwiKSxsPXZvaWQgMDtoYXx8KGhhPSEwLGlhPWwpfX12YXIgbWE9bnVsbCxuYT17fTtcbmZ1bmN0aW9uIG9hKCl7aWYobWEpZm9yKHZhciBhIGluIG5hKXt2YXIgYj1uYVthXSxjPW1hLmluZGV4T2YoYSk7LTE8Yz92b2lkIDA6dChcIjk2XCIsYSk7aWYoIXBhW2NdKXtiLmV4dHJhY3RFdmVudHM/dm9pZCAwOnQoXCI5N1wiLGEpO3BhW2NdPWI7Yz1iLmV2ZW50VHlwZXM7Zm9yKHZhciBkIGluIGMpe3ZhciBlPXZvaWQgMDt2YXIgZj1jW2RdLGc9YixoPWQ7cWEuaGFzT3duUHJvcGVydHkoaCk/dChcIjk5XCIsaCk6dm9pZCAwO3FhW2hdPWY7dmFyIGs9Zi5waGFzZWRSZWdpc3RyYXRpb25OYW1lcztpZihrKXtmb3IoZSBpbiBrKWsuaGFzT3duUHJvcGVydHkoZSkmJnJhKGtbZV0sZyxoKTtlPSEwfWVsc2UgZi5yZWdpc3RyYXRpb25OYW1lPyhyYShmLnJlZ2lzdHJhdGlvbk5hbWUsZyxoKSxlPSEwKTplPSExO2U/dm9pZCAwOnQoXCI5OFwiLGQsYSl9fX19XG5mdW5jdGlvbiByYShhLGIsYyl7c2FbYV0/dChcIjEwMFwiLGEpOnZvaWQgMDtzYVthXT1iO3RhW2FdPWIuZXZlbnRUeXBlc1tjXS5kZXBlbmRlbmNpZXN9dmFyIHBhPVtdLHFhPXt9LHNhPXt9LHRhPXt9LHVhPW51bGwsdmE9bnVsbCx3YT1udWxsO2Z1bmN0aW9uIHhhKGEsYixjKXt2YXIgZD1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD13YShjKTtsYShkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfWZ1bmN0aW9uIHlhKGEsYil7bnVsbD09Yj90KFwiMzBcIik6dm9pZCAwO2lmKG51bGw9PWEpcmV0dXJuIGI7aWYoQXJyYXkuaXNBcnJheShhKSl7aWYoQXJyYXkuaXNBcnJheShiKSlyZXR1cm4gYS5wdXNoLmFwcGx5KGEsYiksYTthLnB1c2goYik7cmV0dXJuIGF9cmV0dXJuIEFycmF5LmlzQXJyYXkoYik/W2FdLmNvbmNhdChiKTpbYSxiXX1cbmZ1bmN0aW9uIHphKGEsYixjKXtBcnJheS5pc0FycmF5KGEpP2EuZm9yRWFjaChiLGMpOmEmJmIuY2FsbChjLGEpfXZhciBBYT1udWxsO2Z1bmN0aW9uIEJhKGEpe2lmKGEpe3ZhciBiPWEuX2Rpc3BhdGNoTGlzdGVuZXJzLGM9YS5fZGlzcGF0Y2hJbnN0YW5jZXM7aWYoQXJyYXkuaXNBcnJheShiKSlmb3IodmFyIGQ9MDtkPGIubGVuZ3RoJiYhYS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpO2QrKyl4YShhLGJbZF0sY1tkXSk7ZWxzZSBiJiZ4YShhLGIsYyk7YS5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbDthLl9kaXNwYXRjaEluc3RhbmNlcz1udWxsO2EuaXNQZXJzaXN0ZW50KCl8fGEuY29uc3RydWN0b3IucmVsZWFzZShhKX19XG52YXIgQ2E9e2luamVjdEV2ZW50UGx1Z2luT3JkZXI6ZnVuY3Rpb24oYSl7bWE/dChcIjEwMVwiKTp2b2lkIDA7bWE9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYSk7b2EoKX0saW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lOmZ1bmN0aW9uKGEpe3ZhciBiPSExLGM7Zm9yKGMgaW4gYSlpZihhLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD1hW2NdO25hLmhhc093blByb3BlcnR5KGMpJiZuYVtjXT09PWR8fChuYVtjXT90KFwiMTAyXCIsYyk6dm9pZCAwLG5hW2NdPWQsYj0hMCl9YiYmb2EoKX19O1xuZnVuY3Rpb24gRGEoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZighYylyZXR1cm4gbnVsbDt2YXIgZD11YShjKTtpZighZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtjJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz90KFwiMjMxXCIsYix0eXBlb2YgYyk6dm9pZCAwO1xucmV0dXJuIGN9ZnVuY3Rpb24gRWEoYSl7bnVsbCE9PWEmJihBYT15YShBYSxhKSk7YT1BYTtBYT1udWxsO2lmKGEmJih6YShhLEJhKSxBYT90KFwiOTVcIik6dm9pZCAwLGhhKSl0aHJvdyBhPWlhLGhhPSExLGlhPW51bGwsYTt9dmFyIEZhPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLEdhPVwiX19yZWFjdEludGVybmFsSW5zdGFuY2UkXCIrRmEsSGE9XCJfX3JlYWN0RXZlbnRIYW5kbGVycyRcIitGYTtmdW5jdGlvbiBJYShhKXtpZihhW0dhXSlyZXR1cm4gYVtHYV07Zm9yKDshYVtHYV07KWlmKGEucGFyZW50Tm9kZSlhPWEucGFyZW50Tm9kZTtlbHNlIHJldHVybiBudWxsO2E9YVtHYV07cmV0dXJuIDU9PT1hLnRhZ3x8Nj09PWEudGFnP2E6bnVsbH1mdW5jdGlvbiBKYShhKXthPWFbR2FdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZz9udWxsOmF9XG5mdW5jdGlvbiBLYShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dChcIjMzXCIpfWZ1bmN0aW9uIExhKGEpe3JldHVybiBhW0hhXXx8bnVsbH1mdW5jdGlvbiBNYShhKXtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfWZ1bmN0aW9uIE5hKGEsYixjKXtpZihiPURhKGEsYy5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lc1tiXSkpYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9eWEoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9eWEoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSl9XG5mdW5jdGlvbiBPYShhKXtpZihhJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzKXtmb3IodmFyIGI9YS5fdGFyZ2V0SW5zdCxjPVtdO2I7KWMucHVzaChiKSxiPU1hKGIpO2ZvcihiPWMubGVuZ3RoOzA8Yi0tOylOYShjW2JdLFwiY2FwdHVyZWRcIixhKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKU5hKGNbYl0sXCJidWJibGVkXCIsYSl9fWZ1bmN0aW9uIFBhKGEsYixjKXthJiZjJiZjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJihiPURhKGEsYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lKSkmJihjLl9kaXNwYXRjaExpc3RlbmVycz15YShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz15YShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKSl9ZnVuY3Rpb24gUWEoYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiZQYShhLl90YXJnZXRJbnN0LG51bGwsYSl9XG5mdW5jdGlvbiBSYShhKXt6YShhLE9hKX12YXIgU2E9IShcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8IXdpbmRvdy5kb2N1bWVudHx8IXdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtmdW5jdGlvbiBUYShhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO3JldHVybiBjfXZhciBVYT17YW5pbWF0aW9uZW5kOlRhKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOlRhKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6VGEoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6VGEoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxWYT17fSxXYT17fTtcblNhJiYoV2E9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgVWEuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgVWEuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgVWEuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgVWEudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBYYShhKXtpZihWYVthXSlyZXR1cm4gVmFbYV07aWYoIVVhW2FdKXJldHVybiBhO3ZhciBiPVVhW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIFdhKXJldHVybiBWYVthXT1iW2NdO3JldHVybiBhfVxudmFyIFlhPVhhKFwiYW5pbWF0aW9uZW5kXCIpLFphPVhhKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLCRhPVhhKFwiYW5pbWF0aW9uc3RhcnRcIiksYWI9WGEoXCJ0cmFuc2l0aW9uZW5kXCIpLGJiPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxjYj1udWxsLGViPW51bGwsZmI9bnVsbDtcbmZ1bmN0aW9uIGdiKCl7aWYoZmIpcmV0dXJuIGZiO3ZhciBhLGI9ZWIsYz1iLmxlbmd0aCxkLGU9XCJ2YWx1ZVwiaW4gY2I/Y2IudmFsdWU6Y2IudGV4dENvbnRlbnQsZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtyZXR1cm4gZmI9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKX1mdW5jdGlvbiBoYigpe3JldHVybiEwfWZ1bmN0aW9uIGliKCl7cmV0dXJuITF9XG5mdW5jdGlvbiBBKGEsYixjLGQpe3RoaXMuZGlzcGF0Y2hDb25maWc9YTt0aGlzLl90YXJnZXRJbnN0PWI7dGhpcy5uYXRpdmVFdmVudD1jO2E9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2U7Zm9yKHZhciBlIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShlKSYmKChiPWFbZV0pP3RoaXNbZV09YihjKTpcInRhcmdldFwiPT09ZT90aGlzLnRhcmdldD1kOnRoaXNbZV09Y1tlXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWMuZGVmYXVsdFByZXZlbnRlZD9jLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1jLnJldHVyblZhbHVlKT9oYjppYjt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWliO3JldHVybiB0aGlzfVxubihBLnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWhiKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWhiKX0scGVyc2lzdDpmdW5jdGlvbigpe3RoaXMuaXNQZXJzaXN0ZW50PWhifSxpc1BlcnNpc3RlbnQ6aWIsZGVzdHJ1Y3RvcjpmdW5jdGlvbigpe3ZhciBhPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlLFxuYjtmb3IoYiBpbiBhKXRoaXNbYl09bnVsbDt0aGlzLm5hdGl2ZUV2ZW50PXRoaXMuX3RhcmdldEluc3Q9dGhpcy5kaXNwYXRjaENvbmZpZz1udWxsO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9aWI7dGhpcy5fZGlzcGF0Y2hJbnN0YW5jZXM9dGhpcy5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbH19KTtBLkludGVyZmFjZT17dHlwZTpudWxsLHRhcmdldDpudWxsLGN1cnJlbnRUYXJnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sZXZlbnRQaGFzZTpudWxsLGJ1YmJsZXM6bnVsbCxjYW5jZWxhYmxlOm51bGwsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDpudWxsLGlzVHJ1c3RlZDpudWxsfTtcbkEuZXh0ZW5kPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoKXt9ZnVuY3Rpb24gYygpe3JldHVybiBkLmFwcGx5KHRoaXMsYXJndW1lbnRzKX12YXIgZD10aGlzO2IucHJvdG90eXBlPWQucHJvdG90eXBlO3ZhciBlPW5ldyBiO24oZSxjLnByb3RvdHlwZSk7Yy5wcm90b3R5cGU9ZTtjLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1jO2MuSW50ZXJmYWNlPW4oe30sZC5JbnRlcmZhY2UsYSk7Yy5leHRlbmQ9ZC5leHRlbmQ7amIoYyk7cmV0dXJuIGN9O2piKEEpO2Z1bmN0aW9uIGtiKGEsYixjLGQpe2lmKHRoaXMuZXZlbnRQb29sLmxlbmd0aCl7dmFyIGU9dGhpcy5ldmVudFBvb2wucG9wKCk7dGhpcy5jYWxsKGUsYSxiLGMsZCk7cmV0dXJuIGV9cmV0dXJuIG5ldyB0aGlzKGEsYixjLGQpfWZ1bmN0aW9uIGxiKGEpe2EgaW5zdGFuY2VvZiB0aGlzP3ZvaWQgMDp0KFwiMjc5XCIpO2EuZGVzdHJ1Y3RvcigpOzEwPnRoaXMuZXZlbnRQb29sLmxlbmd0aCYmdGhpcy5ldmVudFBvb2wucHVzaChhKX1cbmZ1bmN0aW9uIGpiKGEpe2EuZXZlbnRQb29sPVtdO2EuZ2V0UG9vbGVkPWtiO2EucmVsZWFzZT1sYn12YXIgbWI9QS5leHRlbmQoe2RhdGE6bnVsbH0pLG5iPUEuZXh0ZW5kKHtkYXRhOm51bGx9KSxvYj1bOSwxMywyNywzMl0scGI9U2EmJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LHFiPW51bGw7U2EmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKHFiPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7XG52YXIgcmI9U2EmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFxYixzYj1TYSYmKCFwYnx8cWImJjg8cWImJjExPj1xYiksdGI9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksdWI9e2JlZm9yZUlucHV0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQmVmb3JlSW5wdXRcIixjYXB0dXJlZDpcIm9uQmVmb3JlSW5wdXRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbXCJjb21wb3NpdGlvbmVuZFwiLFwia2V5cHJlc3NcIixcInRleHRJbnB1dFwiLFwicGFzdGVcIl19LGNvbXBvc2l0aW9uRW5kOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25FbmRcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25FbmRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25lbmQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uU3RhcnQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblN0YXJ0XCIsXG5jYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25TdGFydENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblVwZGF0ZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9udXBkYXRlIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfX0sdmI9ITE7XG5mdW5jdGlvbiB3YihhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PW9iLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJibHVyXCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24geGIoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgeWI9ITE7ZnVuY3Rpb24gemIoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIHhiKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDt2Yj0hMDtyZXR1cm4gdGI7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09dGImJnZiP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIEFiKGEsYil7aWYoeWIpcmV0dXJuXCJjb21wb3NpdGlvbmVuZFwiPT09YXx8IXBiJiZ3YihhLGIpPyhhPWdiKCksZmI9ZWI9Y2I9bnVsbCx5Yj0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gc2ImJlwia29cIiE9PWIubG9jYWxlP251bGw6Yi5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIEJiPXtldmVudFR5cGVzOnViLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9dm9pZCAwO3ZhciBmPXZvaWQgMDtpZihwYiliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjplPXViLmNvbXBvc2l0aW9uU3RhcnQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjplPXViLmNvbXBvc2l0aW9uRW5kO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6ZT11Yi5jb21wb3NpdGlvblVwZGF0ZTticmVhayBifWU9dm9pZCAwfWVsc2UgeWI/d2IoYSxjKSYmKGU9dWIuY29tcG9zaXRpb25FbmQpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoZT11Yi5jb21wb3NpdGlvblN0YXJ0KTtlPyhzYiYmXCJrb1wiIT09Yy5sb2NhbGUmJih5Ynx8ZSE9PXViLmNvbXBvc2l0aW9uU3RhcnQ/ZT09PXViLmNvbXBvc2l0aW9uRW5kJiZ5YiYmKGY9Z2IoKSk6KGNiPWQsZWI9XCJ2YWx1ZVwiaW4gY2I/Y2IudmFsdWU6Y2IudGV4dENvbnRlbnQseWI9XG4hMCkpLGU9bWIuZ2V0UG9vbGVkKGUsYixjLGQpLGY/ZS5kYXRhPWY6KGY9eGIoYyksbnVsbCE9PWYmJihlLmRhdGE9ZikpLFJhKGUpLGY9ZSk6Zj1udWxsOyhhPXJiP3piKGEsYyk6QWIoYSxjKSk/KGI9bmIuZ2V0UG9vbGVkKHViLmJlZm9yZUlucHV0LGIsYyxkKSxiLmRhdGE9YSxSYShiKSk6Yj1udWxsO3JldHVybiBudWxsPT09Zj9iOm51bGw9PT1iP2Y6W2YsYl19fSxDYj1udWxsLERiPW51bGwsRWI9bnVsbDtmdW5jdGlvbiBIYihhKXtpZihhPXZhKGEpKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgQ2I/dChcIjI4MFwiKTp2b2lkIDA7dmFyIGI9dWEoYS5zdGF0ZU5vZGUpO0NiKGEuc3RhdGVOb2RlLGEudHlwZSxiKX19ZnVuY3Rpb24gSWIoYSl7RGI/RWI/RWIucHVzaChhKTpFYj1bYV06RGI9YX1mdW5jdGlvbiBKYigpe2lmKERiKXt2YXIgYT1EYixiPUViO0ViPURiPW51bGw7SGIoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKUhiKGJbYV0pfX1cbmZ1bmN0aW9uIEtiKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gTGIoYSxiLGMpe3JldHVybiBhKGIsYyl9ZnVuY3Rpb24gTWIoKXt9dmFyIE5iPSExO2Z1bmN0aW9uIE9iKGEsYil7aWYoTmIpcmV0dXJuIGEoYik7TmI9ITA7dHJ5e3JldHVybiBLYihhLGIpfWZpbmFsbHl7aWYoTmI9ITEsbnVsbCE9PURifHxudWxsIT09RWIpTWIoKSxKYigpfX12YXIgUGI9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24gUWIoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISFQYlthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9XG5mdW5jdGlvbiBSYihhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9ZnVuY3Rpb24gU2IoYSl7aWYoIVNhKXJldHVybiExO2E9XCJvblwiK2E7dmFyIGI9YSBpbiBkb2N1bWVudDtifHwoYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGIuc2V0QXR0cmlidXRlKGEsXCJyZXR1cm47XCIpLGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGJbYV0pO3JldHVybiBifWZ1bmN0aW9uIFRiKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiBVYihhKXt2YXIgYj1UYihhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24gVmIoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPVViKGEpKX1mdW5jdGlvbiBXYihhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9VGIoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1cbnZhciBYYj1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCxZYj0vXiguKilbXFxcXFxcL10vLEQ9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixaYj1EP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLCRiPUQ/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixhYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxiYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxjYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxkYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxlYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGZjPUQ/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxnYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixoYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTpcbjYwMTEzLGljPUQ/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsamM9RD9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixrYz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gbGMoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPWtjJiZhW2tjXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfVxuZnVuY3Rpb24gbWMoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSBmYzpyZXR1cm5cIkNvbmN1cnJlbnRNb2RlXCI7Y2FzZSBhYzpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSAkYjpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgY2M6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgYmM6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBoYzpyZXR1cm5cIlN1c3BlbnNlXCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGVjOnJldHVyblwiQ29udGV4dC5Db25zdW1lclwiO2Nhc2UgZGM6cmV0dXJuXCJDb250ZXh0LlByb3ZpZGVyXCI7Y2FzZSBnYzp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtyZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1xuXCIpXCI6XCJGb3J3YXJkUmVmXCIpO2Nhc2UgaWM6cmV0dXJuIG1jKGEudHlwZSk7Y2FzZSBqYzppZihhPTE9PT1hLl9zdGF0dXM/YS5fcmVzdWx0Om51bGwpcmV0dXJuIG1jKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIG5jKGEpe3ZhciBiPVwiXCI7ZG97YTpzd2l0Y2goYS50YWcpe2Nhc2UgMjpjYXNlIDE2OmNhc2UgMDpjYXNlIDE6Y2FzZSA1OmNhc2UgODpjYXNlIDEzOnZhciBjPWEuX2RlYnVnT3duZXIsZD1hLl9kZWJ1Z1NvdXJjZSxlPW1jKGEudHlwZSk7dmFyIGY9bnVsbDtjJiYoZj1tYyhjLnR5cGUpKTtjPWU7ZT1cIlwiO2Q/ZT1cIiAoYXQgXCIrZC5maWxlTmFtZS5yZXBsYWNlKFliLFwiXCIpK1wiOlwiK2QubGluZU51bWJlcitcIilcIjpmJiYoZT1cIiAoY3JlYXRlZCBieSBcIitmK1wiKVwiKTtmPVwiXFxuICAgIGluIFwiKyhjfHxcIlVua25vd25cIikrZTticmVhayBhO2RlZmF1bHQ6Zj1cIlwifWIrPWY7YT1hLnJldHVybn13aGlsZShhKTtyZXR1cm4gYn1cbnZhciBvYz0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8scGM9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxxYz17fSxyYz17fTtcbmZ1bmN0aW9uIHNjKGEpe2lmKHBjLmNhbGwocmMsYSkpcmV0dXJuITA7aWYocGMuY2FsbChxYyxhKSlyZXR1cm4hMTtpZihvYy50ZXN0KGEpKXJldHVybiByY1thXT0hMDtxY1thXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiB0YyhhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIHVjKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fHRjKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gRShhLGIsYyxkLGUpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWJ9dmFyIEY9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0ZbYV09bmV3IEUoYSwwLCExLGEsbnVsbCl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07RltiXT1uZXcgRShiLDEsITEsYVsxXSxudWxsKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0ZbYV09bmV3IEUoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0ZbYV09bmV3IEUoYSwyLCExLGEsbnVsbCl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBmb3JtTm9WYWxpZGF0ZSBoaWRkZW4gbG9vcCBub01vZHVsZSBub1ZhbGlkYXRlIG9wZW4gcGxheXNJbmxpbmUgcmVhZE9ubHkgcmVxdWlyZWQgcmV2ZXJzZWQgc2NvcGVkIHNlYW1sZXNzIGl0ZW1TY29wZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0ZbYV09bmV3IEUoYSwzLCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1tcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsMywhMCxhLG51bGwpfSk7XG5bXCJjYXB0dXJlXCIsXCJkb3dubG9hZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0ZbYV09bmV3IEUoYSw0LCExLGEsbnVsbCl9KTtbXCJjb2xzXCIsXCJyb3dzXCIsXCJzaXplXCIsXCJzcGFuXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDYsITEsYSxudWxsKX0pO1tcInJvd1NwYW5cIixcInN0YXJ0XCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDUsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7dmFyIHZjPS9bXFwtOl0oW2Etel0pL2c7ZnVuY3Rpb24geGMoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UodmMsXG54Yyk7RltiXT1uZXcgRShiLDEsITEsYSxudWxsKX0pO1wieGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOmhyZWYgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UodmMseGMpO0ZbYl09bmV3IEUoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UodmMseGMpO0ZbYl09bmV3IEUoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIil9KTtGLnRhYkluZGV4PW5ldyBFKFwidGFiSW5kZXhcIiwxLCExLFwidGFiaW5kZXhcIixudWxsKTtcbmZ1bmN0aW9uIHljKGEsYixjLGQpe3ZhciBlPUYuaGFzT3duUHJvcGVydHkoYik/RltiXTpudWxsO3ZhciBmPW51bGwhPT1lPzA9PT1lLnR5cGU6ZD8hMTohKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0/ITE6ITA7Znx8KHVjKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9zYyhiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSkpfVxuZnVuY3Rpb24gemMoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIEFjKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBuKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1cbmZ1bmN0aW9uIEJjKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPXpjKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24gQ2MoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZ5YyhhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24gRGMoYSxiKXtDYyhhLGIpO3ZhciBjPXpjKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP0VjKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJkVjKGEsYi50eXBlLHpjKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gRmMoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hYS5kZWZhdWx0Q2hlY2tlZDthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gRWMoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxhLm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudCE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfXZhciBHYz17Y2hhbmdlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ2hhbmdlXCIsY2FwdHVyZWQ6XCJvbkNoYW5nZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjaGFuZ2UgY2xpY2sgZm9jdXMgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fTtmdW5jdGlvbiBIYyhhLGIsYyl7YT1BLmdldFBvb2xlZChHYy5jaGFuZ2UsYSxiLGMpO2EudHlwZT1cImNoYW5nZVwiO0liKGMpO1JhKGEpO3JldHVybiBhfXZhciBKYz1udWxsLEtjPW51bGw7ZnVuY3Rpb24gTGMoYSl7RWEoYSl9XG5mdW5jdGlvbiBNYyhhKXt2YXIgYj1LYShhKTtpZihXYihiKSlyZXR1cm4gYX1mdW5jdGlvbiBOYyhhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciBPYz0hMTtTYSYmKE9jPVNiKFwiaW5wdXRcIikmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSkpO2Z1bmN0aW9uIFBjKCl7SmMmJihKYy5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixRYyksS2M9SmM9bnVsbCl9ZnVuY3Rpb24gUWMoYSl7XCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJk1jKEtjKSYmKGE9SGMoS2MsYSxSYihhKSksT2IoTGMsYSkpfWZ1bmN0aW9uIFJjKGEsYixjKXtcImZvY3VzXCI9PT1hPyhQYygpLEpjPWIsS2M9YyxKYy5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixRYykpOlwiYmx1clwiPT09YSYmUGMoKX1mdW5jdGlvbiBTYyhhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiBNYyhLYyl9XG5mdW5jdGlvbiBUYyhhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIE1jKGIpfWZ1bmN0aW9uIFVjKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIE1jKGIpfVxudmFyIFZjPXtldmVudFR5cGVzOkdjLF9pc0lucHV0RXZlbnRTdXBwb3J0ZWQ6T2MsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1iP0thKGIpOndpbmRvdyxmPXZvaWQgMCxnPXZvaWQgMCxoPWUubm9kZU5hbWUmJmUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcInNlbGVjdFwiPT09aHx8XCJpbnB1dFwiPT09aCYmXCJmaWxlXCI9PT1lLnR5cGU/Zj1OYzpRYihlKT9PYz9mPVVjOihmPVNjLGc9UmMpOihoPWUubm9kZU5hbWUpJiZcImlucHV0XCI9PT1oLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1lLnR5cGV8fFwicmFkaW9cIj09PWUudHlwZSkmJihmPVRjKTtpZihmJiYoZj1mKGEsYikpKXJldHVybiBIYyhmLGMsZCk7ZyYmZyhhLGUsYik7XCJibHVyXCI9PT1hJiYoYT1lLl93cmFwcGVyU3RhdGUpJiZhLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1lLnR5cGUmJkVjKGUsXCJudW1iZXJcIixlLnZhbHVlKX19LFdjPUEuZXh0ZW5kKHt2aWV3Om51bGwsZGV0YWlsOm51bGx9KSxYYz17QWx0OlwiYWx0S2V5XCIsXG5Db250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBZYyhhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPVhjW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gWmMoKXtyZXR1cm4gWWN9XG52YXIgJGM9MCxhZD0wLGJkPSExLGNkPSExLGRkPVdjLmV4dGVuZCh7c2NyZWVuWDpudWxsLHNjcmVlblk6bnVsbCxjbGllbnRYOm51bGwsY2xpZW50WTpudWxsLHBhZ2VYOm51bGwscGFnZVk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpaYyxidXR0b246bnVsbCxidXR0b25zOm51bGwscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZWxhdGVkVGFyZ2V0fHwoYS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50KX0sbW92ZW1lbnRYOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRYXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WDt2YXIgYj0kYzskYz1hLnNjcmVlblg7cmV0dXJuIGJkP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5YLWI6MDooYmQ9ITAsMCl9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WVwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFk7XG52YXIgYj1hZDthZD1hLnNjcmVlblk7cmV0dXJuIGNkP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5ZLWI6MDooY2Q9ITAsMCl9fSksZWQ9ZGQuZXh0ZW5kKHtwb2ludGVySWQ6bnVsbCx3aWR0aDpudWxsLGhlaWdodDpudWxsLHByZXNzdXJlOm51bGwsdGFuZ2VudGlhbFByZXNzdXJlOm51bGwsdGlsdFg6bnVsbCx0aWx0WTpudWxsLHR3aXN0Om51bGwscG9pbnRlclR5cGU6bnVsbCxpc1ByaW1hcnk6bnVsbH0pLGZkPXttb3VzZUVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUVudGVyXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LG1vdXNlTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlTGVhdmVcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0scG9pbnRlckVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19LHBvaW50ZXJMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckxlYXZlXCIsXG5kZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19fSxnZD17ZXZlbnRUeXBlczpmZCxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hLGY9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGUmJihjLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpfHwhZiYmIWUpcmV0dXJuIG51bGw7ZT1kLndpbmRvdz09PWQ/ZDooZT1kLm93bmVyRG9jdW1lbnQpP2UuZGVmYXVsdFZpZXd8fGUucGFyZW50V2luZG93OndpbmRvdztmPyhmPWIsYj0oYj1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50KT9JYShiKTpudWxsKTpmPW51bGw7aWYoZj09PWIpcmV0dXJuIG51bGw7dmFyIGc9dm9pZCAwLGg9dm9pZCAwLGs9dm9pZCAwLGw9dm9pZCAwO2lmKFwibW91c2VvdXRcIj09PWF8fFwibW91c2VvdmVyXCI9PT1hKWc9ZGQsaD1mZC5tb3VzZUxlYXZlLGs9ZmQubW91c2VFbnRlcixsPVwibW91c2VcIjtcbmVsc2UgaWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKWc9ZWQsaD1mZC5wb2ludGVyTGVhdmUsaz1mZC5wb2ludGVyRW50ZXIsbD1cInBvaW50ZXJcIjt2YXIgbT1udWxsPT1mP2U6S2EoZik7ZT1udWxsPT1iP2U6S2EoYik7YT1nLmdldFBvb2xlZChoLGYsYyxkKTthLnR5cGU9bCtcImxlYXZlXCI7YS50YXJnZXQ9bTthLnJlbGF0ZWRUYXJnZXQ9ZTtjPWcuZ2V0UG9vbGVkKGssYixjLGQpO2MudHlwZT1sK1wiZW50ZXJcIjtjLnRhcmdldD1lO2MucmVsYXRlZFRhcmdldD1tO2Q9YjtpZihmJiZkKWE6e2I9ZjtlPWQ7bD0wO2ZvcihnPWI7ZztnPU1hKGcpKWwrKztnPTA7Zm9yKGs9ZTtrO2s9TWEoaykpZysrO2Zvcig7MDxsLWc7KWI9TWEoYiksbC0tO2Zvcig7MDxnLWw7KWU9TWEoZSksZy0tO2Zvcig7bC0tOyl7aWYoYj09PWV8fGI9PT1lLmFsdGVybmF0ZSlicmVhayBhO2I9TWEoYik7ZT1NYShlKX1iPW51bGx9ZWxzZSBiPW51bGw7ZT1iO2ZvcihiPVtdO2YmJmYhPT1lOyl7bD1cbmYuYWx0ZXJuYXRlO2lmKG51bGwhPT1sJiZsPT09ZSlicmVhaztiLnB1c2goZik7Zj1NYShmKX1mb3IoZj1bXTtkJiZkIT09ZTspe2w9ZC5hbHRlcm5hdGU7aWYobnVsbCE9PWwmJmw9PT1lKWJyZWFrO2YucHVzaChkKTtkPU1hKGQpfWZvcihkPTA7ZDxiLmxlbmd0aDtkKyspUGEoYltkXSxcImJ1YmJsZWRcIixhKTtmb3IoZD1mLmxlbmd0aDswPGQtLTspUGEoZltkXSxcImNhcHR1cmVkXCIsYyk7cmV0dXJuW2EsY119fSxoZD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O2Z1bmN0aW9uIGlkKGEsYil7cmV0dXJuIGE9PT1iPzAhPT1hfHwwIT09Ynx8MS9hPT09MS9iOmEhPT1hJiZiIT09Yn1cbmZ1bmN0aW9uIGpkKGEsYil7aWYoaWQoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKCFoZC5jYWxsKGIsY1tkXSl8fCFpZChhW2NbZF1dLGJbY1tkXV0pKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIGtkKGEpe3ZhciBiPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiLnJldHVybjspYj1iLnJldHVybjtlbHNle2lmKDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDE7Zm9yKDtiLnJldHVybjspaWYoYj1iLnJldHVybiwwIT09KGIuZWZmZWN0VGFnJjIpKXJldHVybiAxfXJldHVybiAzPT09Yi50YWc/MjozfWZ1bmN0aW9uIGxkKGEpezIhPT1rZChhKT90KFwiMTg4XCIpOnZvaWQgMH1cbmZ1bmN0aW9uIG1kKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXJldHVybiBiPWtkKGEpLDM9PT1iP3QoXCIxODhcIik6dm9pZCAwLDE9PT1iP251bGw6YTtmb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm4sZj1lP2UuYWx0ZXJuYXRlOm51bGw7aWYoIWV8fCFmKWJyZWFrO2lmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IodmFyIGc9ZS5jaGlsZDtnOyl7aWYoZz09PWMpcmV0dXJuIGxkKGUpLGE7aWYoZz09PWQpcmV0dXJuIGxkKGUpLGI7Zz1nLnNpYmxpbmd9dChcIjE4OFwiKX1pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtnPSExO2Zvcih2YXIgaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31nP1xudm9pZCAwOnQoXCIxODlcIil9fWMuYWx0ZXJuYXRlIT09ZD90KFwiMTkwXCIpOnZvaWQgMH0zIT09Yy50YWc/dChcIjE4OFwiKTp2b2lkIDA7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBuZChhKXthPW1kKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxudmFyIG9kPUEuZXh0ZW5kKHthbmltYXRpb25OYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSxwZD1BLmV4dGVuZCh7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLHFkPVdjLmV4dGVuZCh7cmVsYXRlZFRhcmdldDpudWxsfSk7ZnVuY3Rpb24gcmQoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9XG52YXIgc2Q9e0VzYzpcIkVzY2FwZVwiLFNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LHRkPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLFxuMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSx1ZD1XYy5leHRlbmQoe2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9c2RbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9cmQoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP3RkW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sbG9jYXRpb246bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwscmVwZWF0Om51bGwsbG9jYWxlOm51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpaYyxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9yZChhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9yZChhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLHZkPWRkLmV4dGVuZCh7ZGF0YVRyYW5zZmVyOm51bGx9KSx3ZD1XYy5leHRlbmQoe3RvdWNoZXM6bnVsbCx0YXJnZXRUb3VjaGVzOm51bGwsY2hhbmdlZFRvdWNoZXM6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpaY30pLHhkPUEuZXh0ZW5kKHtwcm9wZXJ0eU5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLHlkPWRkLmV4dGVuZCh7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluXG5hPy1hLndoZWVsRGVsdGFYOjB9LGRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjpudWxsLGRlbHRhTW9kZTpudWxsfSksemQ9W1tcImFib3J0XCIsXCJhYm9ydFwiXSxbWWEsXCJhbmltYXRpb25FbmRcIl0sW1phLFwiYW5pbWF0aW9uSXRlcmF0aW9uXCJdLFskYSxcImFuaW1hdGlvblN0YXJ0XCJdLFtcImNhbnBsYXlcIixcImNhblBsYXlcIl0sW1wiY2FucGxheXRocm91Z2hcIixcImNhblBsYXlUaHJvdWdoXCJdLFtcImRyYWdcIixcImRyYWdcIl0sW1wiZHJhZ2VudGVyXCIsXCJkcmFnRW50ZXJcIl0sW1wiZHJhZ2V4aXRcIixcImRyYWdFeGl0XCJdLFtcImRyYWdsZWF2ZVwiLFwiZHJhZ0xlYXZlXCJdLFtcImRyYWdvdmVyXCIsXCJkcmFnT3ZlclwiXSxbXCJkdXJhdGlvbmNoYW5nZVwiLFwiZHVyYXRpb25DaGFuZ2VcIl0sW1wiZW1wdGllZFwiLFwiZW1wdGllZFwiXSxbXCJlbmNyeXB0ZWRcIixcImVuY3J5cHRlZFwiXSxcbltcImVuZGVkXCIsXCJlbmRlZFwiXSxbXCJlcnJvclwiLFwiZXJyb3JcIl0sW1wiZ290cG9pbnRlcmNhcHR1cmVcIixcImdvdFBvaW50ZXJDYXB0dXJlXCJdLFtcImxvYWRcIixcImxvYWRcIl0sW1wibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiXSxbXCJsb2FkZWRtZXRhZGF0YVwiLFwibG9hZGVkTWV0YWRhdGFcIl0sW1wibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIl0sW1wibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIl0sW1wibW91c2Vtb3ZlXCIsXCJtb3VzZU1vdmVcIl0sW1wibW91c2VvdXRcIixcIm1vdXNlT3V0XCJdLFtcIm1vdXNlb3ZlclwiLFwibW91c2VPdmVyXCJdLFtcInBsYXlpbmdcIixcInBsYXlpbmdcIl0sW1wicG9pbnRlcm1vdmVcIixcInBvaW50ZXJNb3ZlXCJdLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJPdXRcIl0sW1wicG9pbnRlcm92ZXJcIixcInBvaW50ZXJPdmVyXCJdLFtcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiXSxbXCJzY3JvbGxcIixcInNjcm9sbFwiXSxbXCJzZWVraW5nXCIsXCJzZWVraW5nXCJdLFtcInN0YWxsZWRcIixcInN0YWxsZWRcIl0sXG5bXCJzdXNwZW5kXCIsXCJzdXNwZW5kXCJdLFtcInRpbWV1cGRhdGVcIixcInRpbWVVcGRhdGVcIl0sW1widG9nZ2xlXCIsXCJ0b2dnbGVcIl0sW1widG91Y2htb3ZlXCIsXCJ0b3VjaE1vdmVcIl0sW2FiLFwidHJhbnNpdGlvbkVuZFwiXSxbXCJ3YWl0aW5nXCIsXCJ3YWl0aW5nXCJdLFtcIndoZWVsXCIsXCJ3aGVlbFwiXV0sQWQ9e30sQmQ9e307ZnVuY3Rpb24gQ2QoYSxiKXt2YXIgYz1hWzBdO2E9YVsxXTt2YXIgZD1cIm9uXCIrKGFbMF0udG9VcHBlckNhc2UoKSthLnNsaWNlKDEpKTtiPXtwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpkLGNhcHR1cmVkOmQrXCJDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbY10saXNJbnRlcmFjdGl2ZTpifTtBZFthXT1iO0JkW2NdPWJ9XG5bW1wiYmx1clwiLFwiYmx1clwiXSxbXCJjYW5jZWxcIixcImNhbmNlbFwiXSxbXCJjbGlja1wiLFwiY2xpY2tcIl0sW1wiY2xvc2VcIixcImNsb3NlXCJdLFtcImNvbnRleHRtZW51XCIsXCJjb250ZXh0TWVudVwiXSxbXCJjb3B5XCIsXCJjb3B5XCJdLFtcImN1dFwiLFwiY3V0XCJdLFtcImF1eGNsaWNrXCIsXCJhdXhDbGlja1wiXSxbXCJkYmxjbGlja1wiLFwiZG91YmxlQ2xpY2tcIl0sW1wiZHJhZ2VuZFwiLFwiZHJhZ0VuZFwiXSxbXCJkcmFnc3RhcnRcIixcImRyYWdTdGFydFwiXSxbXCJkcm9wXCIsXCJkcm9wXCJdLFtcImZvY3VzXCIsXCJmb2N1c1wiXSxbXCJpbnB1dFwiLFwiaW5wdXRcIl0sW1wiaW52YWxpZFwiLFwiaW52YWxpZFwiXSxbXCJrZXlkb3duXCIsXCJrZXlEb3duXCJdLFtcImtleXByZXNzXCIsXCJrZXlQcmVzc1wiXSxbXCJrZXl1cFwiLFwia2V5VXBcIl0sW1wibW91c2Vkb3duXCIsXCJtb3VzZURvd25cIl0sW1wibW91c2V1cFwiLFwibW91c2VVcFwiXSxbXCJwYXN0ZVwiLFwicGFzdGVcIl0sW1wicGF1c2VcIixcInBhdXNlXCJdLFtcInBsYXlcIixcInBsYXlcIl0sW1wicG9pbnRlcmNhbmNlbFwiLFwicG9pbnRlckNhbmNlbFwiXSxcbltcInBvaW50ZXJkb3duXCIsXCJwb2ludGVyRG93blwiXSxbXCJwb2ludGVydXBcIixcInBvaW50ZXJVcFwiXSxbXCJyYXRlY2hhbmdlXCIsXCJyYXRlQ2hhbmdlXCJdLFtcInJlc2V0XCIsXCJyZXNldFwiXSxbXCJzZWVrZWRcIixcInNlZWtlZFwiXSxbXCJzdWJtaXRcIixcInN1Ym1pdFwiXSxbXCJ0b3VjaGNhbmNlbFwiLFwidG91Y2hDYW5jZWxcIl0sW1widG91Y2hlbmRcIixcInRvdWNoRW5kXCJdLFtcInRvdWNoc3RhcnRcIixcInRvdWNoU3RhcnRcIl0sW1widm9sdW1lY2hhbmdlXCIsXCJ2b2x1bWVDaGFuZ2VcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7Q2QoYSwhMCl9KTt6ZC5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NkKGEsITEpfSk7XG52YXIgRGQ9e2V2ZW50VHlwZXM6QWQsaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlOmZ1bmN0aW9uKGEpe2E9QmRbYV07cmV0dXJuIHZvaWQgMCE9PWEmJiEwPT09YS5pc0ludGVyYWN0aXZlfSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPUJkW2FdO2lmKCFlKXJldHVybiBudWxsO3N3aXRjaChhKXtjYXNlIFwia2V5cHJlc3NcIjppZigwPT09cmQoYykpcmV0dXJuIG51bGw7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjphPXVkO2JyZWFrO2Nhc2UgXCJibHVyXCI6Y2FzZSBcImZvY3VzXCI6YT1xZDticmVhaztjYXNlIFwiY2xpY2tcIjppZigyPT09Yy5idXR0b24pcmV0dXJuIG51bGw7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjphPWRkO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOmE9XG52ZDticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjphPXdkO2JyZWFrO2Nhc2UgWWE6Y2FzZSBaYTpjYXNlICRhOmE9b2Q7YnJlYWs7Y2FzZSBhYjphPXhkO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjphPVdjO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOmE9eWQ7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6YT1wZDticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjphPWVkO2JyZWFrO2RlZmF1bHQ6YT1BfWI9YS5nZXRQb29sZWQoZSxiLGMsZCk7UmEoYik7cmV0dXJuIGJ9fSxFZD1EZC5pc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGUsXG5GZD1bXTtmdW5jdGlvbiBHZChhKXt2YXIgYj1hLnRhcmdldEluc3QsYz1iO2Rve2lmKCFjKXthLmFuY2VzdG9ycy5wdXNoKGMpO2JyZWFrfXZhciBkO2ZvcihkPWM7ZC5yZXR1cm47KWQ9ZC5yZXR1cm47ZD0zIT09ZC50YWc/bnVsbDpkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2lmKCFkKWJyZWFrO2EuYW5jZXN0b3JzLnB1c2goYyk7Yz1JYShkKX13aGlsZShjKTtmb3IoYz0wO2M8YS5hbmNlc3RvcnMubGVuZ3RoO2MrKyl7Yj1hLmFuY2VzdG9yc1tjXTt2YXIgZT1SYihhLm5hdGl2ZUV2ZW50KTtkPWEudG9wTGV2ZWxUeXBlO2Zvcih2YXIgZj1hLm5hdGl2ZUV2ZW50LGc9bnVsbCxoPTA7aDxwYS5sZW5ndGg7aCsrKXt2YXIgaz1wYVtoXTtrJiYoaz1rLmV4dHJhY3RFdmVudHMoZCxiLGYsZSkpJiYoZz15YShnLGspKX1FYShnKX19dmFyIEhkPSEwO1xuZnVuY3Rpb24gRyhhLGIpe2lmKCFiKXJldHVybiBudWxsO3ZhciBjPShFZChhKT9JZDpKZCkuYmluZChudWxsLGEpO2IuYWRkRXZlbnRMaXN0ZW5lcihhLGMsITEpfWZ1bmN0aW9uIEtkKGEsYil7aWYoIWIpcmV0dXJuIG51bGw7dmFyIGM9KEVkKGEpP0lkOkpkKS5iaW5kKG51bGwsYSk7Yi5hZGRFdmVudExpc3RlbmVyKGEsYywhMCl9ZnVuY3Rpb24gSWQoYSxiKXtMYihKZCxhLGIpfVxuZnVuY3Rpb24gSmQoYSxiKXtpZihIZCl7dmFyIGM9UmIoYik7Yz1JYShjKTtudWxsPT09Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBjLnRhZ3x8Mj09PWtkKGMpfHwoYz1udWxsKTtpZihGZC5sZW5ndGgpe3ZhciBkPUZkLnBvcCgpO2QudG9wTGV2ZWxUeXBlPWE7ZC5uYXRpdmVFdmVudD1iO2QudGFyZ2V0SW5zdD1jO2E9ZH1lbHNlIGE9e3RvcExldmVsVHlwZTphLG5hdGl2ZUV2ZW50OmIsdGFyZ2V0SW5zdDpjLGFuY2VzdG9yczpbXX07dHJ5e09iKEdkLGEpfWZpbmFsbHl7YS50b3BMZXZlbFR5cGU9bnVsbCxhLm5hdGl2ZUV2ZW50PW51bGwsYS50YXJnZXRJbnN0PW51bGwsYS5hbmNlc3RvcnMubGVuZ3RoPTAsMTA+RmQubGVuZ3RoJiZGZC5wdXNoKGEpfX19dmFyIExkPXt9LE1kPTAsTmQ9XCJfcmVhY3RMaXN0ZW5lcnNJRFwiKyhcIlwiK01hdGgucmFuZG9tKCkpLnNsaWNlKDIpO1xuZnVuY3Rpb24gT2QoYSl7T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGEsTmQpfHwoYVtOZF09TWQrKyxMZFthW05kXV09e30pO3JldHVybiBMZFthW05kXV19ZnVuY3Rpb24gUGQoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fWZ1bmN0aW9uIFFkKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIFJkKGEsYil7dmFyIGM9UWQoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9UWQoYyl9fWZ1bmN0aW9uIFNkKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/U2QoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfVxuZnVuY3Rpb24gVGQoKXtmb3IodmFyIGE9d2luZG93LGI9UGQoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXthPWIuY29udGVudERvY3VtZW50LmRlZmF1bHRWaWV3fWNhdGNoKGMpe2JyZWFrfWI9UGQoYS5kb2N1bWVudCl9cmV0dXJuIGJ9ZnVuY3Rpb24gVWQoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX1cbnZhciBWZD1TYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFdkPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXMga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fSxYZD1udWxsLFlkPW51bGwsWmQ9bnVsbCwkZD0hMTtcbmZ1bmN0aW9uIGFlKGEsYil7dmFyIGM9Yi53aW5kb3c9PT1iP2IuZG9jdW1lbnQ6OT09PWIubm9kZVR5cGU/YjpiLm93bmVyRG9jdW1lbnQ7aWYoJGR8fG51bGw9PVhkfHxYZCE9PVBkKGMpKXJldHVybiBudWxsO2M9WGQ7XCJzZWxlY3Rpb25TdGFydFwiaW4gYyYmVWQoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OihjPShjLm93bmVyRG9jdW1lbnQmJmMub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxjPXthbmNob3JOb2RlOmMuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6Yy5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmMuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmMuZm9jdXNPZmZzZXR9KTtyZXR1cm4gWmQmJmpkKFpkLGMpP251bGw6KFpkPWMsYT1BLmdldFBvb2xlZChXZC5zZWxlY3QsWWQsYSxiKSxhLnR5cGU9XCJzZWxlY3RcIixhLnRhcmdldD1YZCxSYShhKSxhKX1cbnZhciBiZT17ZXZlbnRUeXBlczpXZCxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWQud2luZG93PT09ZD9kLmRvY3VtZW50Ojk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50LGY7aWYoIShmPSFlKSl7YTp7ZT1PZChlKTtmPXRhLm9uU2VsZWN0O2Zvcih2YXIgZz0wO2c8Zi5sZW5ndGg7ZysrKXt2YXIgaD1mW2ddO2lmKCFlLmhhc093blByb3BlcnR5KGgpfHwhZVtoXSl7ZT0hMTticmVhayBhfX1lPSEwfWY9IWV9aWYoZilyZXR1cm4gbnVsbDtlPWI/S2EoYik6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjppZihRYihlKXx8XCJ0cnVlXCI9PT1lLmNvbnRlbnRFZGl0YWJsZSlYZD1lLFlkPWIsWmQ9bnVsbDticmVhaztjYXNlIFwiYmx1clwiOlpkPVlkPVhkPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOiRkPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpyZXR1cm4gJGQ9ITEsYWUoYyxkKTtjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoVmQpYnJlYWs7XG5jYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOnJldHVybiBhZShjLGQpfXJldHVybiBudWxsfX07Q2EuaW5qZWN0RXZlbnRQbHVnaW5PcmRlcihcIlJlc3BvbmRlckV2ZW50UGx1Z2luIFNpbXBsZUV2ZW50UGx1Z2luIEVudGVyTGVhdmVFdmVudFBsdWdpbiBDaGFuZ2VFdmVudFBsdWdpbiBTZWxlY3RFdmVudFBsdWdpbiBCZWZvcmVJbnB1dEV2ZW50UGx1Z2luXCIuc3BsaXQoXCIgXCIpKTt1YT1MYTt2YT1KYTt3YT1LYTtDYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUoe1NpbXBsZUV2ZW50UGx1Z2luOkRkLEVudGVyTGVhdmVFdmVudFBsdWdpbjpnZCxDaGFuZ2VFdmVudFBsdWdpbjpWYyxTZWxlY3RFdmVudFBsdWdpbjpiZSxCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOkJifSk7ZnVuY3Rpb24gZGUoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBlZShhLGIpe2E9bih7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPWRlKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1mdW5jdGlvbiBmZShhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIremMoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIGdlKGEsYil7bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD90KFwiOTFcIik6dm9pZCAwO3JldHVybiBuKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIGhlKGEsYil7dmFyIGM9Yi52YWx1ZTtudWxsPT1jJiYoYz1iLmRlZmF1bHRWYWx1ZSxiPWIuY2hpbGRyZW4sbnVsbCE9YiYmKG51bGwhPWM/dChcIjkyXCIpOnZvaWQgMCxBcnJheS5pc0FycmF5KGIpJiYoMT49Yi5sZW5ndGg/dm9pZCAwOnQoXCI5M1wiKSxiPWJbMF0pLGM9YiksbnVsbD09YyYmKGM9XCJcIikpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOnpjKGMpfX1cbmZ1bmN0aW9uIGllKGEsYil7dmFyIGM9emMoYi52YWx1ZSksZD16YyhiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIGplKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJihhLnZhbHVlPWIpfXZhciBrZT17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBsZShhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIG1lKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9sZShiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBuZT12b2lkIDAsb2U9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09a2Uuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7bmU9bmV8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7bmUuaW5uZXJIVE1MPVwiPHN2Zz5cIitiK1wiPC9zdmc+XCI7Zm9yKGI9bmUuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24gcGUoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1cbnZhciBxZT17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxyZT1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMocWUpLmZvckVhY2goZnVuY3Rpb24oYSl7cmUuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtxZVtiXT1xZVthXX0pfSk7ZnVuY3Rpb24gc2UoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fHFlLmhhc093blByb3BlcnR5KGEpJiZxZVthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiB0ZShhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1zZShjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciB1ZT1uKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gdmUoYSxiKXtiJiYodWVbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3QoXCIxMzdcIixhLFwiXCIpOnZvaWQgMCksbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmKG51bGwhPWIuY2hpbGRyZW4/dChcIjYwXCIpOnZvaWQgMCxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3ZvaWQgMDp0KFwiNjFcIikpLG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZT90KFwiNjJcIixcIlwiKTp2b2lkIDApfVxuZnVuY3Rpb24gd2UoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fVxuZnVuY3Rpb24geGUoYSxiKXthPTk9PT1hLm5vZGVUeXBlfHwxMT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7dmFyIGM9T2QoYSk7Yj10YVtiXTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl7dmFyIGU9YltkXTtpZighYy5oYXNPd25Qcm9wZXJ0eShlKXx8IWNbZV0pe3N3aXRjaChlKXtjYXNlIFwic2Nyb2xsXCI6S2QoXCJzY3JvbGxcIixhKTticmVhaztjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOktkKFwiZm9jdXNcIixhKTtLZChcImJsdXJcIixhKTtjLmJsdXI9ITA7Yy5mb2N1cz0hMDticmVhaztjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsb3NlXCI6U2IoZSkmJktkKGUsYSk7YnJlYWs7Y2FzZSBcImludmFsaWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7ZGVmYXVsdDotMT09PWJiLmluZGV4T2YoZSkmJkcoZSxhKX1jW2VdPSEwfX19ZnVuY3Rpb24geWUoKXt9dmFyIHplPW51bGwsQWU9bnVsbDtcbmZ1bmN0aW9uIEJlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1mdW5jdGlvbiBDZShhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwib3B0aW9uXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9dmFyIERlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLEVlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMDtcbmZ1bmN0aW9uIEZlKGEpe2ZvcihhPWEubmV4dFNpYmxpbmc7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gR2UoYSl7Zm9yKGE9YS5maXJzdENoaWxkO2EmJjEhPT1hLm5vZGVUeXBlJiYzIT09YS5ub2RlVHlwZTspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfW5ldyBTZXQ7dmFyIEhlPVtdLEllPS0xO2Z1bmN0aW9uIEgoYSl7MD5JZXx8KGEuY3VycmVudD1IZVtJZV0sSGVbSWVdPW51bGwsSWUtLSl9ZnVuY3Rpb24gSShhLGIpe0llKys7SGVbSWVdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn12YXIgSmU9e30sSj17Y3VycmVudDpKZX0sSz17Y3VycmVudDohMX0sS2U9SmU7XG5mdW5jdGlvbiBMZShhLGIpe3ZhciBjPWEudHlwZS5jb250ZXh0VHlwZXM7aWYoIWMpcmV0dXJuIEplO3ZhciBkPWEuc3RhdGVOb2RlO2lmKGQmJmQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PWIpcmV0dXJuIGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIGU9e30sZjtmb3IoZiBpbiBjKWVbZl09YltmXTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9YixhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWUpO3JldHVybiBlfWZ1bmN0aW9uIEwoYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1mdW5jdGlvbiBNZShhKXtIKEssYSk7SChKLGEpfWZ1bmN0aW9uIE5lKGEpe0goSyxhKTtIKEosYSl9XG5mdW5jdGlvbiBPZShhLGIsYyl7Si5jdXJyZW50IT09SmU/dChcIjE2OFwiKTp2b2lkIDA7SShKLGIsYSk7SShLLGMsYSl9ZnVuY3Rpb24gUGUoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2E9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWUgaW4gYT92b2lkIDA6dChcIjEwOFwiLG1jKGIpfHxcIlVua25vd25cIixlKTtyZXR1cm4gbih7fSxjLGQpfWZ1bmN0aW9uIFFlKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2I9YiYmYi5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8SmU7S2U9Si5jdXJyZW50O0koSixiLGEpO0koSyxLLmN1cnJlbnQsYSk7cmV0dXJuITB9XG5mdW5jdGlvbiBSZShhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7ZD92b2lkIDA6dChcIjE2OVwiKTtjPyhiPVBlKGEsYixLZSksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1iLEgoSyxhKSxIKEosYSksSShKLGIsYSkpOkgoSyxhKTtJKEssYyxhKX12YXIgU2U9bnVsbCxUZT1udWxsO2Z1bmN0aW9uIFVlKGEpe3JldHVybiBmdW5jdGlvbihiKXt0cnl7cmV0dXJuIGEoYil9Y2F0Y2goYyl7fX19XG5mdW5jdGlvbiBWZShhKXtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXylyZXR1cm4hMTt2YXIgYj1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoYi5pc0Rpc2FibGVkfHwhYi5zdXBwb3J0c0ZpYmVyKXJldHVybiEwO3RyeXt2YXIgYz1iLmluamVjdChhKTtTZT1VZShmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyUm9vdChjLGEpfSk7VGU9VWUoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclVubW91bnQoYyxhKX0pfWNhdGNoKGQpe31yZXR1cm4hMH1cbmZ1bmN0aW9uIFdlKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5maXJzdENvbnRleHREZXBlbmRlbmN5PXRoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuZWZmZWN0VGFnPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5jaGlsZEV4cGlyYXRpb25UaW1lPXRoaXMuZXhwaXJhdGlvblRpbWU9MDt0aGlzLmFsdGVybmF0ZT1udWxsfWZ1bmN0aW9uIE0oYSxiLGMsZCl7cmV0dXJuIG5ldyBXZShhLGIsYyxkKX1cbmZ1bmN0aW9uIFhlKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9ZnVuY3Rpb24gWWUoYSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIFhlKGEpPzE6MDtpZih2b2lkIDAhPT1hJiZudWxsIT09YSl7YT1hLiQkdHlwZW9mO2lmKGE9PT1nYylyZXR1cm4gMTE7aWYoYT09PWljKXJldHVybiAxNH1yZXR1cm4gMn1cbmZ1bmN0aW9uIFplKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbD09PWM/KGM9TShhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLmVmZmVjdFRhZz0wLGMubmV4dEVmZmVjdD1udWxsLGMuZmlyc3RFZmZlY3Q9bnVsbCxjLmxhc3RFZmZlY3Q9bnVsbCk7Yy5jaGlsZEV4cGlyYXRpb25UaW1lPWEuY2hpbGRFeHBpcmF0aW9uVGltZTtjLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWU7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yy5maXJzdENvbnRleHREZXBlbmRlbmN5PWEuZmlyc3RDb250ZXh0RGVwZW5kZW5jeTtjLnNpYmxpbmc9YS5zaWJsaW5nO1xuYy5pbmRleD1hLmluZGV4O2MucmVmPWEucmVmO3JldHVybiBjfVxuZnVuY3Rpb24gJGUoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKVhlKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIGFjOnJldHVybiBhZihjLmNoaWxkcmVuLGUsZixiKTtjYXNlIGZjOnJldHVybiBiZihjLGV8MyxmLGIpO2Nhc2UgYmM6cmV0dXJuIGJmKGMsZXwyLGYsYik7Y2FzZSBjYzpyZXR1cm4gYT1NKDEyLGMsYixlfDQpLGEuZWxlbWVudFR5cGU9Y2MsYS50eXBlPWNjLGEuZXhwaXJhdGlvblRpbWU9ZixhO2Nhc2UgaGM6cmV0dXJuIGE9TSgxMyxjLGIsZSksYS5lbGVtZW50VHlwZT1oYyxhLnR5cGU9aGMsYS5leHBpcmF0aW9uVGltZT1mLGE7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGRjOmc9MTA7YnJlYWsgYTtjYXNlIGVjOmc9OTticmVhayBhO2Nhc2UgZ2M6Zz0xMTticmVhayBhO2Nhc2UgaWM6Zz1cbjE0O2JyZWFrIGE7Y2FzZSBqYzpnPTE2O2Q9bnVsbDticmVhayBhfXQoXCIxMzBcIixudWxsPT1hP2E6dHlwZW9mIGEsXCJcIil9Yj1NKGcsYyxiLGUpO2IuZWxlbWVudFR5cGU9YTtiLnR5cGU9ZDtiLmV4cGlyYXRpb25UaW1lPWY7cmV0dXJuIGJ9ZnVuY3Rpb24gYWYoYSxiLGMsZCl7YT1NKDcsYSxkLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiBiZihhLGIsYyxkKXthPU0oOCxhLGQsYik7Yj0wPT09KGImMSk/YmM6ZmM7YS5lbGVtZW50VHlwZT1iO2EudHlwZT1iO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiBjZihhLGIsYyl7YT1NKDYsYSxudWxsLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIGRmKGEsYixjKXtiPU0oNCxudWxsIT09YS5jaGlsZHJlbj9hLmNoaWxkcmVuOltdLGEua2V5LGIpO2IuZXhwaXJhdGlvblRpbWU9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9ZnVuY3Rpb24gZWYoYSxiKXthLmRpZEVycm9yPSExO3ZhciBjPWEuZWFybGllc3RQZW5kaW5nVGltZTswPT09Yz9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9YS5sYXRlc3RQZW5kaW5nVGltZT1iOmM8Yj9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9YjphLmxhdGVzdFBlbmRpbmdUaW1lPmImJihhLmxhdGVzdFBlbmRpbmdUaW1lPWIpO2ZmKGIsYSl9XG5mdW5jdGlvbiBnZihhLGIpe2EuZGlkRXJyb3I9ITE7dmFyIGM9YS5sYXRlc3RQaW5nZWRUaW1lOzAhPT1jJiZjPj1iJiYoYS5sYXRlc3RQaW5nZWRUaW1lPTApO2M9YS5lYXJsaWVzdFBlbmRpbmdUaW1lO3ZhciBkPWEubGF0ZXN0UGVuZGluZ1RpbWU7Yz09PWI/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWQ9PT1iP2EubGF0ZXN0UGVuZGluZ1RpbWU9MDpkOmQ9PT1iJiYoYS5sYXRlc3RQZW5kaW5nVGltZT1jKTtjPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lO2Q9YS5sYXRlc3RTdXNwZW5kZWRUaW1lOzA9PT1jP2EuZWFybGllc3RTdXNwZW5kZWRUaW1lPWEubGF0ZXN0U3VzcGVuZGVkVGltZT1iOmM8Yj9hLmVhcmxpZXN0U3VzcGVuZGVkVGltZT1iOmQ+YiYmKGEubGF0ZXN0U3VzcGVuZGVkVGltZT1iKTtmZihiLGEpfVxuZnVuY3Rpb24gaGYoYSxiKXt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWU7YT1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTtjPmImJihiPWMpO2E+YiYmKGI9YSk7cmV0dXJuIGJ9ZnVuY3Rpb24gZmYoYSxiKXt2YXIgYz1iLmVhcmxpZXN0U3VzcGVuZGVkVGltZSxkPWIubGF0ZXN0U3VzcGVuZGVkVGltZSxlPWIuZWFybGllc3RQZW5kaW5nVGltZSxmPWIubGF0ZXN0UGluZ2VkVGltZTtlPTAhPT1lP2U6ZjswPT09ZSYmKDA9PT1hfHxkPGEpJiYoZT1kKTthPWU7MCE9PWEmJmM+YSYmKGE9Yyk7Yi5uZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbj1lO2IuZXhwaXJhdGlvblRpbWU9YX12YXIgamY9ITE7XG5mdW5jdGlvbiBrZihhKXtyZXR1cm57YmFzZVN0YXRlOmEsZmlyc3RVcGRhdGU6bnVsbCxsYXN0VXBkYXRlOm51bGwsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gbGYoYSl7cmV0dXJue2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxmaXJzdFVwZGF0ZTphLmZpcnN0VXBkYXRlLGxhc3RVcGRhdGU6YS5sYXN0VXBkYXRlLGZpcnN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxsYXN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxmaXJzdEVmZmVjdDpudWxsLGxhc3RFZmZlY3Q6bnVsbCxmaXJzdENhcHR1cmVkRWZmZWN0Om51bGwsbGFzdENhcHR1cmVkRWZmZWN0Om51bGx9fVxuZnVuY3Rpb24gbWYoYSl7cmV0dXJue2V4cGlyYXRpb25UaW1lOmEsdGFnOjAscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsLG5leHRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gbmYoYSxiKXtudWxsPT09YS5sYXN0VXBkYXRlP2EuZmlyc3RVcGRhdGU9YS5sYXN0VXBkYXRlPWI6KGEubGFzdFVwZGF0ZS5uZXh0PWIsYS5sYXN0VXBkYXRlPWIpfVxuZnVuY3Rpb24gb2YoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtpZihudWxsPT09Yyl7dmFyIGQ9YS51cGRhdGVRdWV1ZTt2YXIgZT1udWxsO251bGw9PT1kJiYoZD1hLnVwZGF0ZVF1ZXVlPWtmKGEubWVtb2l6ZWRTdGF0ZSkpfWVsc2UgZD1hLnVwZGF0ZVF1ZXVlLGU9Yy51cGRhdGVRdWV1ZSxudWxsPT09ZD9udWxsPT09ZT8oZD1hLnVwZGF0ZVF1ZXVlPWtmKGEubWVtb2l6ZWRTdGF0ZSksZT1jLnVwZGF0ZVF1ZXVlPWtmKGMubWVtb2l6ZWRTdGF0ZSkpOmQ9YS51cGRhdGVRdWV1ZT1sZihlKTpudWxsPT09ZSYmKGU9Yy51cGRhdGVRdWV1ZT1sZihkKSk7bnVsbD09PWV8fGQ9PT1lP25mKGQsYik6bnVsbD09PWQubGFzdFVwZGF0ZXx8bnVsbD09PWUubGFzdFVwZGF0ZT8obmYoZCxiKSxuZihlLGIpKToobmYoZCxiKSxlLmxhc3RVcGRhdGU9Yil9XG5mdW5jdGlvbiBwZihhLGIpe3ZhciBjPWEudXBkYXRlUXVldWU7Yz1udWxsPT09Yz9hLnVwZGF0ZVF1ZXVlPWtmKGEubWVtb2l6ZWRTdGF0ZSk6cWYoYSxjKTtudWxsPT09Yy5sYXN0Q2FwdHVyZWRVcGRhdGU/Yy5maXJzdENhcHR1cmVkVXBkYXRlPWMubGFzdENhcHR1cmVkVXBkYXRlPWI6KGMubGFzdENhcHR1cmVkVXBkYXRlLm5leHQ9YixjLmxhc3RDYXB0dXJlZFVwZGF0ZT1iKX1mdW5jdGlvbiBxZihhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZiPT09Yy51cGRhdGVRdWV1ZSYmKGI9YS51cGRhdGVRdWV1ZT1sZihiKSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiByZihhLGIsYyxkLGUsZil7c3dpdGNoKGMudGFnKXtjYXNlIDE6cmV0dXJuIGE9Yy5wYXlsb2FkLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtjYXNlIDM6YS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTIwNDl8NjQ7Y2FzZSAwOmE9Yy5wYXlsb2FkO2U9XCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2lmKG51bGw9PT1lfHx2b2lkIDA9PT1lKWJyZWFrO3JldHVybiBuKHt9LGQsZSk7Y2FzZSAyOmpmPSEwfXJldHVybiBkfVxuZnVuY3Rpb24gc2YoYSxiLGMsZCxlKXtqZj0hMTtiPXFmKGEsYik7Zm9yKHZhciBmPWIuYmFzZVN0YXRlLGc9bnVsbCxoPTAsaz1iLmZpcnN0VXBkYXRlLGw9ZjtudWxsIT09azspe3ZhciBtPWsuZXhwaXJhdGlvblRpbWU7bTxlPyhudWxsPT09ZyYmKGc9ayxmPWwpLGg8bSYmKGg9bSkpOihsPXJmKGEsYixrLGwsYyxkKSxudWxsIT09ay5jYWxsYmFjayYmKGEuZWZmZWN0VGFnfD0zMixrLm5leHRFZmZlY3Q9bnVsbCxudWxsPT09Yi5sYXN0RWZmZWN0P2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWs6KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWssYi5sYXN0RWZmZWN0PWspKSk7az1rLm5leHR9bT1udWxsO2ZvcihrPWIuZmlyc3RDYXB0dXJlZFVwZGF0ZTtudWxsIT09azspe3ZhciBxPWsuZXhwaXJhdGlvblRpbWU7cTxlPyhudWxsPT09bSYmKG09ayxudWxsPT09ZyYmKGY9bCkpLGg8cSYmKGg9cSkpOihsPXJmKGEsYixrLGwsYyxkKSxudWxsIT09ay5jYWxsYmFjayYmKGEuZWZmZWN0VGFnfD1cbjMyLGsubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RDYXB0dXJlZEVmZmVjdD9iLmZpcnN0Q2FwdHVyZWRFZmZlY3Q9Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q9azooYi5sYXN0Q2FwdHVyZWRFZmZlY3QubmV4dEVmZmVjdD1rLGIubGFzdENhcHR1cmVkRWZmZWN0PWspKSk7az1rLm5leHR9bnVsbD09PWcmJihiLmxhc3RVcGRhdGU9bnVsbCk7bnVsbD09PW0/Yi5sYXN0Q2FwdHVyZWRVcGRhdGU9bnVsbDphLmVmZmVjdFRhZ3w9MzI7bnVsbD09PWcmJm51bGw9PT1tJiYoZj1sKTtiLmJhc2VTdGF0ZT1mO2IuZmlyc3RVcGRhdGU9ZztiLmZpcnN0Q2FwdHVyZWRVcGRhdGU9bTthLmV4cGlyYXRpb25UaW1lPWg7YS5tZW1vaXplZFN0YXRlPWx9XG5mdW5jdGlvbiB0ZihhLGIsYyl7bnVsbCE9PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSYmKG51bGwhPT1iLmxhc3RVcGRhdGUmJihiLmxhc3RVcGRhdGUubmV4dD1iLmZpcnN0Q2FwdHVyZWRVcGRhdGUsYi5sYXN0VXBkYXRlPWIubGFzdENhcHR1cmVkVXBkYXRlKSxiLmZpcnN0Q2FwdHVyZWRVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGU9bnVsbCk7dWYoYi5maXJzdEVmZmVjdCxjKTtiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1udWxsO3VmKGIuZmlyc3RDYXB0dXJlZEVmZmVjdCxjKTtiLmZpcnN0Q2FwdHVyZWRFZmZlY3Q9Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q9bnVsbH1mdW5jdGlvbiB1ZihhLGIpe2Zvcig7bnVsbCE9PWE7KXt2YXIgYz1hLmNhbGxiYWNrO2lmKG51bGwhPT1jKXthLmNhbGxiYWNrPW51bGw7dmFyIGQ9YjtcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz90KFwiMTkxXCIsYyk6dm9pZCAwO2MuY2FsbChkKX1hPWEubmV4dEVmZmVjdH19XG5mdW5jdGlvbiB2ZihhLGIpe3JldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOm5jKGIpfX12YXIgd2Y9e2N1cnJlbnQ6bnVsbH0seGY9bnVsbCx5Zj1udWxsLHpmPW51bGw7ZnVuY3Rpb24gQWYoYSxiKXt2YXIgYz1hLnR5cGUuX2NvbnRleHQ7SSh3ZixjLl9jdXJyZW50VmFsdWUsYSk7Yy5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gQmYoYSl7dmFyIGI9d2YuY3VycmVudDtIKHdmLGEpO2EudHlwZS5fY29udGV4dC5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gQ2YoYSl7eGY9YTt6Zj15Zj1udWxsO2EuZmlyc3RDb250ZXh0RGVwZW5kZW5jeT1udWxsfVxuZnVuY3Rpb24gRGYoYSxiKXtpZih6ZiE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpemY9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07bnVsbD09PXlmPyhudWxsPT09eGY/dChcIjI5M1wiKTp2b2lkIDAseGYuZmlyc3RDb250ZXh0RGVwZW5kZW5jeT15Zj1iKTp5Zj15Zi5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgRWY9e30sTj17Y3VycmVudDpFZn0sRmY9e2N1cnJlbnQ6RWZ9LEdmPXtjdXJyZW50OkVmfTtmdW5jdGlvbiBIZihhKXthPT09RWY/dChcIjE3NFwiKTp2b2lkIDA7cmV0dXJuIGF9XG5mdW5jdGlvbiBJZihhLGIpe0koR2YsYixhKTtJKEZmLGEsYSk7SShOLEVmLGEpO3ZhciBjPWIubm9kZVR5cGU7c3dpdGNoKGMpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOm1lKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDpjPTg9PT1jP2IucGFyZW50Tm9kZTpiLGI9Yy5uYW1lc3BhY2VVUkl8fG51bGwsYz1jLnRhZ05hbWUsYj1tZShiLGMpfUgoTixhKTtJKE4sYixhKX1mdW5jdGlvbiBKZihhKXtIKE4sYSk7SChGZixhKTtIKEdmLGEpfWZ1bmN0aW9uIEtmKGEpe0hmKEdmLmN1cnJlbnQpO3ZhciBiPUhmKE4uY3VycmVudCk7dmFyIGM9bWUoYixhLnR5cGUpO2IhPT1jJiYoSShGZixhLGEpLEkoTixjLGEpKX1mdW5jdGlvbiBMZihhKXtGZi5jdXJyZW50PT09YSYmKEgoTixhKSxIKEZmLGEpKX1cbmZ1bmN0aW9uIE8oYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1uKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSl9cmV0dXJuIGJ9ZnVuY3Rpb24gTWYoYSl7dmFyIGI9YS5fcmVzdWx0O3N3aXRjaChhLl9zdGF0dXMpe2Nhc2UgMTpyZXR1cm4gYjtjYXNlIDI6dGhyb3cgYjtjYXNlIDA6dGhyb3cgYjtkZWZhdWx0OnRocm93IGEuX3N0YXR1cz0wLGI9YS5fY3RvcixiPWIoKSxiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pLGEuX3Jlc3VsdD1iLGI7fX12YXIgTmY9WGIuUmVhY3RDdXJyZW50T3duZXIsT2Y9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7XG5mdW5jdGlvbiBQZihhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bih7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jO2Q9YS51cGRhdGVRdWV1ZTtudWxsIT09ZCYmMD09PWEuZXhwaXJhdGlvblRpbWUmJihkLmJhc2VTdGF0ZT1jKX1cbnZhciBVZj17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxGaWJlcik/Mj09PWtkKGEpOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPVFmKCk7ZD1SZihkLGEpO3ZhciBlPW1mKGQpO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtTZigpO29mKGEsZSk7VGYoYSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9UWYoKTtkPVJmKGQsYSk7dmFyIGU9bWYoZCk7ZS50YWc9MTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7U2YoKTtvZihhLGUpO1RmKGEsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBjPVFmKCk7Yz1SZihjLGEpO3ZhciBkPW1mKGMpO2QudGFnPVxuMjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGQuY2FsbGJhY2s9Yik7U2YoKTtvZihhLGQpO1RmKGEsYyl9fTtmdW5jdGlvbiBWZihhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFqZChjLGQpfHwhamQoZSxmKTohMH1cbmZ1bmN0aW9uIFdmKGEsYixjKXt2YXIgZD0hMSxlPUplO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPU5mLmN1cnJlbnREaXNwYXRjaGVyLnJlYWRDb250ZXh0KGYpOihlPUwoYik/S2U6Si5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/TGUoYSxlKTpKZSk7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPVVmO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbEZpYmVyPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIFhmKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZVZi5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIFlmKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9T2Y7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD1OZi5jdXJyZW50RGlzcGF0Y2hlci5yZWFkQ29udGV4dChmKTooZj1MKGIpP0tlOkouY3VycmVudCxlLmNvbnRleHQ9TGUoYSxmKSk7Zj1hLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYoc2YoYSxmLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKFBmKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8KGI9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJlVmLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLGY9YS51cGRhdGVRdWV1ZSxudWxsIT09ZiYmKHNmKGEsZixjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD00KX12YXIgWmY9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uICRmKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjt2YXIgZD12b2lkIDA7YyYmKDEhPT1jLnRhZz90KFwiMjg5XCIpOnZvaWQgMCxkPWMuc3RhdGVOb2RlKTtkP3ZvaWQgMDp0KFwiMTQ3XCIsYSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1PZiYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifVwic3RyaW5nXCIhPT10eXBlb2YgYT90KFwiMjg0XCIpOnZvaWQgMDtjLl9vd25lcj92b2lkIDA6dChcIjI5MFwiLGEpfXJldHVybiBhfVxuZnVuY3Rpb24gYWcoYSxiKXtcInRleHRhcmVhXCIhPT1hLnR5cGUmJnQoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YixcIlwiKX1cbmZ1bmN0aW9uIGJnKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZWZmZWN0VGFnPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiLGMpe2E9WmUoYSxiLGMpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5lZmZlY3RUYWc9XG4yLGMpOmQ7Yi5lZmZlY3RUYWc9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZWZmZWN0VGFnPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj1jZihjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMsZCksZC5yZWY9JGYoYSxiLGMpLGQucmV0dXJuPWEsZDtkPSRlKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPSRmKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1cbmMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9ZGYoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbShhLGIsYyxkLGcpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9YWYoYyxhLm1vZGUsZCxnKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIHEoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPWNmKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIFpiOnJldHVybiBjPSRlKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPSRmKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSAkYjpyZXR1cm4gYj1kZihiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoWmYoYil8fFxubGMoYikpcmV0dXJuIGI9YWYoYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7YWcoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB4KGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIFpiOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09YWM/bShhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlICRiOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKFpmKGMpfHxsYyhjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDptKGEsYixjLGQsbnVsbCk7YWcoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB6KGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9XG5hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgWmI6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PWFjP20oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlICRiOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKFpmKGQpfHxsYyhkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxtKGIsYSxkLGUsbnVsbCk7YWcoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBCKGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLHI9bnVsbCxtPWcsdT1nPTAscD1udWxsO251bGwhPT1tJiZ1PGgubGVuZ3RoO3UrKyl7bS5pbmRleD51PyhwPW0sbT1udWxsKTpwPW0uc2libGluZzt2YXIgdj14KGUsbSxoW3VdLGspO2lmKG51bGw9PT12KXtudWxsPT09bSYmKG09cCk7YnJlYWt9YSYmXG5tJiZudWxsPT09di5hbHRlcm5hdGUmJmIoZSxtKTtnPWYodixnLHUpO251bGw9PT1yP2w9djpyLnNpYmxpbmc9djtyPXY7bT1wfWlmKHU9PT1oLmxlbmd0aClyZXR1cm4gYyhlLG0pLGw7aWYobnVsbD09PW0pe2Zvcig7dTxoLmxlbmd0aDt1KyspaWYobT1xKGUsaFt1XSxrKSlnPWYobSxnLHUpLG51bGw9PT1yP2w9bTpyLnNpYmxpbmc9bSxyPW07cmV0dXJuIGx9Zm9yKG09ZChlLG0pO3U8aC5sZW5ndGg7dSsrKWlmKHA9eihtLGUsdSxoW3VdLGspKWEmJm51bGwhPT1wLmFsdGVybmF0ZSYmbS5kZWxldGUobnVsbD09PXAua2V5P3U6cC5rZXkpLGc9ZihwLGcsdSksbnVsbD09PXI/bD1wOnIuc2libGluZz1wLHI9cDthJiZtLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIFEoZSxnLGgsayl7dmFyIGw9bGMoaCk7XCJmdW5jdGlvblwiIT09dHlwZW9mIGw/dChcIjE1MFwiKTp2b2lkIDA7aD1sLmNhbGwoaCk7bnVsbD09aD90KFwiMTUxXCIpOnZvaWQgMDtcbmZvcih2YXIgbT1sPW51bGwscj1nLHU9Zz0wLHA9bnVsbCx2PWgubmV4dCgpO251bGwhPT1yJiYhdi5kb25lO3UrKyx2PWgubmV4dCgpKXtyLmluZGV4PnU/KHA9cixyPW51bGwpOnA9ci5zaWJsaW5nO3ZhciB5PXgoZSxyLHYudmFsdWUsayk7aWYobnVsbD09PXkpe3J8fChyPXApO2JyZWFrfWEmJnImJm51bGw9PT15LmFsdGVybmF0ZSYmYihlLHIpO2c9Zih5LGcsdSk7bnVsbD09PW0/bD15Om0uc2libGluZz15O209eTtyPXB9aWYodi5kb25lKXJldHVybiBjKGUsciksbDtpZihudWxsPT09cil7Zm9yKDshdi5kb25lO3UrKyx2PWgubmV4dCgpKXY9cShlLHYudmFsdWUsayksbnVsbCE9PXYmJihnPWYodixnLHUpLG51bGw9PT1tP2w9djptLnNpYmxpbmc9dixtPXYpO3JldHVybiBsfWZvcihyPWQoZSxyKTshdi5kb25lO3UrKyx2PWgubmV4dCgpKXY9eihyLGUsdSx2LnZhbHVlLGspLG51bGwhPT12JiYoYSYmbnVsbCE9PXYuYWx0ZXJuYXRlJiZyLmRlbGV0ZShudWxsPT09di5rZXk/dTpcbnYua2V5KSxnPWYodixnLHUpLG51bGw9PT1tP2w9djptLnNpYmxpbmc9dixtPXYpO2EmJnIuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe3ZhciBrPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PWFjJiZudWxsPT09Zi5rZXk7ayYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGw9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihsKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIFpiOmE6e2w9Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bClpZig3PT09ay50YWc/Zi50eXBlPT09YWM6ay5lbGVtZW50VHlwZT09PWYudHlwZSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi50eXBlPT09YWM/Zi5wcm9wcy5jaGlsZHJlbjpmLnByb3BzLGgpO2QucmVmPSRmKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGspO2JyZWFrfWVsc2UgYihhLGspO2s9XG5rLnNpYmxpbmd9Zi50eXBlPT09YWM/KGQ9YWYoZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPSRlKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPSRmKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSAkYjphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10saCk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPWRmKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVxuXCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYsaCksZC5yZXR1cm49YSxhPWQpOihjKGEsZCksZD1jZihmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZihaZihmKSlyZXR1cm4gQihhLGQsZixoKTtpZihsYyhmKSlyZXR1cm4gUShhLGQsZixoKTtsJiZhZyhhLGYpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZiYmIWspc3dpdGNoKGEudGFnKXtjYXNlIDE6Y2FzZSAwOmg9YS50eXBlLHQoXCIxNTJcIixoLmRpc3BsYXlOYW1lfHxoLm5hbWV8fFwiQ29tcG9uZW50XCIpfXJldHVybiBjKGEsZCl9fXZhciBjZz1iZyghMCksZGc9YmcoITEpLGVnPW51bGwsZmc9bnVsbCxnZz0hMTtcbmZ1bmN0aW9uIGhnKGEsYil7dmFyIGM9TSg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2MudHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yy5lZmZlY3RUYWc9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfWZ1bmN0aW9uIGlnKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gamcoYSl7aWYoZ2cpe3ZhciBiPWZnO2lmKGIpe3ZhciBjPWI7aWYoIWlnKGEsYikpe2I9RmUoYyk7aWYoIWJ8fCFpZyhhLGIpKXthLmVmZmVjdFRhZ3w9MjtnZz0hMTtlZz1hO3JldHVybn1oZyhlZyxjKX1lZz1hO2ZnPUdlKGIpfWVsc2UgYS5lZmZlY3RUYWd8PTIsZ2c9ITEsZWc9YX19ZnVuY3Rpb24ga2coYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnOylhPWEucmV0dXJuO2VnPWF9ZnVuY3Rpb24gbGcoYSl7aWYoYSE9PWVnKXJldHVybiExO2lmKCFnZylyZXR1cm4ga2coYSksZ2c9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFDZShiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9Zmc7YjspaGcoYSxiKSxiPUZlKGIpO2tnKGEpO2ZnPWVnP0ZlKGEuc3RhdGVOb2RlKTpudWxsO3JldHVybiEwfWZ1bmN0aW9uIG1nKCl7Zmc9ZWc9bnVsbDtnZz0hMX12YXIgbmc9WGIuUmVhY3RDdXJyZW50T3duZXI7XG5mdW5jdGlvbiBQKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/ZGcoYixudWxsLGMsZCk6Y2coYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gb2coYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO0NmKGIsZSk7ZD1jKGQsZik7Yi5lZmZlY3RUYWd8PTE7UChhLGIsZCxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHBnKGEsYixjLGQsZSxmKXtpZihudWxsPT09YSl7dmFyIGc9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiYhWGUoZykmJnZvaWQgMD09PWcuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxxZyhhLGIsZyxkLGUsZik7YT0kZShjLnR5cGUsbnVsbCxkLG51bGwsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoZTxmJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOmpkLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuIHJnKGEsYixmKTtiLmVmZmVjdFRhZ3w9MTthPVplKGcsZCxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBxZyhhLGIsYyxkLGUsZil7cmV0dXJuIG51bGwhPT1hJiZlPGYmJmpkKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZj9yZyhhLGIsZik6c2coYSxiLGMsZCxmKX1mdW5jdGlvbiB0ZyhhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmVmZmVjdFRhZ3w9MTI4fWZ1bmN0aW9uIHNnKGEsYixjLGQsZSl7dmFyIGY9TChjKT9LZTpKLmN1cnJlbnQ7Zj1MZShiLGYpO0NmKGIsZSk7Yz1jKGQsZik7Yi5lZmZlY3RUYWd8PTE7UChhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHVnKGEsYixjLGQsZSl7aWYoTChjKSl7dmFyIGY9ITA7UWUoYil9ZWxzZSBmPSExO0NmKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxXZihiLGMsZCxlKSxZZihiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1OZi5jdXJyZW50RGlzcGF0Y2hlci5yZWFkQ29udGV4dChsKToobD1MKGMpP0tlOkouY3VycmVudCxsPUxlKGIsbCkpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLHE9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO3F8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZYZihiLGcsZCxsKTtqZj0hMTt2YXIgeD1iLm1lbW9pemVkU3RhdGU7az1nLnN0YXRlPXg7dmFyIHo9Yi51cGRhdGVRdWV1ZTtudWxsIT09eiYmKHNmKGIseixkLGcsZSksaz1iLm1lbW9pemVkU3RhdGUpO2ghPT1kfHx4IT09a3x8Sy5jdXJyZW50fHxqZj8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihQZihiLGMsbSxkKSxrPWIubWVtb2l6ZWRTdGF0ZSksKGg9amZ8fFZmKGIsYyxoLGQseCxrLGwpKT8ocXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlxuZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksZD0hMSl9ZWxzZSBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzLGcucHJvcHM9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOk8oYi50eXBlLGgpLGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZSxcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9TmYuY3VycmVudERpc3BhdGNoZXIucmVhZENvbnRleHQobCk6KGw9TChjKT9LZTpKLmN1cnJlbnQsbD1MZShiLGwpKSxtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLFxuKHE9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZYZihiLGcsZCxsKSxqZj0hMSxrPWIubWVtb2l6ZWRTdGF0ZSx4PWcuc3RhdGU9ayx6PWIudXBkYXRlUXVldWUsbnVsbCE9PXomJihzZihiLHosZCxnLGUpLHg9Yi5tZW1vaXplZFN0YXRlKSxoIT09ZHx8ayE9PXh8fEsuY3VycmVudHx8amY/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoUGYoYixjLG0sZCkseD1iLm1lbW9pemVkU3RhdGUpLChtPWpmfHxWZihiLGMsaCxkLGsseCxsKSk/KHF8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHxcbihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoZCx4LGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQseCxsKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTI1NikpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxiLm1lbW9pemVkUHJvcHM9XG5kLGIubWVtb2l6ZWRTdGF0ZT14KSxnLnByb3BzPWQsZy5zdGF0ZT14LGcuY29udGV4dD1sLGQ9bSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGQ9ITEpO3JldHVybiB2ZyhhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiB2ZyhhLGIsYyxkLGUsZil7dGcoYSxiKTt2YXIgZz0wIT09KGIuZWZmZWN0VGFnJjY0KTtpZighZCYmIWcpcmV0dXJuIGUmJlJlKGIsYywhMSkscmcoYSxiLGYpO2Q9Yi5zdGF0ZU5vZGU7bmcuY3VycmVudD1iO3ZhciBoPWcmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcj9udWxsOmQucmVuZGVyKCk7Yi5lZmZlY3RUYWd8PTE7bnVsbCE9PWEmJmc/KGIuY2hpbGQ9Y2coYixhLmNoaWxkLG51bGwsZiksYi5jaGlsZD1jZyhiLG51bGwsaCxmKSk6UChhLGIsaCxmKTtiLm1lbW9pemVkU3RhdGU9ZC5zdGF0ZTtlJiZSZShiLGMsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIHdnKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2IucGVuZGluZ0NvbnRleHQ/T2UoYSxiLnBlbmRpbmdDb250ZXh0LGIucGVuZGluZ0NvbnRleHQhPT1iLmNvbnRleHQpOmIuY29udGV4dCYmT2UoYSxiLmNvbnRleHQsITEpO0lmKGEsYi5jb250YWluZXJJbmZvKX1cbmZ1bmN0aW9uIHhnKGEsYixjKXt2YXIgZD1iLm1vZGUsZT1iLnBlbmRpbmdQcm9wcyxmPWIubWVtb2l6ZWRTdGF0ZTtpZigwPT09KGIuZWZmZWN0VGFnJjY0KSl7Zj1udWxsO3ZhciBnPSExfWVsc2UgZj17dGltZWRPdXRBdDpudWxsIT09Zj9mLnRpbWVkT3V0QXQ6MH0sZz0hMCxiLmVmZmVjdFRhZyY9LTY1O251bGw9PT1hP2c/KGc9ZS5mYWxsYmFjayxlPWFmKG51bGwsZCwwLG51bGwpLDA9PT0oYi5tb2RlJjEpJiYoZS5jaGlsZD1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCksZD1hZihnLGQsYyxudWxsKSxlLnNpYmxpbmc9ZCxjPWUsYy5yZXR1cm49ZC5yZXR1cm49Yik6Yz1kPWRnKGIsbnVsbCxlLmNoaWxkcmVuLGMpOm51bGwhPT1hLm1lbW9pemVkU3RhdGU/KGQ9YS5jaGlsZCxhPWQuc2libGluZyxnPyhjPWUuZmFsbGJhY2ssZT1aZShkLGQucGVuZGluZ1Byb3BzLDApLDA9PT0oYi5tb2RlJjEpJiYoZz1udWxsIT09Yi5tZW1vaXplZFN0YXRlP1xuYi5jaGlsZC5jaGlsZDpiLmNoaWxkLGchPT1kLmNoaWxkJiYoZS5jaGlsZD1nKSksZD1lLnNpYmxpbmc9WmUoYSxjLGEuZXhwaXJhdGlvblRpbWUpLGM9ZSxlLmNoaWxkRXhwaXJhdGlvblRpbWU9MCxjLnJldHVybj1kLnJldHVybj1iKTpjPWQ9Y2coYixkLmNoaWxkLGUuY2hpbGRyZW4sYykpOihhPWEuY2hpbGQsZz8oZz1lLmZhbGxiYWNrLGU9YWYobnVsbCxkLDAsbnVsbCksZS5jaGlsZD1hLDA9PT0oYi5tb2RlJjEpJiYoZS5jaGlsZD1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCksZD1lLnNpYmxpbmc9YWYoZyxkLGMsbnVsbCksZC5lZmZlY3RUYWd8PTIsYz1lLGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGMucmV0dXJuPWQucmV0dXJuPWIpOmQ9Yz1jZyhiLGEsZS5jaGlsZHJlbixjKSk7Yi5tZW1vaXplZFN0YXRlPWY7Yi5jaGlsZD1jO3JldHVybiBkfVxuZnVuY3Rpb24gcmcoYSxiLGMpe251bGwhPT1hJiYoYi5maXJzdENvbnRleHREZXBlbmRlbmN5PWEuZmlyc3RDb250ZXh0RGVwZW5kZW5jeSk7aWYoYi5jaGlsZEV4cGlyYXRpb25UaW1lPGMpcmV0dXJuIG51bGw7bnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkP3QoXCIxNTNcIik6dm9pZCAwO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1aZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1aZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiB5ZyhhLGIsYyl7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTtpZihudWxsIT09YSYmYS5tZW1vaXplZFByb3BzPT09Yi5wZW5kaW5nUHJvcHMmJiFLLmN1cnJlbnQmJmQ8Yyl7c3dpdGNoKGIudGFnKXtjYXNlIDM6d2coYik7bWcoKTticmVhaztjYXNlIDU6S2YoYik7YnJlYWs7Y2FzZSAxOkwoYi50eXBlKSYmUWUoYik7YnJlYWs7Y2FzZSA0OklmKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDpBZihiLGIubWVtb2l6ZWRQcm9wcy52YWx1ZSk7YnJlYWs7Y2FzZSAxMzppZihudWxsIT09Yi5tZW1vaXplZFN0YXRlKXtkPWIuY2hpbGQuY2hpbGRFeHBpcmF0aW9uVGltZTtpZigwIT09ZCYmZD49YylyZXR1cm4geGcoYSxiLGMpO2I9cmcoYSxiLGMpO3JldHVybiBudWxsIT09Yj9iLnNpYmxpbmc6bnVsbH19cmV0dXJuIHJnKGEsYixjKX1iLmV4cGlyYXRpb25UaW1lPTA7c3dpdGNoKGIudGFnKXtjYXNlIDI6ZD1iLmVsZW1lbnRUeXBlO251bGwhPT1cbmEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7dmFyIGU9TGUoYixKLmN1cnJlbnQpO0NmKGIsYyk7ZT1kKGEsZSk7Yi5lZmZlY3RUYWd8PTE7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mKXtiLnRhZz0xO2lmKEwoZCkpe3ZhciBmPSEwO1FlKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZQZihiLGQsZyxhKTtlLnVwZGF0ZXI9VWY7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFsRmliZXI9YjtZZihiLGQsYSxjKTtiPXZnKG51bGwsYixkLCEwLGYsYyl9ZWxzZSBiLnRhZz0wLFAobnVsbCxiLGUsYyksYj1iLmNoaWxkO1xucmV0dXJuIGI7Y2FzZSAxNjplPWIuZWxlbWVudFR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2Y9Yi5wZW5kaW5nUHJvcHM7YT1NZihlKTtiLnR5cGU9YTtlPWIudGFnPVllKGEpO2Y9TyhhLGYpO2c9dm9pZCAwO3N3aXRjaChlKXtjYXNlIDA6Zz1zZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTpnPXVnKG51bGwsYixhLGYsYyk7YnJlYWs7Y2FzZSAxMTpnPW9nKG51bGwsYixhLGYsYyk7YnJlYWs7Y2FzZSAxNDpnPXBnKG51bGwsYixhLE8oYS50eXBlLGYpLGQsYyk7YnJlYWs7ZGVmYXVsdDp0KFwiMjgzXCIsYSl9cmV0dXJuIGc7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpPKGQsZSksc2coYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOk8oZCxlKSx1ZyhhLGIsZCxcbmUsYyk7Y2FzZSAzOndnKGIpO2Q9Yi51cGRhdGVRdWV1ZTtudWxsPT09ZD90KFwiMjgyXCIpOnZvaWQgMDtlPWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO3NmKGIsZCxiLnBlbmRpbmdQcm9wcyxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpbWcoKSxiPXJnKGEsYixjKTtlbHNle2U9Yi5zdGF0ZU5vZGU7aWYoZT0obnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKSYmZS5oeWRyYXRlKWZnPUdlKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGVnPWIsZT1nZz0hMDtlPyhiLmVmZmVjdFRhZ3w9MixiLmNoaWxkPWRnKGIsbnVsbCxkLGMpKTooUChhLGIsZCxjKSxtZygpKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBLZihiKSxudWxsPT09YSYmamcoYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLGc9ZS5jaGlsZHJlbixDZShkLGUpP2c9bnVsbDpudWxsIT09XG5mJiZDZShkLGYpJiYoYi5lZmZlY3RUYWd8PTE2KSx0ZyhhLGIpLDEhPT1jJiZiLm1vZGUmMSYmZS5oaWRkZW4/KGIuZXhwaXJhdGlvblRpbWU9MSxiPW51bGwpOihQKGEsYixnLGMpLGI9Yi5jaGlsZCksYjtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZqZyhiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIHhnKGEsYixjKTtjYXNlIDQ6cmV0dXJuIElmKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPWNnKGIsbnVsbCxkLGMpOlAoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpPKGQsZSksb2coYSxiLGQsZSxjKTtjYXNlIDc6cmV0dXJuIFAoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBQKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIFAoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLFxuYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O2U9Yi5wZW5kaW5nUHJvcHM7Zz1iLm1lbW9pemVkUHJvcHM7Zj1lLnZhbHVlO0FmKGIsZik7aWYobnVsbCE9PWcpe3ZhciBoPWcudmFsdWU7Zj1oPT09ZiYmKDAhPT1ofHwxL2g9PT0xL2YpfHxoIT09aCYmZiE9PWY/MDooXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzP2QuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzKGgsZik6MTA3Mzc0MTgyMyl8MDtpZigwPT09Zil7aWYoZy5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJiFLLmN1cnJlbnQpe2I9cmcoYSxiLGMpO2JyZWFrIGF9fWVsc2UgZm9yKGc9Yi5jaGlsZCxudWxsIT09ZyYmKGcucmV0dXJuPWIpO251bGwhPT1nOyl7aD1nLmZpcnN0Q29udGV4dERlcGVuZGVuY3k7aWYobnVsbCE9PWgpe2Rve2lmKGguY29udGV4dD09PWQmJjAhPT0oaC5vYnNlcnZlZEJpdHMmZikpe2lmKDE9PT1nLnRhZyl7dmFyIGs9bWYoYyk7ay50YWc9MjtvZihnLGspfWcuZXhwaXJhdGlvblRpbWU8XG5jJiYoZy5leHBpcmF0aW9uVGltZT1jKTtrPWcuYWx0ZXJuYXRlO251bGwhPT1rJiZrLmV4cGlyYXRpb25UaW1lPGMmJihrLmV4cGlyYXRpb25UaW1lPWMpO2Zvcih2YXIgbD1nLnJldHVybjtudWxsIT09bDspe2s9bC5hbHRlcm5hdGU7aWYobC5jaGlsZEV4cGlyYXRpb25UaW1lPGMpbC5jaGlsZEV4cGlyYXRpb25UaW1lPWMsbnVsbCE9PWsmJmsuY2hpbGRFeHBpcmF0aW9uVGltZTxjJiYoay5jaGlsZEV4cGlyYXRpb25UaW1lPWMpO2Vsc2UgaWYobnVsbCE9PWsmJmsuY2hpbGRFeHBpcmF0aW9uVGltZTxjKWsuY2hpbGRFeHBpcmF0aW9uVGltZT1jO2Vsc2UgYnJlYWs7bD1sLnJldHVybn19az1nLmNoaWxkO2g9aC5uZXh0fXdoaWxlKG51bGwhPT1oKX1lbHNlIGs9MTA9PT1nLnRhZz9nLnR5cGU9PT1iLnR5cGU/bnVsbDpnLmNoaWxkOmcuY2hpbGQ7aWYobnVsbCE9PWspay5yZXR1cm49ZztlbHNlIGZvcihrPWc7bnVsbCE9PWs7KXtpZihrPT09Yil7az1udWxsO2JyZWFrfWc9ay5zaWJsaW5nO1xuaWYobnVsbCE9PWcpe2cucmV0dXJuPWsucmV0dXJuO2s9ZzticmVha31rPWsucmV0dXJufWc9a319UChhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbixDZihiLGMpLGU9RGYoZSxmLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZWZmZWN0VGFnfD0xLFAoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPU8oZS50eXBlLGIucGVuZGluZ1Byb3BzKSxwZyhhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4gcWcoYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOk8oZCxlKSxudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksYi50YWc9MSxMKGQpPyhhPSEwLFFlKGIpKTpcbmE9ITEsQ2YoYixjKSxXZihiLGQsZSxjKSxZZihiLGQsZSxjKSx2ZyhudWxsLGIsZCwhMCxhLGMpO2RlZmF1bHQ6dChcIjE1NlwiKX19ZnVuY3Rpb24gemcoYSl7YS5lZmZlY3RUYWd8PTR9dmFyIEFnPXZvaWQgMCxCZz12b2lkIDAsRmc9dm9pZCAwLEdnPXZvaWQgMDtBZz1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1iLmNoaWxkO251bGwhPT1jOyl7aWYoNT09PWMudGFnfHw2PT09Yy50YWcpYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Yy50YWcmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX07Qmc9ZnVuY3Rpb24oKXt9O1xuRmc9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1hLm1lbW9pemVkUHJvcHM7aWYoZiE9PWQpe3ZhciBnPWIuc3RhdGVOb2RlO0hmKE4uY3VycmVudCk7YT1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpmPUFjKGcsZik7ZD1BYyhnLGQpO2E9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmY9ZWUoZyxmKTtkPWVlKGcsZCk7YT1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6Zj1uKHt9LGYse3ZhbHVlOnZvaWQgMH0pO2Q9bih7fSxkLHt2YWx1ZTp2b2lkIDB9KTthPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmY9Z2UoZyxmKTtkPWdlKGcsZCk7YT1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBmLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihnLm9uY2xpY2s9eWUpfXZlKGMsZCk7Zz1jPXZvaWQgMDt2YXIgaD1udWxsO2ZvcihjIGluIGYpaWYoIWQuaGFzT3duUHJvcGVydHkoYykmJmYuaGFzT3duUHJvcGVydHkoYykmJm51bGwhPWZbY10paWYoXCJzdHlsZVwiPT09XG5jKXt2YXIgaz1mW2NdO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmKGh8fChoPXt9KSxoW2ddPVwiXCIpfWVsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1jJiZcImNoaWxkcmVuXCIhPT1jJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YyYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWMmJlwiYXV0b0ZvY3VzXCIhPT1jJiYoc2EuaGFzT3duUHJvcGVydHkoYyk/YXx8KGE9W10pOihhPWF8fFtdKS5wdXNoKGMsbnVsbCkpO2ZvcihjIGluIGQpe3ZhciBsPWRbY107az1udWxsIT1mP2ZbY106dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkoYykmJmwhPT1rJiYobnVsbCE9bHx8bnVsbCE9aykpaWYoXCJzdHlsZVwiPT09YylpZihrKXtmb3IoZyBpbiBrKSFrLmhhc093blByb3BlcnR5KGcpfHxsJiZsLmhhc093blByb3BlcnR5KGcpfHwoaHx8KGg9e30pLGhbZ109XCJcIik7Zm9yKGcgaW4gbClsLmhhc093blByb3BlcnR5KGcpJiZrW2ddIT09bFtnXSYmKGh8fFxuKGg9e30pLGhbZ109bFtnXSl9ZWxzZSBofHwoYXx8KGE9W10pLGEucHVzaChjLGgpKSxoPWw7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWM/KGw9bD9sLl9faHRtbDp2b2lkIDAsaz1rP2suX19odG1sOnZvaWQgMCxudWxsIT1sJiZrIT09bCYmKGE9YXx8W10pLnB1c2goYyxcIlwiK2wpKTpcImNoaWxkcmVuXCI9PT1jP2s9PT1sfHxcInN0cmluZ1wiIT09dHlwZW9mIGwmJlwibnVtYmVyXCIhPT10eXBlb2YgbHx8KGE9YXx8W10pLnB1c2goYyxcIlwiK2wpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1jJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09YyYmKHNhLmhhc093blByb3BlcnR5KGMpPyhudWxsIT1sJiZ4ZShlLGMpLGF8fGs9PT1sfHwoYT1bXSkpOihhPWF8fFtdKS5wdXNoKGMsbCkpfWgmJihhPWF8fFtdKS5wdXNoKFwic3R5bGVcIixoKTtlPWE7KGIudXBkYXRlUXVldWU9ZSkmJnpnKGIpfX07R2c9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJnpnKGIpfTtcbmZ1bmN0aW9uIEhnKGEsYil7dmFyIGM9Yi5zb3VyY2UsZD1iLnN0YWNrO251bGw9PT1kJiZudWxsIT09YyYmKGQ9bmMoYykpO251bGwhPT1jJiZtYyhjLnR5cGUpO2I9Yi52YWx1ZTtudWxsIT09YSYmMT09PWEudGFnJiZtYyhhLnR5cGUpO3RyeXtjb25zb2xlLmVycm9yKGIpfWNhdGNoKGUpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBlO30pfX1mdW5jdGlvbiBJZyhhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtKZyhhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9XG5mdW5jdGlvbiBLZyhhKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgVGUmJlRlKGEpO3N3aXRjaChhLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OnZhciBiPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWImJihiPWIubGFzdEVmZmVjdCxudWxsIT09Yikpe3ZhciBjPWI9Yi5uZXh0O2Rve3ZhciBkPWMuZGVzdHJveTtpZihudWxsIT09ZCl7dmFyIGU9YTt0cnl7ZCgpfWNhdGNoKGYpe0pnKGUsZil9fWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX1icmVhaztjYXNlIDE6SWcoYSk7Yj1hLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsVW5tb3VudCl0cnl7Yi5wcm9wcz1hLm1lbW9pemVkUHJvcHMsYi5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsYi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGYpe0pnKGEsZil9YnJlYWs7Y2FzZSA1OklnKGEpO2JyZWFrO2Nhc2UgNDpMZyhhKX19XG5mdW5jdGlvbiBNZyhhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIE5nKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKE1nKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn10KFwiMTYwXCIpO2M9dm9pZCAwfXZhciBkPWI9dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmI9Yy5zdGF0ZU5vZGU7ZD0hMTticmVhaztjYXNlIDM6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6dChcIjE2MVwiKX1jLmVmZmVjdFRhZyYxNiYmKHBlKGIsXCJcIiksYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxNZyhjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyYyKWNvbnRpbnVlIGI7XG5pZihudWxsPT09Yy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWZvcih2YXIgZT1hOzspe2lmKDU9PT1lLnRhZ3x8Nj09PWUudGFnKWlmKGMpaWYoZCl7dmFyIGY9YixnPWUuc3RhdGVOb2RlLGg9Yzs4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGcsaCk6Zi5pbnNlcnRCZWZvcmUoZyxoKX1lbHNlIGIuaW5zZXJ0QmVmb3JlKGUuc3RhdGVOb2RlLGMpO2Vsc2UgZD8oZz1iLGg9ZS5zdGF0ZU5vZGUsOD09PWcubm9kZVR5cGU/KGY9Zy5wYXJlbnROb2RlLGYuaW5zZXJ0QmVmb3JlKGgsZykpOihmPWcsZi5hcHBlbmRDaGlsZChoKSksZz1nLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWcmJnZvaWQgMCE9PWd8fG51bGwhPT1mLm9uY2xpY2t8fChmLm9uY2xpY2s9eWUpKTpiLmFwcGVuZENoaWxkKGUuc3RhdGVOb2RlKTtcbmVsc2UgaWYoNCE9PWUudGFnJiZudWxsIT09ZS5jaGlsZCl7ZS5jaGlsZC5yZXR1cm49ZTtlPWUuY2hpbGQ7Y29udGludWV9aWYoZT09PWEpYnJlYWs7Zm9yKDtudWxsPT09ZS5zaWJsaW5nOyl7aWYobnVsbD09PWUucmV0dXJufHxlLnJldHVybj09PWEpcmV0dXJuO2U9ZS5yZXR1cm59ZS5zaWJsaW5nLnJldHVybj1lLnJldHVybjtlPWUuc2libGluZ319XG5mdW5jdGlvbiBMZyhhKXtmb3IodmFyIGI9YSxjPSExLGQ9dm9pZCAwLGU9dm9pZCAwOzspe2lmKCFjKXtjPWIucmV0dXJuO2E6Zm9yKDs7KXtudWxsPT09Yz90KFwiMTYwXCIpOnZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgNTpkPWMuc3RhdGVOb2RlO2U9ITE7YnJlYWsgYTtjYXNlIDM6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWsgYTtjYXNlIDQ6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWsgYX1jPWMucmV0dXJufWM9ITB9aWYoNT09PWIudGFnfHw2PT09Yi50YWcpe2E6Zm9yKHZhciBmPWIsZz1mOzspaWYoS2coZyksbnVsbCE9PWcuY2hpbGQmJjQhPT1nLnRhZylnLmNoaWxkLnJldHVybj1nLGc9Zy5jaGlsZDtlbHNle2lmKGc9PT1mKWJyZWFrO2Zvcig7bnVsbD09PWcuc2libGluZzspe2lmKG51bGw9PT1nLnJldHVybnx8Zy5yZXR1cm49PT1mKWJyZWFrIGE7Zz1nLnJldHVybn1nLnNpYmxpbmcucmV0dXJuPWcucmV0dXJuO2c9Zy5zaWJsaW5nfWU/XG4oZj1kLGc9Yi5zdGF0ZU5vZGUsOD09PWYubm9kZVR5cGU/Zi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGcpOmYucmVtb3ZlQ2hpbGQoZykpOmQucmVtb3ZlQ2hpbGQoYi5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWIudGFnPyhkPWIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8sZT0hMCk6S2coYiksbnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybjtiPWIucmV0dXJuOzQ9PT1iLnRhZyYmKGM9ITEpfWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fVxuZnVuY3Rpb24gT2coYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpicmVhaztjYXNlIDE6YnJlYWs7Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wcyxlPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO2E9Yi50eXBlO3ZhciBmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKG51bGwhPT1mKXtjW0hhXT1kO1wiaW5wdXRcIj09PWEmJlwicmFkaW9cIj09PWQudHlwZSYmbnVsbCE9ZC5uYW1lJiZDYyhjLGQpO3dlKGEsZSk7Yj13ZShhLGQpO2ZvcihlPTA7ZTxmLmxlbmd0aDtlKz0yKXt2YXIgZz1mW2VdLGg9ZltlKzFdO1wic3R5bGVcIj09PWc/dGUoYyxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP29lKGMsaCk6XCJjaGlsZHJlblwiPT09Zz9wZShjLGgpOnljKGMsZyxoLGIpfXN3aXRjaChhKXtjYXNlIFwiaW5wdXRcIjpEYyhjLGQpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmllKGMsXG5kKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsYy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZC5tdWx0aXBsZSxhPWQudmFsdWUsbnVsbCE9YT9mZShjLCEhZC5tdWx0aXBsZSxhLCExKTpiIT09ISFkLm11bHRpcGxlJiYobnVsbCE9ZC5kZWZhdWx0VmFsdWU/ZmUoYywhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApOmZlKGMsISFkLm11bHRpcGxlLGQubXVsdGlwbGU/W106XCJcIiwhMSkpfX19YnJlYWs7Y2FzZSA2Om51bGw9PT1iLnN0YXRlTm9kZT90KFwiMTYyXCIpOnZvaWQgMDtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yi5tZW1vaXplZFByb3BzO2JyZWFrO2Nhc2UgMzpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6Yz1iLm1lbW9pemVkU3RhdGU7YT1iO251bGw9PT1jP2Q9ITE6KGQ9ITAsYT1iLmNoaWxkLDA9PT1jLnRpbWVkT3V0QXQmJihjLnRpbWVkT3V0QXQ9UWYoKSkpO2lmKG51bGwhPT1hKWE6Zm9yKGI9Yz1hOzspe2lmKDU9PT1cbmIudGFnKWE9Yi5zdGF0ZU5vZGUsZD9hLnN0eWxlLmRpc3BsYXk9XCJub25lXCI6KGE9Yi5zdGF0ZU5vZGUsZj1iLm1lbW9pemVkUHJvcHMuc3R5bGUsZj12b2lkIDAhPT1mJiZudWxsIT09ZiYmZi5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/Zi5kaXNwbGF5Om51bGwsYS5zdHlsZS5kaXNwbGF5PXNlKFwiZGlzcGxheVwiLGYpKTtlbHNlIGlmKDY9PT1iLnRhZyliLnN0YXRlTm9kZS5ub2RlVmFsdWU9ZD9cIlwiOmIubWVtb2l6ZWRQcm9wcztlbHNlIGlmKDEzPT09Yi50YWcmJm51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2E9Yi5jaGlsZC5zaWJsaW5nO2EucmV0dXJuPWI7Yj1hO2NvbnRpbnVlfWVsc2UgaWYobnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1jKWJyZWFrIGE7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWMpYnJlYWsgYTtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49XG5iLnJldHVybjtiPWIuc2libGluZ31icmVhaztjYXNlIDE3OmJyZWFrO2RlZmF1bHQ6dChcIjE2M1wiKX19ZnVuY3Rpb24gUGcoYSxiLGMpe2M9bWYoYyk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7UWcoZCk7SGcoYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBSZyhhLGIsYyl7Yz1tZihjKTtjLnRhZz0zO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7cmV0dXJuIGQoZSl9fXZhciBmPWEuc3RhdGVOb2RlO251bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1TZz9TZz1uZXcgU2V0KFt0aGlzXSk6U2cuYWRkKHRoaXMpKTt2YXIgYz1iLnZhbHVlLGU9Yi5zdGFjaztIZyhhLGIpO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYyx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWU/ZTpcIlwifSl9KTtyZXR1cm4gY31cbmZ1bmN0aW9uIFRnKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkwoYS50eXBlKSYmTWUoYSk7dmFyIGI9YS5lZmZlY3RUYWc7cmV0dXJuIGImMjA0OD8oYS5lZmZlY3RUYWc9YiYtMjA0OXw2NCxhKTpudWxsO2Nhc2UgMzpyZXR1cm4gSmYoYSksTmUoYSksYj1hLmVmZmVjdFRhZywwIT09KGImNjQpP3QoXCIyODVcIik6dm9pZCAwLGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYTtjYXNlIDU6cmV0dXJuIExmKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gYj1hLmVmZmVjdFRhZyxiJjIwNDg/KGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYSk6bnVsbDtjYXNlIDQ6cmV0dXJuIEpmKGEpLG51bGw7Y2FzZSAxMDpyZXR1cm4gQmYoYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBVZz17cmVhZENvbnRleHQ6RGZ9LFZnPVhiLlJlYWN0Q3VycmVudE93bmVyLFdnPTEwNzM3NDE4MjIsWGc9MCxZZz0hMSxSPW51bGwsUz1udWxsLFQ9MCxaZz0tMSwkZz0hMSxVPW51bGwsYWg9ITEsYmg9bnVsbCxjaD1udWxsLFNnPW51bGw7ZnVuY3Rpb24gZGgoKXtpZihudWxsIT09Uilmb3IodmFyIGE9Ui5yZXR1cm47bnVsbCE9PWE7KXt2YXIgYj1hO3N3aXRjaChiLnRhZyl7Y2FzZSAxOnZhciBjPWIudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09YyYmdm9pZCAwIT09YyYmTWUoYik7YnJlYWs7Y2FzZSAzOkpmKGIpO05lKGIpO2JyZWFrO2Nhc2UgNTpMZihiKTticmVhaztjYXNlIDQ6SmYoYik7YnJlYWs7Y2FzZSAxMDpCZihiKX1hPWEucmV0dXJufVM9bnVsbDtUPTA7Wmc9LTE7JGc9ITE7Uj1udWxsfWZ1bmN0aW9uIFNmKCl7bnVsbCE9PWNoJiYoYmEudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2soYmgpLGNoKCkpfVxuZnVuY3Rpb24gZWgoYSl7Zm9yKDs7KXt2YXIgYj1hLmFsdGVybmF0ZSxjPWEucmV0dXJuLGQ9YS5zaWJsaW5nO2lmKDA9PT0oYS5lZmZlY3RUYWcmMTAyNCkpe1I9YTthOnt2YXIgZT1iO2I9YTt2YXIgZj1UO3ZhciBnPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmJyZWFrO2Nhc2UgMTY6YnJlYWs7Y2FzZSAxNTpjYXNlIDA6YnJlYWs7Y2FzZSAxOkwoYi50eXBlKSYmTWUoYik7YnJlYWs7Y2FzZSAzOkpmKGIpO05lKGIpO2c9Yi5zdGF0ZU5vZGU7Zy5wZW5kaW5nQ29udGV4dCYmKGcuY29udGV4dD1nLnBlbmRpbmdDb250ZXh0LGcucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWV8fG51bGw9PT1lLmNoaWxkKWxnKGIpLGIuZWZmZWN0VGFnJj0tMztCZyhiKTticmVhaztjYXNlIDU6TGYoYik7dmFyIGg9SGYoR2YuY3VycmVudCk7Zj1iLnR5cGU7aWYobnVsbCE9PWUmJm51bGwhPWIuc3RhdGVOb2RlKUZnKGUsYixmLGcsaCksZS5yZWYhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD1cbjEyOCk7ZWxzZSBpZihnKXt2YXIgaz1IZihOLmN1cnJlbnQpO2lmKGxnKGIpKXtnPWI7ZT1nLnN0YXRlTm9kZTt2YXIgbD1nLnR5cGUsbT1nLm1lbW9pemVkUHJvcHMscT1oO2VbR2FdPWc7ZVtIYV09bTtmPXZvaWQgMDtoPWw7c3dpdGNoKGgpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6RyhcImxvYWRcIixlKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IobD0wO2w8YmIubGVuZ3RoO2wrKylHKGJiW2xdLGUpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpHKFwiZXJyb3JcIixlKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpHKFwiZXJyb3JcIixlKTtHKFwibG9hZFwiLGUpO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RyhcInJlc2V0XCIsZSk7RyhcInN1Ym1pdFwiLGUpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RyhcInRvZ2dsZVwiLGUpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkJjKGUsbSk7RyhcImludmFsaWRcIixlKTt4ZShxLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmUuX3dyYXBwZXJTdGF0ZT1cbnt3YXNNdWx0aXBsZTohIW0ubXVsdGlwbGV9O0coXCJpbnZhbGlkXCIsZSk7eGUocSxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhlKGUsbSksRyhcImludmFsaWRcIixlKSx4ZShxLFwib25DaGFuZ2VcIil9dmUoaCxtKTtsPW51bGw7Zm9yKGYgaW4gbSltLmhhc093blByb3BlcnR5KGYpJiYoaz1tW2ZdLFwiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBrP2UudGV4dENvbnRlbnQhPT1rJiYobD1bXCJjaGlsZHJlblwiLGtdKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJmUudGV4dENvbnRlbnQhPT1cIlwiK2smJihsPVtcImNoaWxkcmVuXCIsXCJcIitrXSk6c2EuaGFzT3duUHJvcGVydHkoZikmJm51bGwhPWsmJnhlKHEsZikpO3N3aXRjaChoKXtjYXNlIFwiaW5wdXRcIjpWYihlKTtGYyhlLG0sITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZiKGUpO2plKGUsbSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBtLm9uQ2xpY2smJlxuKGUub25jbGljaz15ZSl9Zj1sO2cudXBkYXRlUXVldWU9ZjtnPW51bGwhPT1mPyEwOiExO2cmJnpnKGIpfWVsc2V7bT1iO2U9ZjtxPWc7bD05PT09aC5ub2RlVHlwZT9oOmgub3duZXJEb2N1bWVudDtrPT09a2UuaHRtbCYmKGs9bGUoZSkpO2s9PT1rZS5odG1sP1wic2NyaXB0XCI9PT1lPyhlPWwuY3JlYXRlRWxlbWVudChcImRpdlwiKSxlLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGw9ZS5yZW1vdmVDaGlsZChlLmZpcnN0Q2hpbGQpKTpcInN0cmluZ1wiPT09dHlwZW9mIHEuaXM/bD1sLmNyZWF0ZUVsZW1lbnQoZSx7aXM6cS5pc30pOihsPWwuY3JlYXRlRWxlbWVudChlKSxcInNlbGVjdFwiPT09ZSYmcS5tdWx0aXBsZSYmKGwubXVsdGlwbGU9ITApKTpsPWwuY3JlYXRlRWxlbWVudE5TKGssZSk7ZT1sO2VbR2FdPW07ZVtIYV09ZztBZyhlLGIsITEsITEpO3E9ZTtsPWY7bT1nO3ZhciB4PWgsej13ZShsLG0pO3N3aXRjaChsKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOkcoXCJsb2FkXCIsXG5xKTtoPW07YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGg9MDtoPGJiLmxlbmd0aDtoKyspRyhiYltoXSxxKTtoPW07YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkcoXCJlcnJvclwiLHEpO2g9bTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpHKFwiZXJyb3JcIixxKTtHKFwibG9hZFwiLHEpO2g9bTticmVhaztjYXNlIFwiZm9ybVwiOkcoXCJyZXNldFwiLHEpO0coXCJzdWJtaXRcIixxKTtoPW07YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpHKFwidG9nZ2xlXCIscSk7aD1tO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkJjKHEsbSk7aD1BYyhxLG0pO0coXCJpbnZhbGlkXCIscSk7eGUoeCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpoPWVlKHEsbSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOnEuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFtLm11bHRpcGxlfTtoPW4oe30sbSx7dmFsdWU6dm9pZCAwfSk7RyhcImludmFsaWRcIixxKTt4ZSh4LFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGUocSxcbm0pO2g9Z2UocSxtKTtHKFwiaW52YWxpZFwiLHEpO3hlKHgsXCJvbkNoYW5nZVwiKTticmVhaztkZWZhdWx0Omg9bX12ZShsLGgpO2s9dm9pZCAwO3ZhciBCPWwsUT1xLHY9aDtmb3IoayBpbiB2KWlmKHYuaGFzT3duUHJvcGVydHkoaykpe3ZhciByPXZba107XCJzdHlsZVwiPT09az90ZShRLHIpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWs/KHI9cj9yLl9faHRtbDp2b2lkIDAsbnVsbCE9ciYmb2UoUSxyKSk6XCJjaGlsZHJlblwiPT09az9cInN0cmluZ1wiPT09dHlwZW9mIHI/KFwidGV4dGFyZWFcIiE9PUJ8fFwiXCIhPT1yKSYmcGUoUSxyKTpcIm51bWJlclwiPT09dHlwZW9mIHImJnBlKFEsXCJcIityKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ayYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWsmJlwiYXV0b0ZvY3VzXCIhPT1rJiYoc2EuaGFzT3duUHJvcGVydHkoayk/bnVsbCE9ciYmeGUoeCxrKTpudWxsIT1yJiZ5YyhRLGsscix6KSl9c3dpdGNoKGwpe2Nhc2UgXCJpbnB1dFwiOlZiKHEpO1xuRmMocSxtLCExKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpWYihxKTtqZShxLG0pO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1tLnZhbHVlJiZxLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIit6YyhtLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmg9cTtoLm11bHRpcGxlPSEhbS5tdWx0aXBsZTtxPW0udmFsdWU7bnVsbCE9cT9mZShoLCEhbS5tdWx0aXBsZSxxLCExKTpudWxsIT1tLmRlZmF1bHRWYWx1ZSYmZmUoaCwhIW0ubXVsdGlwbGUsbS5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGgub25DbGljayYmKHEub25jbGljaz15ZSl9KGc9QmUoZixnKSkmJnpnKGIpO2Iuc3RhdGVOb2RlPWV9bnVsbCE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9ZWxzZSBudWxsPT09Yi5zdGF0ZU5vZGU/dChcIjE2NlwiKTp2b2lkIDA7YnJlYWs7Y2FzZSA2OmUmJm51bGwhPWIuc3RhdGVOb2RlP0dnKGUsYixlLm1lbW9pemVkUHJvcHMsZyk6KFwic3RyaW5nXCIhPT1cbnR5cGVvZiBnJiYobnVsbD09PWIuc3RhdGVOb2RlP3QoXCIxNjZcIik6dm9pZCAwKSxlPUhmKEdmLmN1cnJlbnQpLEhmKE4uY3VycmVudCksbGcoYik/KGc9YixmPWcuc3RhdGVOb2RlLGU9Zy5tZW1vaXplZFByb3BzLGZbR2FdPWcsKGc9Zi5ub2RlVmFsdWUhPT1lKSYmemcoYikpOihmPWIsZz0oOT09PWUubm9kZVR5cGU/ZTplLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGcpLGdbR2FdPWIsZi5zdGF0ZU5vZGU9ZykpO2JyZWFrO2Nhc2UgMTE6YnJlYWs7Y2FzZSAxMzpnPWIubWVtb2l6ZWRTdGF0ZTtpZigwIT09KGIuZWZmZWN0VGFnJjY0KSl7Yi5leHBpcmF0aW9uVGltZT1mO1I9YjticmVhayBhfWc9bnVsbCE9PWc7Zj1udWxsIT09ZSYmbnVsbCE9PWUubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmIWcmJmYmJihlPWUuY2hpbGQuc2libGluZyxudWxsIT09ZSYmKGg9Yi5maXJzdEVmZmVjdCxudWxsIT09aD8oYi5maXJzdEVmZmVjdD1lLGUubmV4dEVmZmVjdD1oKTooYi5maXJzdEVmZmVjdD1cbmIubGFzdEVmZmVjdD1lLGUubmV4dEVmZmVjdD1udWxsKSxlLmVmZmVjdFRhZz04KSk7aWYoZyE9PWZ8fDA9PT0oYi5lZmZlY3RUYWcmMSkmJmcpYi5lZmZlY3RUYWd8PTQ7YnJlYWs7Y2FzZSA3OmJyZWFrO2Nhc2UgODpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgNDpKZihiKTtCZyhiKTticmVhaztjYXNlIDEwOkJmKGIpO2JyZWFrO2Nhc2UgOTpicmVhaztjYXNlIDE0OmJyZWFrO2Nhc2UgMTc6TChiLnR5cGUpJiZNZShiKTticmVhaztkZWZhdWx0OnQoXCIxNTZcIil9Uj1udWxsfWI9YTtpZigxPT09VHx8MSE9PWIuY2hpbGRFeHBpcmF0aW9uVGltZSl7Zz0wO2ZvcihmPWIuY2hpbGQ7bnVsbCE9PWY7KWU9Zi5leHBpcmF0aW9uVGltZSxoPWYuY2hpbGRFeHBpcmF0aW9uVGltZSxlPmcmJihnPWUpLGg+ZyYmKGc9aCksZj1mLnNpYmxpbmc7Yi5jaGlsZEV4cGlyYXRpb25UaW1lPWd9aWYobnVsbCE9PVIpcmV0dXJuIFI7bnVsbCE9PWMmJjA9PT0oYy5lZmZlY3RUYWcmMTAyNCkmJihudWxsPT09XG5jLmZpcnN0RWZmZWN0JiYoYy5maXJzdEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxudWxsIT09YS5sYXN0RWZmZWN0JiYobnVsbCE9PWMubGFzdEVmZmVjdCYmKGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLGMubGFzdEVmZmVjdD1hLmxhc3RFZmZlY3QpLDE8YS5lZmZlY3RUYWcmJihudWxsIT09Yy5sYXN0RWZmZWN0P2MubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWE6Yy5maXJzdEVmZmVjdD1hLGMubGFzdEVmZmVjdD1hKSl9ZWxzZXthPVRnKGEsVCk7aWYobnVsbCE9PWEpcmV0dXJuIGEuZWZmZWN0VGFnJj0xMDIzLGE7bnVsbCE9PWMmJihjLmZpcnN0RWZmZWN0PWMubGFzdEVmZmVjdD1udWxsLGMuZWZmZWN0VGFnfD0xMDI0KX1pZihudWxsIT09ZClyZXR1cm4gZDtpZihudWxsIT09YylhPWM7ZWxzZSBicmVha31yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGZoKGEpe3ZhciBiPXlnKGEuYWx0ZXJuYXRlLGEsVCk7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iJiYoYj1laChhKSk7VmcuY3VycmVudD1udWxsO3JldHVybiBifVxuZnVuY3Rpb24gZ2goYSxiKXtZZz90KFwiMjQzXCIpOnZvaWQgMDtTZigpO1lnPSEwO1ZnLmN1cnJlbnREaXNwYXRjaGVyPVVnO3ZhciBjPWEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT247aWYoYyE9PVR8fGEhPT1TfHxudWxsPT09UilkaCgpLFM9YSxUPWMsUj1aZShTLmN1cnJlbnQsbnVsbCxUKSxhLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT0wO3ZhciBkPSExO2Rve3RyeXtpZihiKWZvcig7bnVsbCE9PVImJiFoaCgpOylSPWZoKFIpO2Vsc2UgZm9yKDtudWxsIT09UjspUj1maChSKX1jYXRjaChCKXtpZih6Zj15Zj14Zj1udWxsLG51bGw9PT1SKWQ9ITAsUWcoQik7ZWxzZXtudWxsPT09Uj90KFwiMjcxXCIpOnZvaWQgMDt2YXIgZT1SLGY9ZS5yZXR1cm47aWYobnVsbD09PWYpZD0hMCxRZyhCKTtlbHNle2E6e3ZhciBnPWEsaD1mLGs9ZSxsPUI7Zj1UO2suZWZmZWN0VGFnfD0xMDI0O2suZmlyc3RFZmZlY3Q9ay5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PWwmJlwib2JqZWN0XCI9PT1cbnR5cGVvZiBsJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbC50aGVuKXt2YXIgbT1sO2w9aDt2YXIgcT0tMSx4PS0xO2Rve2lmKDEzPT09bC50YWcpe3ZhciB6PWwuYWx0ZXJuYXRlO2lmKG51bGwhPT16JiYoej16Lm1lbW9pemVkU3RhdGUsbnVsbCE9PXopKXt4PTEwKigxMDczNzQxODIyLXoudGltZWRPdXRBdCk7YnJlYWt9ej1sLnBlbmRpbmdQcm9wcy5tYXhEdXJhdGlvbjtpZihcIm51bWJlclwiPT09dHlwZW9mIHopaWYoMD49eilxPTA7ZWxzZSBpZigtMT09PXF8fHo8cSlxPXp9bD1sLnJldHVybn13aGlsZShudWxsIT09bCk7bD1oO2Rve2lmKHo9MTM9PT1sLnRhZyl6PXZvaWQgMD09PWwubWVtb2l6ZWRQcm9wcy5mYWxsYmFjaz8hMTpudWxsPT09bC5tZW1vaXplZFN0YXRlO2lmKHope2g9aWguYmluZChudWxsLGcsbCxrLDA9PT0obC5tb2RlJjEpPzEwNzM3NDE4MjM6Zik7bS50aGVuKGgsaCk7aWYoMD09PShsLm1vZGUmMSkpe2wuZWZmZWN0VGFnfD02NDtrLmVmZmVjdFRhZyY9LTE5NTc7XG4xPT09ay50YWcmJm51bGw9PT1rLmFsdGVybmF0ZSYmKGsudGFnPTE3KTtrLmV4cGlyYXRpb25UaW1lPWY7YnJlYWsgYX0tMT09PXE/Zz0xMDczNzQxODIzOigtMT09PXgmJih4PTEwKigxMDczNzQxODIyLWhmKGcsZikpLTVFMyksZz14K3EpOzA8PWcmJlpnPGcmJihaZz1nKTtsLmVmZmVjdFRhZ3w9MjA0ODtsLmV4cGlyYXRpb25UaW1lPWY7YnJlYWsgYX1sPWwucmV0dXJufXdoaWxlKG51bGwhPT1sKTtsPUVycm9yKChtYyhrLnR5cGUpfHxcIkEgUmVhY3QgY29tcG9uZW50XCIpK1wiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIrbmMoaykpfSRnPSEwO2w9dmYobCxrKTtnPWg7ZG97c3dpdGNoKGcudGFnKXtjYXNlIDM6az1cbmw7Zy5lZmZlY3RUYWd8PTIwNDg7Zy5leHBpcmF0aW9uVGltZT1mO2Y9UGcoZyxrLGYpO3BmKGcsZik7YnJlYWsgYTtjYXNlIDE6aWYoaz1sLGg9Zy50eXBlLG09Zy5zdGF0ZU5vZGUsMD09PShnLmVmZmVjdFRhZyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgaC5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT1tJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbS5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1TZ3x8IVNnLmhhcyhtKSkpKXtnLmVmZmVjdFRhZ3w9MjA0ODtnLmV4cGlyYXRpb25UaW1lPWY7Zj1SZyhnLGssZik7cGYoZyxmKTticmVhayBhfX1nPWcucmV0dXJufXdoaWxlKG51bGwhPT1nKX1SPWVoKGUpO2NvbnRpbnVlfX19YnJlYWt9d2hpbGUoMSk7WWc9ITE7emY9eWY9eGY9VmcuY3VycmVudERpc3BhdGNoZXI9bnVsbDtpZihkKVM9bnVsbCxhLmZpbmlzaGVkV29yaz1udWxsO2Vsc2UgaWYobnVsbCE9PVIpYS5maW5pc2hlZFdvcms9bnVsbDtlbHNle2Q9YS5jdXJyZW50LmFsdGVybmF0ZTtcbm51bGw9PT1kP3QoXCIyODFcIik6dm9pZCAwO1M9bnVsbDtpZigkZyl7ZT1hLmxhdGVzdFBlbmRpbmdUaW1lO2Y9YS5sYXRlc3RTdXNwZW5kZWRUaW1lO2c9YS5sYXRlc3RQaW5nZWRUaW1lO2lmKDAhPT1lJiZlPGN8fDAhPT1mJiZmPGN8fDAhPT1nJiZnPGMpe2dmKGEsYyk7amgoYSxkLGMsYS5leHBpcmF0aW9uVGltZSwtMSk7cmV0dXJufWlmKCFhLmRpZEVycm9yJiZiKXthLmRpZEVycm9yPSEwO2M9YS5uZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbj1jO2I9YS5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzO2poKGEsZCxjLGIsLTEpO3JldHVybn19YiYmLTEhPT1aZz8oZ2YoYSxjKSxiPTEwKigxMDczNzQxODIyLWhmKGEsYykpLGI8WmcmJihaZz1iKSxiPTEwKigxMDczNzQxODIyLVFmKCkpLGI9WmctYixqaChhLGQsYyxhLmV4cGlyYXRpb25UaW1lLDA+Yj8wOmIpKTooYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9YyxhLmZpbmlzaGVkV29yaz1kKX19XG5mdW5jdGlvbiBKZyhhLGIpe2Zvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe3N3aXRjaChjLnRhZyl7Y2FzZSAxOnZhciBkPWMuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1TZ3x8IVNnLmhhcyhkKSkpe2E9dmYoYixhKTthPVJnKGMsYSwxMDczNzQxODIzKTtvZihjLGEpO1RmKGMsMTA3Mzc0MTgyMyk7cmV0dXJufWJyZWFrO2Nhc2UgMzphPXZmKGIsYSk7YT1QZyhjLGEsMTA3Mzc0MTgyMyk7b2YoYyxhKTtUZihjLDEwNzM3NDE4MjMpO3JldHVybn1jPWMucmV0dXJufTM9PT1hLnRhZyYmKGM9dmYoYixhKSxjPVBnKGEsYywxMDczNzQxODIzKSxvZihhLGMpLFRmKGEsMTA3Mzc0MTgyMykpfVxuZnVuY3Rpb24gUmYoYSxiKXswIT09WGc/YT1YZzpZZz9hPWFoPzEwNzM3NDE4MjM6VDpiLm1vZGUmMT8oYT1raD8xMDczNzQxODIyLTEwKigoKDEwNzM3NDE4MjItYSsxNSkvMTB8MCkrMSk6MTA3Mzc0MTgyMi0yNSooKCgxMDczNzQxODIyLWErNTAwKS8yNXwwKSsxKSxudWxsIT09UyYmYT09PVQmJi0tYSk6YT0xMDczNzQxODIzO2toJiYoMD09PWxofHxhPGxoKSYmKGxoPWEpO3JldHVybiBhfVxuZnVuY3Rpb24gaWgoYSxiLGMsZCl7dmFyIGU9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU7dmFyIGY9YS5sYXRlc3RTdXNwZW5kZWRUaW1lO2lmKDAhPT1lJiZkPD1lJiZkPj1mKXtmPWU9ZDthLmRpZEVycm9yPSExO3ZhciBnPWEubGF0ZXN0UGluZ2VkVGltZTtpZigwPT09Z3x8Zz5mKWEubGF0ZXN0UGluZ2VkVGltZT1mO2ZmKGYsYSl9ZWxzZSBlPVFmKCksZT1SZihlLGIpLGVmKGEsZSk7MCE9PShiLm1vZGUmMSkmJmE9PT1TJiZUPT09ZCYmKFM9bnVsbCk7bWgoYixlKTswPT09KGIubW9kZSYxKSYmKG1oKGMsZSksMT09PWMudGFnJiZudWxsIT09Yy5zdGF0ZU5vZGUmJihiPW1mKGUpLGIudGFnPTIsb2YoYyxiKSkpO2M9YS5leHBpcmF0aW9uVGltZTswIT09YyYmbmgoYSxjKX1cbmZ1bmN0aW9uIG1oKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTt2YXIgZD1hLnJldHVybixlPW51bGw7aWYobnVsbD09PWQmJjM9PT1hLnRhZyllPWEuc3RhdGVOb2RlO2Vsc2UgZm9yKDtudWxsIT09ZDspe2M9ZC5hbHRlcm5hdGU7ZC5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihkLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7bnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoYy5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO2lmKG51bGw9PT1kLnJldHVybiYmMz09PWQudGFnKXtlPWQuc3RhdGVOb2RlO2JyZWFrfWQ9ZC5yZXR1cm59cmV0dXJuIGV9XG5mdW5jdGlvbiBUZihhLGIpe2E9bWgoYSxiKTtudWxsIT09YSYmKCFZZyYmMCE9PVQmJmI+VCYmZGgoKSxlZihhLGIpLFlnJiYhYWgmJlM9PT1hfHxuaChhLGEuZXhwaXJhdGlvblRpbWUpLG9oPnBoJiYob2g9MCx0KFwiMTg1XCIpKSl9ZnVuY3Rpb24gcWgoYSxiLGMsZCxlKXt2YXIgZj1YZztYZz0xMDczNzQxODIzO3RyeXtyZXR1cm4gYShiLGMsZCxlKX1maW5hbGx5e1hnPWZ9fXZhciByaD1udWxsLFY9bnVsbCxzaD0wLHRoPXZvaWQgMCxXPSExLHVoPW51bGwsWD0wLGxoPTAsdmg9ITEsd2g9bnVsbCxaPSExLHhoPSExLGtoPSExLHloPW51bGwsemg9YmEudW5zdGFibGVfbm93KCksQWg9MTA3Mzc0MTgyMi0oemgvMTB8MCksQmg9QWgscGg9NTAsb2g9MCxDaD1udWxsO2Z1bmN0aW9uIERoKCl7QWg9MTA3Mzc0MTgyMi0oKGJhLnVuc3RhYmxlX25vdygpLXpoKS8xMHwwKX1cbmZ1bmN0aW9uIEVoKGEsYil7aWYoMCE9PXNoKXtpZihiPHNoKXJldHVybjtudWxsIT09dGgmJmJhLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrKHRoKX1zaD1iO2E9YmEudW5zdGFibGVfbm93KCktemg7dGg9YmEudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhGaCx7dGltZW91dDoxMCooMTA3Mzc0MTgyMi1iKS1hfSl9ZnVuY3Rpb24gamgoYSxiLGMsZCxlKXthLmV4cGlyYXRpb25UaW1lPWQ7MCE9PWV8fGhoKCk/MDxlJiYoYS50aW1lb3V0SGFuZGxlPURlKEdoLmJpbmQobnVsbCxhLGIsYyksZSkpOihhLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT1jLGEuZmluaXNoZWRXb3JrPWIpfWZ1bmN0aW9uIEdoKGEsYixjKXthLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT1jO2EuZmluaXNoZWRXb3JrPWI7RGgoKTtCaD1BaDtIaChhLGMpfWZ1bmN0aW9uIFFmKCl7aWYoVylyZXR1cm4gQmg7SWgoKTtpZigwPT09WHx8MT09PVgpRGgoKSxCaD1BaDtyZXR1cm4gQmh9XG5mdW5jdGlvbiBuaChhLGIpe251bGw9PT1hLm5leHRTY2hlZHVsZWRSb290PyhhLmV4cGlyYXRpb25UaW1lPWIsbnVsbD09PVY/KHJoPVY9YSxhLm5leHRTY2hlZHVsZWRSb290PWEpOihWPVYubmV4dFNjaGVkdWxlZFJvb3Q9YSxWLm5leHRTY2hlZHVsZWRSb290PXJoKSk6Yj5hLmV4cGlyYXRpb25UaW1lJiYoYS5leHBpcmF0aW9uVGltZT1iKTtXfHwoWj94aCYmKHVoPWEsWD0xMDczNzQxODIzLEpoKGEsMTA3Mzc0MTgyMywhMSkpOjEwNzM3NDE4MjM9PT1iP0toKDEwNzM3NDE4MjMsITEpOkVoKGEsYikpfVxuZnVuY3Rpb24gSWgoKXt2YXIgYT0wLGI9bnVsbDtpZihudWxsIT09Vilmb3IodmFyIGM9VixkPXJoO251bGwhPT1kOyl7dmFyIGU9ZC5leHBpcmF0aW9uVGltZTtpZigwPT09ZSl7bnVsbD09PWN8fG51bGw9PT1WP3QoXCIyNDRcIik6dm9pZCAwO2lmKGQ9PT1kLm5leHRTY2hlZHVsZWRSb290KXtyaD1WPWQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDticmVha31lbHNlIGlmKGQ9PT1yaClyaD1lPWQubmV4dFNjaGVkdWxlZFJvb3QsVi5uZXh0U2NoZWR1bGVkUm9vdD1lLGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtlbHNlIGlmKGQ9PT1WKXtWPWM7Vi5uZXh0U2NoZWR1bGVkUm9vdD1yaDtkLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBjLm5leHRTY2hlZHVsZWRSb290PWQubmV4dFNjaGVkdWxlZFJvb3QsZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2Q9Yy5uZXh0U2NoZWR1bGVkUm9vdH1lbHNle2U+YSYmKGE9ZSxiPWQpO2lmKGQ9PT1WKWJyZWFrO2lmKDEwNzM3NDE4MjM9PT1cbmEpYnJlYWs7Yz1kO2Q9ZC5uZXh0U2NoZWR1bGVkUm9vdH19dWg9YjtYPWF9dmFyIExoPSExO2Z1bmN0aW9uIGhoKCl7cmV0dXJuIExoPyEwOmJhLnVuc3RhYmxlX3Nob3VsZFlpZWxkKCk/TGg9ITA6ITF9ZnVuY3Rpb24gRmgoKXt0cnl7aWYoIWhoKCkmJm51bGwhPT1yaCl7RGgoKTt2YXIgYT1yaDtkb3t2YXIgYj1hLmV4cGlyYXRpb25UaW1lOzAhPT1iJiZBaDw9YiYmKGEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249QWgpO2E9YS5uZXh0U2NoZWR1bGVkUm9vdH13aGlsZShhIT09cmgpfUtoKDAsITApfWZpbmFsbHl7TGg9ITF9fVxuZnVuY3Rpb24gS2goYSxiKXtJaCgpO2lmKGIpZm9yKERoKCksQmg9QWg7bnVsbCE9PXVoJiYwIT09WCYmYTw9WCYmIShMaCYmQWg+WCk7KUpoKHVoLFgsQWg+WCksSWgoKSxEaCgpLEJoPUFoO2Vsc2UgZm9yKDtudWxsIT09dWgmJjAhPT1YJiZhPD1YOylKaCh1aCxYLCExKSxJaCgpO2ImJihzaD0wLHRoPW51bGwpOzAhPT1YJiZFaCh1aCxYKTtvaD0wO0NoPW51bGw7aWYobnVsbCE9PXloKWZvcihhPXloLHloPW51bGwsYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgYz1hW2JdO3RyeXtjLl9vbkNvbXBsZXRlKCl9Y2F0Y2goZCl7dmh8fCh2aD0hMCx3aD1kKX19aWYodmgpdGhyb3cgYT13aCx3aD1udWxsLHZoPSExLGE7fWZ1bmN0aW9uIEhoKGEsYil7Vz90KFwiMjUzXCIpOnZvaWQgMDt1aD1hO1g9YjtKaChhLGIsITEpO0toKDEwNzM3NDE4MjMsITEpfVxuZnVuY3Rpb24gSmgoYSxiLGMpe1c/dChcIjI0NVwiKTp2b2lkIDA7Vz0hMDtpZihjKXt2YXIgZD1hLmZpbmlzaGVkV29yaztudWxsIT09ZD9NaChhLGQsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsZD1hLnRpbWVvdXRIYW5kbGUsLTEhPT1kJiYoYS50aW1lb3V0SGFuZGxlPS0xLEVlKGQpKSxnaChhLGMpLGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQmJihoaCgpP2EuZmluaXNoZWRXb3JrPWQ6TWgoYSxkLGIpKSl9ZWxzZSBkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kP01oKGEsZCxiKTooYS5maW5pc2hlZFdvcms9bnVsbCxkPWEudGltZW91dEhhbmRsZSwtMSE9PWQmJihhLnRpbWVvdXRIYW5kbGU9LTEsRWUoZCkpLGdoKGEsYyksZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZCYmTWgoYSxkLGIpKTtXPSExfVxuZnVuY3Rpb24gTWgoYSxiLGMpe3ZhciBkPWEuZmlyc3RCYXRjaDtpZihudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU+PWMmJihudWxsPT09eWg/eWg9W2RdOnloLnB1c2goZCksZC5fZGVmZXIpKXthLmZpbmlzaGVkV29yaz1iO2EuZXhwaXJhdGlvblRpbWU9MDtyZXR1cm59YS5maW5pc2hlZFdvcms9bnVsbDthPT09Q2g/b2grKzooQ2g9YSxvaD0wKTthaD1ZZz0hMDthLmN1cnJlbnQ9PT1iP3QoXCIxNzdcIik6dm9pZCAwO2M9YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU7MD09PWM/dChcIjI2MVwiKTp2b2lkIDA7YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDtkPWIuZXhwaXJhdGlvblRpbWU7dmFyIGU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lO2Q9ZT5kP2U6ZDthLmRpZEVycm9yPSExOzA9PT1kPyhhLmVhcmxpZXN0UGVuZGluZ1RpbWU9MCxhLmxhdGVzdFBlbmRpbmdUaW1lPTAsYS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFBpbmdlZFRpbWU9XG4wKTooZT1hLmxhdGVzdFBlbmRpbmdUaW1lLDAhPT1lJiYoZT5kP2EuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lPTA6YS5lYXJsaWVzdFBlbmRpbmdUaW1lPmQmJihhLmVhcmxpZXN0UGVuZGluZ1RpbWU9YS5sYXRlc3RQZW5kaW5nVGltZSkpLGU9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsMD09PWU/ZWYoYSxkKTpkPGEubGF0ZXN0U3VzcGVuZGVkVGltZT8oYS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFBpbmdlZFRpbWU9MCxlZihhLGQpKTpkPmUmJmVmKGEsZCkpO2ZmKDAsYSk7VmcuY3VycmVudD1udWxsOzE8Yi5lZmZlY3RUYWc/bnVsbCE9PWIubGFzdEVmZmVjdD8oYi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YixkPWIuZmlyc3RFZmZlY3QpOmQ9YjpkPWIuZmlyc3RFZmZlY3Q7emU9SGQ7ZT1UZCgpO2lmKFVkKGUpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBlKXZhciBmPXtzdGFydDplLnNlbGVjdGlvblN0YXJ0LFxuZW5kOmUuc2VsZWN0aW9uRW5kfTtlbHNlIGE6e2Y9KGY9ZS5vd25lckRvY3VtZW50KSYmZi5kZWZhdWx0Vmlld3x8d2luZG93O3ZhciBnPWYuZ2V0U2VsZWN0aW9uJiZmLmdldFNlbGVjdGlvbigpO2lmKGcmJjAhPT1nLnJhbmdlQ291bnQpe2Y9Zy5hbmNob3JOb2RlO3ZhciBoPWcuYW5jaG9yT2Zmc2V0LGs9Zy5mb2N1c05vZGU7Zz1nLmZvY3VzT2Zmc2V0O3RyeXtmLm5vZGVUeXBlLGsubm9kZVR5cGV9Y2F0Y2goZGIpe2Y9bnVsbDticmVhayBhfXZhciBsPTAsbT0tMSxxPS0xLHg9MCx6PTAsQj1lLFE9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB2Ozspe0IhPT1mfHwwIT09aCYmMyE9PUIubm9kZVR5cGV8fChtPWwraCk7QiE9PWt8fDAhPT1nJiYzIT09Qi5ub2RlVHlwZXx8KHE9bCtnKTszPT09Qi5ub2RlVHlwZSYmKGwrPUIubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PSh2PUIuZmlyc3RDaGlsZCkpYnJlYWs7UT1CO0I9dn1mb3IoOzspe2lmKEI9PT1lKWJyZWFrIGI7UT09PWYmJlxuKyt4PT09aCYmKG09bCk7UT09PWsmJisrej09PWcmJihxPWwpO2lmKG51bGwhPT0odj1CLm5leHRTaWJsaW5nKSlicmVhaztCPVE7UT1CLnBhcmVudE5vZGV9Qj12fWY9LTE9PT1tfHwtMT09PXE/bnVsbDp7c3RhcnQ6bSxlbmQ6cX19ZWxzZSBmPW51bGx9Zj1mfHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBmPW51bGw7QWU9e2ZvY3VzZWRFbGVtOmUsc2VsZWN0aW9uUmFuZ2U6Zn07SGQ9ITE7Zm9yKFU9ZDtudWxsIT09VTspe2U9ITE7Zj12b2lkIDA7dHJ5e2Zvcig7bnVsbCE9PVU7KXtpZihVLmVmZmVjdFRhZyYyNTYpYTp7dmFyIHI9VS5hbHRlcm5hdGU7aD1VO3N3aXRjaChoLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpicmVhayBhO2Nhc2UgMTppZihoLmVmZmVjdFRhZyYyNTYmJm51bGwhPT1yKXt2YXIgdT1yLm1lbW9pemVkUHJvcHMseT1yLm1lbW9pemVkU3RhdGUsWT1oLnN0YXRlTm9kZSxUaD1ZLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGguZWxlbWVudFR5cGU9PT1oLnR5cGU/XG51Ok8oaC50eXBlLHUpLHkpO1kuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9VGh9YnJlYWsgYTtjYXNlIDM6Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpicmVhayBhO2RlZmF1bHQ6dChcIjE2M1wiKX19VT1VLm5leHRFZmZlY3R9fWNhdGNoKGRiKXtlPSEwLGY9ZGJ9ZSYmKG51bGw9PT1VP3QoXCIxNzhcIik6dm9pZCAwLEpnKFUsZiksbnVsbCE9PVUmJihVPVUubmV4dEVmZmVjdCkpfWZvcihVPWQ7bnVsbCE9PVU7KXtyPSExO3U9dm9pZCAwO3RyeXtmb3IoO251bGwhPT1VOyl7dmFyIHc9VS5lZmZlY3RUYWc7dyYxNiYmcGUoVS5zdGF0ZU5vZGUsXCJcIik7aWYodyYxMjgpe3ZhciBDPVUuYWx0ZXJuYXRlO2lmKG51bGwhPT1DKXt2YXIgcD1DLnJlZjtudWxsIT09cCYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBwP3AobnVsbCk6cC5jdXJyZW50PW51bGwpfX1zd2l0Y2godyYxNCl7Y2FzZSAyOk5nKFUpO1UuZWZmZWN0VGFnJj0tMzticmVhaztjYXNlIDY6TmcoVSk7VS5lZmZlY3RUYWcmPVxuLTM7T2coVS5hbHRlcm5hdGUsVSk7YnJlYWs7Y2FzZSA0Ok9nKFUuYWx0ZXJuYXRlLFUpO2JyZWFrO2Nhc2UgODp5PVUsTGcoeSkseS5yZXR1cm49bnVsbCx5LmNoaWxkPW51bGwseS5hbHRlcm5hdGUmJih5LmFsdGVybmF0ZS5jaGlsZD1udWxsLHkuYWx0ZXJuYXRlLnJldHVybj1udWxsKX1VPVUubmV4dEVmZmVjdH19Y2F0Y2goZGIpe3I9ITAsdT1kYn1yJiYobnVsbD09PVU/dChcIjE3OFwiKTp2b2lkIDAsSmcoVSx1KSxudWxsIT09VSYmKFU9VS5uZXh0RWZmZWN0KSl9cD1BZTtDPVRkKCk7dz1wLmZvY3VzZWRFbGVtO3U9cC5zZWxlY3Rpb25SYW5nZTtpZihDIT09dyYmdyYmdy5vd25lckRvY3VtZW50JiZTZCh3Lm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHcpKXtudWxsIT09dSYmVWQodykmJihDPXUuc3RhcnQscD11LmVuZCx2b2lkIDA9PT1wJiYocD1DKSxcInNlbGVjdGlvblN0YXJ0XCJpbiB3Pyh3LnNlbGVjdGlvblN0YXJ0PUMsdy5zZWxlY3Rpb25FbmQ9TWF0aC5taW4ocCxcbncudmFsdWUubGVuZ3RoKSk6KHA9KEM9dy5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJkMuZGVmYXVsdFZpZXd8fHdpbmRvdyxwLmdldFNlbGVjdGlvbiYmKHA9cC5nZXRTZWxlY3Rpb24oKSx5PXcudGV4dENvbnRlbnQubGVuZ3RoLHI9TWF0aC5taW4odS5zdGFydCx5KSx1PXZvaWQgMD09PXUuZW5kP3I6TWF0aC5taW4odS5lbmQseSksIXAuZXh0ZW5kJiZyPnUmJih5PXUsdT1yLHI9eSkseT1SZCh3LHIpLFk9UmQodyx1KSx5JiZZJiYoMSE9PXAucmFuZ2VDb3VudHx8cC5hbmNob3JOb2RlIT09eS5ub2RlfHxwLmFuY2hvck9mZnNldCE9PXkub2Zmc2V0fHxwLmZvY3VzTm9kZSE9PVkubm9kZXx8cC5mb2N1c09mZnNldCE9PVkub2Zmc2V0KSYmKEM9Qy5jcmVhdGVSYW5nZSgpLEMuc2V0U3RhcnQoeS5ub2RlLHkub2Zmc2V0KSxwLnJlbW92ZUFsbFJhbmdlcygpLHI+dT8ocC5hZGRSYW5nZShDKSxwLmV4dGVuZChZLm5vZGUsWS5vZmZzZXQpKTooQy5zZXRFbmQoWS5ub2RlLFkub2Zmc2V0KSxcbnAuYWRkUmFuZ2UoQykpKSkpKTtDPVtdO2ZvcihwPXc7cD1wLnBhcmVudE5vZGU7KTE9PT1wLm5vZGVUeXBlJiZDLnB1c2goe2VsZW1lbnQ6cCxsZWZ0OnAuc2Nyb2xsTGVmdCx0b3A6cC5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdy5mb2N1cyYmdy5mb2N1cygpO2Zvcih3PTA7dzxDLmxlbmd0aDt3KyspcD1DW3ddLHAuZWxlbWVudC5zY3JvbGxMZWZ0PXAubGVmdCxwLmVsZW1lbnQuc2Nyb2xsVG9wPXAudG9wfUFlPW51bGw7SGQ9ISF6ZTt6ZT1udWxsO2EuY3VycmVudD1iO2ZvcihVPWQ7bnVsbCE9PVU7KXtkPSExO3c9dm9pZCAwO3RyeXtmb3IoQz1jO251bGwhPT1VOyl7dmFyIEZiPVUuZWZmZWN0VGFnO2lmKEZiJjM2KXt2YXIgR2I9VS5hbHRlcm5hdGU7cD1VO3I9Qztzd2l0Y2gocC50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6YnJlYWs7Y2FzZSAxOnZhciB3Yz1wLnN0YXRlTm9kZTtpZihwLmVmZmVjdFRhZyY0KWlmKG51bGw9PT1HYil3Yy5jb21wb25lbnREaWRNb3VudCgpO1xuZWxzZXt2YXIgY2k9cC5lbGVtZW50VHlwZT09PXAudHlwZT9HYi5tZW1vaXplZFByb3BzOk8ocC50eXBlLEdiLm1lbW9pemVkUHJvcHMpO3djLmNvbXBvbmVudERpZFVwZGF0ZShjaSxHYi5tZW1vaXplZFN0YXRlLHdjLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX12YXIgQ2c9cC51cGRhdGVRdWV1ZTtudWxsIT09Q2cmJnRmKHAsQ2csd2Mscik7YnJlYWs7Y2FzZSAzOnZhciBEZz1wLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1EZyl7dT1udWxsO2lmKG51bGwhPT1wLmNoaWxkKXN3aXRjaChwLmNoaWxkLnRhZyl7Y2FzZSA1OnU9cC5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAxOnU9cC5jaGlsZC5zdGF0ZU5vZGV9dGYocCxEZyx1LHIpfWJyZWFrO2Nhc2UgNTp2YXIgZGk9cC5zdGF0ZU5vZGU7bnVsbD09PUdiJiZwLmVmZmVjdFRhZyY0JiZCZShwLnR5cGUscC5tZW1vaXplZFByb3BzKSYmZGkuZm9jdXMoKTticmVhaztjYXNlIDY6YnJlYWs7Y2FzZSA0OmJyZWFrO1xuY2FzZSAxMjpicmVhaztjYXNlIDEzOmJyZWFrO2Nhc2UgMTc6YnJlYWs7ZGVmYXVsdDp0KFwiMTYzXCIpfX1pZihGYiYxMjgpe3ZhciBJYz1VLnJlZjtpZihudWxsIT09SWMpe3ZhciBFZz1VLnN0YXRlTm9kZTtzd2l0Y2goVS50YWcpe2Nhc2UgNTp2YXIgY2U9RWc7YnJlYWs7ZGVmYXVsdDpjZT1FZ31cImZ1bmN0aW9uXCI9PT10eXBlb2YgSWM/SWMoY2UpOkljLmN1cnJlbnQ9Y2V9fVU9VS5uZXh0RWZmZWN0fX1jYXRjaChkYil7ZD0hMCx3PWRifWQmJihudWxsPT09VT90KFwiMTc4XCIpOnZvaWQgMCxKZyhVLHcpLG51bGwhPT1VJiYoVT1VLm5leHRFZmZlY3QpKX1ZZz1haD0hMTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgU2UmJlNlKGIuc3RhdGVOb2RlKTtGYj1iLmV4cGlyYXRpb25UaW1lO2I9Yi5jaGlsZEV4cGlyYXRpb25UaW1lO2I9Yj5GYj9iOkZiOzA9PT1iJiYoU2c9bnVsbCk7YS5leHBpcmF0aW9uVGltZT1iO2EuZmluaXNoZWRXb3JrPW51bGx9XG5mdW5jdGlvbiBRZyhhKXtudWxsPT09dWg/dChcIjI0NlwiKTp2b2lkIDA7dWguZXhwaXJhdGlvblRpbWU9MDt2aHx8KHZoPSEwLHdoPWEpfWZ1bmN0aW9uIE5oKGEsYil7dmFyIGM9WjtaPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5eyhaPWMpfHxXfHxLaCgxMDczNzQxODIzLCExKX19ZnVuY3Rpb24gT2goYSxiKXtpZihaJiYheGgpe3hoPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e3hoPSExfX1yZXR1cm4gYShiKX1mdW5jdGlvbiBQaChhLGIsYyl7aWYoa2gpcmV0dXJuIGEoYixjKTtafHxXfHwwPT09bGh8fChLaChsaCwhMSksbGg9MCk7dmFyIGQ9a2gsZT1aO1o9a2g9ITA7dHJ5e3JldHVybiBhKGIsYyl9ZmluYWxseXtraD1kLChaPWUpfHxXfHxLaCgxMDczNzQxODIzLCExKX19XG5mdW5jdGlvbiBRaChhLGIsYyxkLGUpe3ZhciBmPWIuY3VycmVudDthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO2I6ezI9PT1rZChjKSYmMT09PWMudGFnP3ZvaWQgMDp0KFwiMTcwXCIpO3ZhciBnPWM7ZG97c3dpdGNoKGcudGFnKXtjYXNlIDM6Zz1nLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGI7Y2FzZSAxOmlmKEwoZy50eXBlKSl7Zz1nLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBifX1nPWcucmV0dXJufXdoaWxlKG51bGwhPT1nKTt0KFwiMTcxXCIpO2c9dm9pZCAwfWlmKDE9PT1jLnRhZyl7dmFyIGg9Yy50eXBlO2lmKEwoaCkpe2M9UGUoYyxoLGcpO2JyZWFrIGF9fWM9Z31lbHNlIGM9SmU7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj1lO2U9bWYoZCk7ZS5wYXlsb2FkPXtlbGVtZW50OmF9O2I9dm9pZCAwPT09Yj9udWxsOmI7bnVsbCE9PWImJihlLmNhbGxiYWNrPWIpO1xuU2YoKTtvZihmLGUpO1RmKGYsZCk7cmV0dXJuIGR9ZnVuY3Rpb24gUmgoYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9UWYoKTtlPVJmKGYsZSk7cmV0dXJuIFFoKGEsYixjLGUsZCl9ZnVuY3Rpb24gU2goYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiBVaChhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOiRiLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxuQ2I9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpEYyhhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9TGEoZCk7ZT92b2lkIDA6dChcIjkwXCIpO1diKGQpO0RjKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjppZShhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmZmUoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtcbmZ1bmN0aW9uIFZoKGEpe3ZhciBiPTEwNzM3NDE4MjItMjUqKCgoMTA3Mzc0MTgyMi1RZigpKzUwMCkvMjV8MCkrMSk7Yj49V2cmJihiPVdnLTEpO3RoaXMuX2V4cGlyYXRpb25UaW1lPVdnPWI7dGhpcy5fcm9vdD1hO3RoaXMuX2NhbGxiYWNrcz10aGlzLl9uZXh0PW51bGw7dGhpcy5faGFzQ2hpbGRyZW49dGhpcy5fZGlkQ29tcGxldGU9ITE7dGhpcy5fY2hpbGRyZW49bnVsbDt0aGlzLl9kZWZlcj0hMH1WaC5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe3RoaXMuX2RlZmVyP3ZvaWQgMDp0KFwiMjUwXCIpO3RoaXMuX2hhc0NoaWxkcmVuPSEwO3RoaXMuX2NoaWxkcmVuPWE7dmFyIGI9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGM9dGhpcy5fZXhwaXJhdGlvblRpbWUsZD1uZXcgV2g7UWgoYSxiLG51bGwsYyxkLl9vbkNvbW1pdCk7cmV0dXJuIGR9O1xuVmgucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSl7aWYodGhpcy5fZGlkQ29tcGxldGUpYSgpO2Vsc2V7dmFyIGI9dGhpcy5fY2FsbGJhY2tzO251bGw9PT1iJiYoYj10aGlzLl9jYWxsYmFja3M9W10pO2IucHVzaChhKX19O1xuVmgucHJvdG90eXBlLmNvbW1pdD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX3Jvb3QuX2ludGVybmFsUm9vdCxiPWEuZmlyc3RCYXRjaDt0aGlzLl9kZWZlciYmbnVsbCE9PWI/dm9pZCAwOnQoXCIyNTFcIik7aWYodGhpcy5faGFzQ2hpbGRyZW4pe3ZhciBjPXRoaXMuX2V4cGlyYXRpb25UaW1lO2lmKGIhPT10aGlzKXt0aGlzLl9oYXNDaGlsZHJlbiYmKGM9dGhpcy5fZXhwaXJhdGlvblRpbWU9Yi5fZXhwaXJhdGlvblRpbWUsdGhpcy5yZW5kZXIodGhpcy5fY2hpbGRyZW4pKTtmb3IodmFyIGQ9bnVsbCxlPWI7ZSE9PXRoaXM7KWQ9ZSxlPWUuX25leHQ7bnVsbD09PWQ/dChcIjI1MVwiKTp2b2lkIDA7ZC5fbmV4dD1lLl9uZXh0O3RoaXMuX25leHQ9YjthLmZpcnN0QmF0Y2g9dGhpc310aGlzLl9kZWZlcj0hMTtIaChhLGMpO2I9dGhpcy5fbmV4dDt0aGlzLl9uZXh0PW51bGw7Yj1hLmZpcnN0QmF0Y2g9YjtudWxsIT09YiYmYi5faGFzQ2hpbGRyZW4mJmIucmVuZGVyKGIuX2NoaWxkcmVuKX1lbHNlIHRoaXMuX25leHQ9XG5udWxsLHRoaXMuX2RlZmVyPSExfTtWaC5wcm90b3R5cGUuX29uQ29tcGxldGU9ZnVuY3Rpb24oKXtpZighdGhpcy5fZGlkQ29tcGxldGUpe3RoaXMuX2RpZENvbXBsZXRlPSEwO3ZhciBhPXRoaXMuX2NhbGxiYWNrcztpZihudWxsIT09YSlmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKykoMCxhW2JdKSgpfX07ZnVuY3Rpb24gV2goKXt0aGlzLl9jYWxsYmFja3M9bnVsbDt0aGlzLl9kaWRDb21taXQ9ITE7dGhpcy5fb25Db21taXQ9dGhpcy5fb25Db21taXQuYmluZCh0aGlzKX1XaC5wcm90b3R5cGUudGhlbj1mdW5jdGlvbihhKXtpZih0aGlzLl9kaWRDb21taXQpYSgpO2Vsc2V7dmFyIGI9dGhpcy5fY2FsbGJhY2tzO251bGw9PT1iJiYoYj10aGlzLl9jYWxsYmFja3M9W10pO2IucHVzaChhKX19O1xuV2gucHJvdG90eXBlLl9vbkNvbW1pdD1mdW5jdGlvbigpe2lmKCF0aGlzLl9kaWRDb21taXQpe3RoaXMuX2RpZENvbW1pdD0hMDt2YXIgYT10aGlzLl9jYWxsYmFja3M7aWYobnVsbCE9PWEpZm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBjPWFbYl07XCJmdW5jdGlvblwiIT09dHlwZW9mIGM/dChcIjE5MVwiLGMpOnZvaWQgMDtjKCl9fX07XG5mdW5jdGlvbiBYaChhLGIsYyl7Yj1NKDMsbnVsbCxudWxsLGI/MzowKTthPXtjdXJyZW50OmIsY29udGFpbmVySW5mbzphLHBlbmRpbmdDaGlsZHJlbjpudWxsLGVhcmxpZXN0UGVuZGluZ1RpbWU6MCxsYXRlc3RQZW5kaW5nVGltZTowLGVhcmxpZXN0U3VzcGVuZGVkVGltZTowLGxhdGVzdFN1c3BlbmRlZFRpbWU6MCxsYXRlc3RQaW5nZWRUaW1lOjAsZGlkRXJyb3I6ITEscGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lOjAsZmluaXNoZWRXb3JrOm51bGwsdGltZW91dEhhbmRsZTotMSxjb250ZXh0Om51bGwscGVuZGluZ0NvbnRleHQ6bnVsbCxoeWRyYXRlOmMsbmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT246MCxleHBpcmF0aW9uVGltZTowLGZpcnN0QmF0Y2g6bnVsbCxuZXh0U2NoZWR1bGVkUm9vdDpudWxsfTt0aGlzLl9pbnRlcm5hbFJvb3Q9Yi5zdGF0ZU5vZGU9YX1cblhoLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1uZXcgV2g7Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmZC50aGVuKGIpO1JoKGEsYyxudWxsLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07WGgucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5faW50ZXJuYWxSb290LGM9bmV3IFdoO2E9dm9pZCAwPT09YT9udWxsOmE7bnVsbCE9PWEmJmMudGhlbihhKTtSaChudWxsLGIsbnVsbCxjLl9vbkNvbW1pdCk7cmV0dXJuIGN9O1hoLnByb3RvdHlwZS5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoaXMuX2ludGVybmFsUm9vdCxlPW5ldyBXaDtjPXZvaWQgMD09PWM/bnVsbDpjO251bGwhPT1jJiZlLnRoZW4oYyk7UmgoYixkLGEsZS5fb25Db21taXQpO3JldHVybiBlfTtcblhoLnByb3RvdHlwZS5jcmVhdGVCYXRjaD1mdW5jdGlvbigpe3ZhciBhPW5ldyBWaCh0aGlzKSxiPWEuX2V4cGlyYXRpb25UaW1lLGM9dGhpcy5faW50ZXJuYWxSb290LGQ9Yy5maXJzdEJhdGNoO2lmKG51bGw9PT1kKWMuZmlyc3RCYXRjaD1hLGEuX25leHQ9bnVsbDtlbHNle2ZvcihjPW51bGw7bnVsbCE9PWQmJmQuX2V4cGlyYXRpb25UaW1lPj1iOyljPWQsZD1kLl9uZXh0O2EuX25leHQ9ZDtudWxsIT09YyYmKGMuX25leHQ9YSl9cmV0dXJuIGF9O2Z1bmN0aW9uIFloKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1LYj1OaDtMYj1QaDtNYj1mdW5jdGlvbigpe1d8fDA9PT1saHx8KEtoKGxoLCExKSxsaD0wKX07XG5mdW5jdGlvbiBaaChhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IFhoKGEsITEsYil9XG5mdW5jdGlvbiAkaChhLGIsYyxkLGUpe1loKGMpP3ZvaWQgMDp0KFwiMjAwXCIpO3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGc9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9U2goZi5faW50ZXJuYWxSb290KTtnLmNhbGwoYSl9fW51bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9ZWxzZXtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj1aaChjLGQpO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1TaChmLl9pbnRlcm5hbFJvb3QpO2guY2FsbChhKX19T2goZnVuY3Rpb24oKXtudWxsIT1hP2YubGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyKGEsYixlKTpmLnJlbmRlcihiLGUpfSl9cmV0dXJuIFNoKGYuX2ludGVybmFsUm9vdCl9XG5mdW5jdGlvbiBhaShhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO1loKGIpP3ZvaWQgMDp0KFwiMjAwXCIpO3JldHVybiBVaChhLGIsbnVsbCxjKX1cbnZhciBiaT17Y3JlYXRlUG9ydGFsOmFpLGZpbmRET01Ob2RlOmZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZvaWQgMD09PWImJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXI/dChcIjE4OFwiKTp0KFwiMjY4XCIsT2JqZWN0LmtleXMoYSkpKTthPW5kKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX0saHlkcmF0ZTpmdW5jdGlvbihhLGIsYyl7cmV0dXJuICRoKG51bGwsYSxiLCEwLGMpfSxyZW5kZXI6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiAkaChudWxsLGEsYiwhMSxjKX0sdW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI6ZnVuY3Rpb24oYSxiLGMsZCl7bnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbEZpYmVyP3QoXCIzOFwiKTp2b2lkIDA7cmV0dXJuICRoKGEsYixjLCExLGQpfSx1bm1vdW50Q29tcG9uZW50QXROb2RlOmZ1bmN0aW9uKGEpe1loKGEpP1xudm9pZCAwOnQoXCI0MFwiKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhPaChmdW5jdGlvbigpeyRoKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGx9KX0pLCEwKTohMX0sdW5zdGFibGVfY3JlYXRlUG9ydGFsOmZ1bmN0aW9uKCl7cmV0dXJuIGFpLmFwcGx5KHZvaWQgMCxhcmd1bWVudHMpfSx1bnN0YWJsZV9iYXRjaGVkVXBkYXRlczpOaCx1bnN0YWJsZV9pbnRlcmFjdGl2ZVVwZGF0ZXM6UGgsZmx1c2hTeW5jOmZ1bmN0aW9uKGEsYil7Vz90KFwiMTg3XCIpOnZvaWQgMDt2YXIgYz1aO1o9ITA7dHJ5e3JldHVybiBxaChhLGIpfWZpbmFsbHl7Wj1jLEtoKDEwNzM3NDE4MjMsITEpfX0sdW5zdGFibGVfZmx1c2hDb250cm9sbGVkOmZ1bmN0aW9uKGEpe3ZhciBiPVo7Wj0hMDt0cnl7cWgoYSl9ZmluYWxseXsoWj1iKXx8V3x8S2goMTA3Mzc0MTgyMywhMSl9fSxfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7RXZlbnRzOltKYSxcbkthLExhLENhLmluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSxxYSxSYSxmdW5jdGlvbihhKXt6YShhLFFhKX0sSWIsSmIsSmQsRWFdfSx1bnN0YWJsZV9jcmVhdGVSb290OmZ1bmN0aW9uKGEsYil7WWgoYSk/dm9pZCAwOnQoXCIyOTlcIixcInVuc3RhYmxlX2NyZWF0ZVJvb3RcIik7cmV0dXJuIG5ldyBYaChhLCEwLG51bGwhPWImJiEwPT09Yi5oeWRyYXRlKX19OyhmdW5jdGlvbihhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBWZShuKHt9LGEse2ZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9bmQoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBiP2IoYSk6bnVsbH19KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6SWEsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi42LjNcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTtcbnZhciBlaT17ZGVmYXVsdDpiaX0sZmk9ZWkmJmJpfHxlaTttb2R1bGUuZXhwb3J0cz1maS5kZWZhdWx0fHxmaTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjYuMVxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBkPW51bGwsZj0hMSxoPTMsaz0tMSxsPS0xLG09ITEsbj0hMTtmdW5jdGlvbiBwKCl7aWYoIW0pe3ZhciBhPWQuZXhwaXJhdGlvblRpbWU7bj9xKCk6bj0hMDtyKHQsYSl9fVxuZnVuY3Rpb24gdSgpe3ZhciBhPWQsYj1kLm5leHQ7aWYoZD09PWIpZD1udWxsO2Vsc2V7dmFyIGM9ZC5wcmV2aW91cztkPWMubmV4dD1iO2IucHJldmlvdXM9Y31hLm5leHQ9YS5wcmV2aW91cz1udWxsO2M9YS5jYWxsYmFjaztiPWEuZXhwaXJhdGlvblRpbWU7YT1hLnByaW9yaXR5TGV2ZWw7dmFyIGU9aCxRPWw7aD1hO2w9Yjt0cnl7dmFyIGc9YygpfWZpbmFsbHl7aD1lLGw9UX1pZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZylpZihnPXtjYWxsYmFjazpnLHByaW9yaXR5TGV2ZWw6YSxleHBpcmF0aW9uVGltZTpiLG5leHQ6bnVsbCxwcmV2aW91czpudWxsfSxudWxsPT09ZClkPWcubmV4dD1nLnByZXZpb3VzPWc7ZWxzZXtjPW51bGw7YT1kO2Rve2lmKGEuZXhwaXJhdGlvblRpbWU+PWIpe2M9YTticmVha31hPWEubmV4dH13aGlsZShhIT09ZCk7bnVsbD09PWM/Yz1kOmM9PT1kJiYoZD1nLHAoKSk7Yj1jLnByZXZpb3VzO2IubmV4dD1jLnByZXZpb3VzPWc7Zy5uZXh0PWM7Zy5wcmV2aW91cz1cbmJ9fWZ1bmN0aW9uIHYoKXtpZigtMT09PWsmJm51bGwhPT1kJiYxPT09ZC5wcmlvcml0eUxldmVsKXttPSEwO3RyeXtkbyB1KCk7d2hpbGUobnVsbCE9PWQmJjE9PT1kLnByaW9yaXR5TGV2ZWwpfWZpbmFsbHl7bT0hMSxudWxsIT09ZD9wKCk6bj0hMX19fWZ1bmN0aW9uIHQoYSl7bT0hMDt2YXIgYj1mO2Y9YTt0cnl7aWYoYSlmb3IoO251bGwhPT1kOyl7dmFyIGM9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihkLmV4cGlyYXRpb25UaW1lPD1jKXtkbyB1KCk7d2hpbGUobnVsbCE9PWQmJmQuZXhwaXJhdGlvblRpbWU8PWMpfWVsc2UgYnJlYWt9ZWxzZSBpZihudWxsIT09ZCl7ZG8gdSgpO3doaWxlKG51bGwhPT1kJiYhdygpKX19ZmluYWxseXttPSExLGY9YixudWxsIT09ZD9wKCk6bj0hMSx2KCl9fVxudmFyIHg9RGF0ZSx5PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLHo9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwLEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIHJlcXVlc3RBbmltYXRpb25GcmFtZT9yZXF1ZXN0QW5pbWF0aW9uRnJhbWU6dm9pZCAwLEI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNhbmNlbEFuaW1hdGlvbkZyYW1lP2NhbmNlbEFuaW1hdGlvbkZyYW1lOnZvaWQgMCxDLEQ7ZnVuY3Rpb24gRShhKXtDPUEoZnVuY3Rpb24oYil7eihEKTthKGIpfSk7RD15KGZ1bmN0aW9uKCl7QihDKTthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSwxMDApfVxuaWYoXCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyl7dmFyIEY9cGVyZm9ybWFuY2U7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gRi5ub3coKX19ZWxzZSBleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB4Lm5vdygpfTt2YXIgcixxLHc7XG5pZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIHdpbmRvdyYmd2luZG93Ll9zY2hlZE1vY2spe3ZhciBHPXdpbmRvdy5fc2NoZWRNb2NrO3I9R1swXTtxPUdbMV07dz1HWzJdfWVsc2UgaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcil7dmFyIEg9bnVsbCxJPS0xLEo9ZnVuY3Rpb24oYSxiKXtpZihudWxsIT09SCl7dmFyIGM9SDtIPW51bGw7dHJ5e0k9YixjKGEpfWZpbmFsbHl7ST0tMX19fTtyPWZ1bmN0aW9uKGEsYil7LTEhPT1JP3NldFRpbWVvdXQociwwLGEsYik6KEg9YSxzZXRUaW1lb3V0KEosYiwhMCxiKSxzZXRUaW1lb3V0KEosMTA3Mzc0MTgyMywhMSwxMDczNzQxODIzKSl9O3E9ZnVuY3Rpb24oKXtIPW51bGx9O3c9ZnVuY3Rpb24oKXtyZXR1cm4hMX07ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4tMT09PUk/MDpJfX1lbHNle1widW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSYmXG4oXCJmdW5jdGlvblwiIT09dHlwZW9mIEEmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHJlcXVlc3RBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIiksXCJmdW5jdGlvblwiIT09dHlwZW9mIEImJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKSk7dmFyIEs9bnVsbCxMPSExLE09LTEsTj0hMSxPPSExLFA9MCxSPTMzLFM9MzM7dz1mdW5jdGlvbigpe3JldHVybiBQPD1leHBvcnRzLnVuc3RhYmxlX25vdygpfTt2YXIgVD1cIl9fcmVhY3RJZGxlQ2FsbGJhY2skXCIrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMik7XG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIixmdW5jdGlvbihhKXtpZihhLnNvdXJjZT09PXdpbmRvdyYmYS5kYXRhPT09VCl7TD0hMTthPUs7dmFyIGI9TTtLPW51bGw7TT0tMTt2YXIgYz1leHBvcnRzLnVuc3RhYmxlX25vdygpLGU9ITE7aWYoMD49UC1jKWlmKC0xIT09YiYmYjw9YyllPSEwO2Vsc2V7Tnx8KE49ITAsRShVKSk7Sz1hO009YjtyZXR1cm59aWYobnVsbCE9PWEpe089ITA7dHJ5e2EoZSl9ZmluYWxseXtPPSExfX19fSwhMSk7dmFyIFU9ZnVuY3Rpb24oYSl7aWYobnVsbCE9PUspe0UoVSk7dmFyIGI9YS1QK1M7YjxTJiZSPFM/KDg+YiYmKGI9OCksUz1iPFI/UjpiKTpSPWI7UD1hK1M7THx8KEw9ITAsd2luZG93LnBvc3RNZXNzYWdlKFQsXCIqXCIpKX1lbHNlIE49ITF9O3I9ZnVuY3Rpb24oYSxiKXtLPWE7TT1iO098fDA+Yj93aW5kb3cucG9zdE1lc3NhZ2UoVCxcIipcIik6Tnx8KE49ITAsRShVKSl9O3E9ZnVuY3Rpb24oKXtLPW51bGw7TD0hMTtNPS0xfX1cbmV4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O2V4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9aCxlPWs7aD1hO2s9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e2g9YyxrPWUsdigpfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXt2YXIgYz0tMSE9PWs/azpleHBvcnRzLnVuc3RhYmxlX25vdygpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWImJlwibnVtYmVyXCI9PT10eXBlb2YgYi50aW1lb3V0KWI9YytiLnRpbWVvdXQ7ZWxzZSBzd2l0Y2goaCl7Y2FzZSAxOmI9YystMTticmVhaztjYXNlIDI6Yj1jKzI1MDticmVhaztjYXNlIDU6Yj1jKzEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA0OmI9YysxRTQ7YnJlYWs7ZGVmYXVsdDpiPWMrNUUzfWE9e2NhbGxiYWNrOmEscHJpb3JpdHlMZXZlbDpoLGV4cGlyYXRpb25UaW1lOmIsbmV4dDpudWxsLHByZXZpb3VzOm51bGx9O2lmKG51bGw9PT1kKWQ9YS5uZXh0PWEucHJldmlvdXM9YSxwKCk7ZWxzZXtjPW51bGw7dmFyIGU9ZDtkb3tpZihlLmV4cGlyYXRpb25UaW1lPmIpe2M9ZTticmVha31lPWUubmV4dH13aGlsZShlIT09ZCk7bnVsbD09PWM/Yz1kOmM9PT1kJiYoZD1hLHAoKSk7XG5iPWMucHJldmlvdXM7Yi5uZXh0PWMucHJldmlvdXM9YTthLm5leHQ9YzthLnByZXZpb3VzPWJ9cmV0dXJuIGF9O2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9YS5uZXh0O2lmKG51bGwhPT1iKXtpZihiPT09YSlkPW51bGw7ZWxzZXthPT09ZCYmKGQ9Yik7dmFyIGM9YS5wcmV2aW91cztjLm5leHQ9YjtiLnByZXZpb3VzPWN9YS5uZXh0PWEucHJldmlvdXM9bnVsbH19O2V4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPWg7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9aCxlPWs7aD1iO2s9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7aD1jLGs9ZSx2KCl9fX07ZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiBofTtcbmV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4hZiYmKG51bGwhPT1kJiZkLmV4cGlyYXRpb25UaW1lPGx8fHcoKSl9O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbVxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzID0gZW1wdHlGdW5jdGlvbjtcbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIChhcnIpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcnIpID09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL25vcm1hbGl6ZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vY3NzLWxvYWRlci9pbmRleC5qcyEuLi9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vbm9ybWFsaXplLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL25vcm1hbGl6ZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4wIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xcbi8qIERvY3VtZW50XFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG4vKipcXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXFxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXFxuICovXFxuaHRtbCB7XFxuICBsaW5lLWhlaWdodDogMS4xNTtcXG4gIC8qIDEgKi9cXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcXG4gIC8qIDIgKi8gfVxcblxcbi8qIFNlY3Rpb25zXFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG4vKipcXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXFxuICovXFxuYm9keSB7XFxuICBtYXJnaW46IDA7IH1cXG5cXG4vKipcXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cXG4gKi9cXG5oMSB7XFxuICBmb250LXNpemU6IDJlbTtcXG4gIG1hcmdpbjogMC42N2VtIDA7IH1cXG5cXG4vKiBHcm91cGluZyBjb250ZW50XFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG4vKipcXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxcbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxcbiAqL1xcbmhyIHtcXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xcbiAgLyogMSAqL1xcbiAgaGVpZ2h0OiAwO1xcbiAgLyogMSAqL1xcbiAgb3ZlcmZsb3c6IHZpc2libGU7XFxuICAvKiAyICovIH1cXG5cXG4vKipcXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxcbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cXG4gKi9cXG5wcmUge1xcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xcbiAgLyogMSAqL1xcbiAgZm9udC1zaXplOiAxZW07XFxuICAvKiAyICovIH1cXG5cXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuLyoqXFxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxcbiAqL1xcbmEge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cXG5cXG4vKipcXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxcbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXFxuICovXFxuYWJiclt0aXRsZV0ge1xcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcXG4gIC8qIDEgKi9cXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xcbiAgLyogMiAqL1xcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xcbiAgLyogMiAqLyB9XFxuXFxuLyoqXFxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cXG4gKi9cXG5iLFxcbnN0cm9uZyB7XFxuICBmb250LXdlaWdodDogYm9sZGVyOyB9XFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXFxuICovXFxuY29kZSxcXG5rYmQsXFxuc2FtcCB7XFxuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XFxuICAvKiAxICovXFxuICBmb250LXNpemU6IDFlbTtcXG4gIC8qIDIgKi8gfVxcblxcbi8qKlxcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcbnNtYWxsIHtcXG4gIGZvbnQtc2l6ZTogODAlOyB9XFxuXFxuLyoqXFxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXFxuICogYWxsIGJyb3dzZXJzLlxcbiAqL1xcbnN1YixcXG5zdXAge1xcbiAgZm9udC1zaXplOiA3NSU7XFxuICBsaW5lLWhlaWdodDogMDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxcblxcbnN1YiB7XFxuICBib3R0b206IC0wLjI1ZW07IH1cXG5cXG5zdXAge1xcbiAgdG9wOiAtMC41ZW07IH1cXG5cXG4vKiBFbWJlZGRlZCBjb250ZW50XFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG4vKipcXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxcbiAqL1xcbmltZyB7XFxuICBib3JkZXItc3R5bGU6IG5vbmU7IH1cXG5cXG4vKiBGb3Jtc1xcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuLyoqXFxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXFxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxcbiAqL1xcbmJ1dHRvbixcXG5pbnB1dCxcXG5vcHRncm91cCxcXG5zZWxlY3QsXFxudGV4dGFyZWEge1xcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XFxuICAvKiAxICovXFxuICBmb250LXNpemU6IDEwMCU7XFxuICAvKiAxICovXFxuICBsaW5lLWhlaWdodDogMS4xNTtcXG4gIC8qIDEgKi9cXG4gIG1hcmdpbjogMDtcXG4gIC8qIDIgKi8gfVxcblxcbi8qKlxcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxcbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXFxuICovXFxuYnV0dG9uLFxcbmlucHV0IHtcXG4gIC8qIDEgKi9cXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XFxuXFxuLyoqXFxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXFxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxcbiAqL1xcbmJ1dHRvbixcXG5zZWxlY3Qge1xcbiAgLyogMSAqL1xcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cXG5cXG4vKipcXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxcbiAqL1xcbmJ1dHRvbixcXG5bdHlwZT1cXFwiYnV0dG9uXFxcIl0sXFxuW3R5cGU9XFxcInJlc2V0XFxcIl0sXFxuW3R5cGU9XFxcInN1Ym1pdFxcXCJdIHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyB9XFxuXFxuLyoqXFxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cXG4gKi9cXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXFxuW3R5cGU9XFxcImJ1dHRvblxcXCJdOjotbW96LWZvY3VzLWlubmVyLFxcblt0eXBlPVxcXCJyZXNldFxcXCJdOjotbW96LWZvY3VzLWlubmVyLFxcblt0eXBlPVxcXCJzdWJtaXRcXFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XFxuICBib3JkZXItc3R5bGU6IG5vbmU7XFxuICBwYWRkaW5nOiAwOyB9XFxuXFxuLyoqXFxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxcbiAqL1xcbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcXG5bdHlwZT1cXFwiYnV0dG9uXFxcIl06LW1vei1mb2N1c3JpbmcsXFxuW3R5cGU9XFxcInJlc2V0XFxcIl06LW1vei1mb2N1c3JpbmcsXFxuW3R5cGU9XFxcInN1Ym1pdFxcXCJdOi1tb3otZm9jdXNyaW5nIHtcXG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDsgfVxcblxcbi8qKlxcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cXG4gKi9cXG5maWVsZHNldCB7XFxuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07IH1cXG5cXG4vKipcXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxcbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXFxuICovXFxubGVnZW5kIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAvKiAxICovXFxuICBjb2xvcjogaW5oZXJpdDtcXG4gIC8qIDIgKi9cXG4gIGRpc3BsYXk6IHRhYmxlO1xcbiAgLyogMSAqL1xcbiAgbWF4LXdpZHRoOiAxMDAlO1xcbiAgLyogMSAqL1xcbiAgcGFkZGluZzogMDtcXG4gIC8qIDMgKi9cXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XFxuICAvKiAxICovIH1cXG5cXG4vKipcXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxcbiAqL1xcbnByb2dyZXNzIHtcXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxcblxcbi8qKlxcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxcbiAqL1xcbnRleHRhcmVhIHtcXG4gIG92ZXJmbG93OiBhdXRvOyB9XFxuXFxuLyoqXFxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXFxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxcbiAqL1xcblt0eXBlPVxcXCJjaGVja2JveFxcXCJdLFxcblt0eXBlPVxcXCJyYWRpb1xcXCJdIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAvKiAxICovXFxuICBwYWRkaW5nOiAwO1xcbiAgLyogMiAqLyB9XFxuXFxuLyoqXFxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxcbiAqL1xcblt0eXBlPVxcXCJudW1iZXJcXFwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcXG5bdHlwZT1cXFwibnVtYmVyXFxcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xcbiAgaGVpZ2h0OiBhdXRvOyB9XFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXFxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXFxuICovXFxuW3R5cGU9XFxcInNlYXJjaFxcXCJdIHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xcbiAgLyogMSAqL1xcbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XFxuICAvKiAyICovIH1cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXFxuICovXFxuW3R5cGU9XFxcInNlYXJjaFxcXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxcblxcbi8qKlxcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXFxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxcbiAqL1xcbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XFxuICAvKiAxICovXFxuICBmb250OiBpbmhlcml0O1xcbiAgLyogMiAqLyB9XFxuXFxuLyogSW50ZXJhY3RpdmVcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcbi8qXFxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cXG4gKi9cXG5kZXRhaWxzIHtcXG4gIGRpc3BsYXk6IGJsb2NrOyB9XFxuXFxuLypcXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXFxuICovXFxuc3VtbWFyeSB7XFxuICBkaXNwbGF5OiBsaXN0LWl0ZW07IH1cXG5cXG4vKiBNaXNjXFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG4vKipcXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXFxuICovXFxudGVtcGxhdGUge1xcbiAgZGlzcGxheTogbm9uZTsgfVxcblxcbi8qKlxcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxcbiAqL1xcbltoaWRkZW5dIHtcXG4gIGRpc3BsYXk6IG5vbmU7IH1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJcbi8qKlxuICogV2hlbiBzb3VyY2UgbWFwcyBhcmUgZW5hYmxlZCwgYHN0eWxlLWxvYWRlcmAgdXNlcyBhIGxpbmsgZWxlbWVudCB3aXRoIGEgZGF0YS11cmkgdG9cbiAqIGVtYmVkIHRoZSBjc3Mgb24gdGhlIHBhZ2UuIFRoaXMgYnJlYWtzIGFsbCByZWxhdGl2ZSB1cmxzIGJlY2F1c2Ugbm93IHRoZXkgYXJlIHJlbGF0aXZlIHRvIGFcbiAqIGJ1bmRsZSBpbnN0ZWFkIG9mIHRoZSBjdXJyZW50IHBhZ2UuXG4gKlxuICogT25lIHNvbHV0aW9uIGlzIHRvIG9ubHkgdXNlIGZ1bGwgdXJscywgYnV0IHRoYXQgbWF5IGJlIGltcG9zc2libGUuXG4gKlxuICogSW5zdGVhZCwgdGhpcyBmdW5jdGlvbiBcImZpeGVzXCIgdGhlIHJlbGF0aXZlIHVybHMgdG8gYmUgYWJzb2x1dGUgYWNjb3JkaW5nIHRvIHRoZSBjdXJyZW50IHBhZ2UgbG9jYXRpb24uXG4gKlxuICogQSBydWRpbWVudGFyeSB0ZXN0IHN1aXRlIGlzIGxvY2F0ZWQgYXQgYHRlc3QvZml4VXJscy5qc2AgYW5kIGNhbiBiZSBydW4gdmlhIHRoZSBgbnBtIHRlc3RgIGNvbW1hbmQuXG4gKlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzcykge1xuICAvLyBnZXQgY3VycmVudCBsb2NhdGlvblxuICB2YXIgbG9jYXRpb24gPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5sb2NhdGlvbjtcblxuICBpZiAoIWxvY2F0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiZml4VXJscyByZXF1aXJlcyB3aW5kb3cubG9jYXRpb25cIik7XG4gIH1cblxuXHQvLyBibGFuayBvciBudWxsP1xuXHRpZiAoIWNzcyB8fCB0eXBlb2YgY3NzICE9PSBcInN0cmluZ1wiKSB7XG5cdCAgcmV0dXJuIGNzcztcbiAgfVxuXG4gIHZhciBiYXNlVXJsID0gbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKyBsb2NhdGlvbi5ob3N0O1xuICB2YXIgY3VycmVudERpciA9IGJhc2VVcmwgKyBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9cXC9bXlxcL10qJC8sIFwiL1wiKTtcblxuXHQvLyBjb252ZXJ0IGVhY2ggdXJsKC4uLilcblx0Lypcblx0VGhpcyByZWd1bGFyIGV4cHJlc3Npb24gaXMganVzdCBhIHdheSB0byByZWN1cnNpdmVseSBtYXRjaCBicmFja2V0cyB3aXRoaW5cblx0YSBzdHJpbmcuXG5cblx0IC91cmxcXHMqXFwoICA9IE1hdGNoIG9uIHRoZSB3b3JkIFwidXJsXCIgd2l0aCBhbnkgd2hpdGVzcGFjZSBhZnRlciBpdCBhbmQgdGhlbiBhIHBhcmVuc1xuXHQgICAoICA9IFN0YXJ0IGEgY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgKD86ICA9IFN0YXJ0IGEgbm9uLWNhcHR1cmluZyBncm91cFxuXHQgICAgICAgICBbXikoXSAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKD86ICA9IFN0YXJ0IGFub3RoZXIgbm9uLWNhcHR1cmluZyBncm91cHNcblx0ICAgICAgICAgICAgICAgICBbXikoXSsgID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgICAgIFteKShdKiAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICBcXCkgID0gTWF0Y2ggYSBlbmQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICkgID0gRW5kIEdyb3VwXG4gICAgICAgICAgICAgICpcXCkgPSBNYXRjaCBhbnl0aGluZyBhbmQgdGhlbiBhIGNsb3NlIHBhcmVuc1xuICAgICAgICAgICkgID0gQ2xvc2Ugbm9uLWNhcHR1cmluZyBncm91cFxuICAgICAgICAgICogID0gTWF0Y2ggYW55dGhpbmdcbiAgICAgICApICA9IENsb3NlIGNhcHR1cmluZyBncm91cFxuXHQgXFwpICA9IE1hdGNoIGEgY2xvc2UgcGFyZW5zXG5cblx0IC9naSAgPSBHZXQgYWxsIG1hdGNoZXMsIG5vdCB0aGUgZmlyc3QuICBCZSBjYXNlIGluc2Vuc2l0aXZlLlxuXHQgKi9cblx0dmFyIGZpeGVkQ3NzID0gY3NzLnJlcGxhY2UoL3VybFxccypcXCgoKD86W14pKF18XFwoKD86W14pKF0rfFxcKFteKShdKlxcKSkqXFwpKSopXFwpL2dpLCBmdW5jdGlvbihmdWxsTWF0Y2gsIG9yaWdVcmwpIHtcblx0XHQvLyBzdHJpcCBxdW90ZXMgKGlmIHRoZXkgZXhpc3QpXG5cdFx0dmFyIHVucXVvdGVkT3JpZ1VybCA9IG9yaWdVcmxcblx0XHRcdC50cmltKClcblx0XHRcdC5yZXBsYWNlKC9eXCIoLiopXCIkLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pXG5cdFx0XHQucmVwbGFjZSgvXicoLiopJyQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSk7XG5cblx0XHQvLyBhbHJlYWR5IGEgZnVsbCB1cmw/IG5vIGNoYW5nZVxuXHRcdGlmICgvXigjfGRhdGE6fGh0dHA6XFwvXFwvfGh0dHBzOlxcL1xcL3xmaWxlOlxcL1xcL1xcL3xcXHMqJCkvaS50ZXN0KHVucXVvdGVkT3JpZ1VybCkpIHtcblx0XHQgIHJldHVybiBmdWxsTWF0Y2g7XG5cdFx0fVxuXG5cdFx0Ly8gY29udmVydCB0aGUgdXJsIHRvIGEgZnVsbCB1cmxcblx0XHR2YXIgbmV3VXJsO1xuXG5cdFx0aWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiLy9cIikgPT09IDApIHtcblx0XHQgIFx0Ly9UT0RPOiBzaG91bGQgd2UgYWRkIHByb3RvY29sP1xuXHRcdFx0bmV3VXJsID0gdW5xdW90ZWRPcmlnVXJsO1xuXHRcdH0gZWxzZSBpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvXCIpID09PSAwKSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byB0aGUgYmFzZSB1cmxcblx0XHRcdG5ld1VybCA9IGJhc2VVcmwgKyB1bnF1b3RlZE9yaWdVcmw7IC8vIGFscmVhZHkgc3RhcnRzIHdpdGggJy8nXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIGN1cnJlbnQgZGlyZWN0b3J5XG5cdFx0XHRuZXdVcmwgPSBjdXJyZW50RGlyICsgdW5xdW90ZWRPcmlnVXJsLnJlcGxhY2UoL15cXC5cXC8vLCBcIlwiKTsgLy8gU3RyaXAgbGVhZGluZyAnLi8nXG5cdFx0fVxuXG5cdFx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCB1cmwoLi4uKVxuXHRcdHJldHVybiBcInVybChcIiArIEpTT04uc3RyaW5naWZ5KG5ld1VybCkgKyBcIilcIjtcblx0fSk7XG5cblx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCBjc3Ncblx0cmV0dXJuIGZpeGVkQ3NzO1xufTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3N0eWxlcy5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3N0eWxlcy5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZXMuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiKiB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XFxuXFxuaHRtbCB7XFxuICBmb250LXNpemU6IDYyLjUlOyB9XFxuXFxuYm9keSB7XFxuICBjb2xvcjogI2MxNDEwMjtcXG4gIGZvbnQtZmFtaWx5OiBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xcbiAgZm9udC1zaXplOiAxLjZyZW07XFxuICBsaW5lLWhlaWdodDogMS42OyB9XFxuXFxuYnV0dG9uIHtcXG4gIGN1cnNvcjogcG9pbnRlcjsgfVxcblxcbmJ1dHRvbjpkaXNhYmxlZCB7XFxuICBjdXJzb3I6IGRlZmF1bHQ7IH1cXG5cXG4uaXMtYWN0aXZlIHtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XFxuXFxuaDEge1xcbiAgY29sb3I6ICNmOTQ0MTQ7XFxuICB0ZXh0LXNoYWRvdzogMnB4IDJweCAjNmNmNGUzOyB9XFxuXFxuaHRtbCxcXG5ib2R5LFxcbiNyb290IHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlOyB9XFxuXFxuYm9keSB7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IH1cXG5cXG4ubG9naW5XcmFwcGVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxcblxcbi5oZWFkZXIge1xcbiAgYmFja2dyb3VuZDogLW1vei1saW5lYXItZ3JhZGllbnQobGVmdCwgI2YyZjZmOCAwJSwgI2Q4ZTFlNyA1MCUsICNiNWM2ZDAgNTElLCAjZTBlZmY5IDEwMCUpOyB9XFxuXFxuLmhlYWRlcl9fY29udGVudCB7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBwYWRkaW5nOiAxLjJyZW0gMDsgfVxcblxcbi5oZWFkZXJfX3RpdGxlIHtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGNvbG9yOiAjM2EwYzdkO1xcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XFxuICAuaGVhZGVyX190aXRsZSBoMSB7XFxuICAgIG1hcmdpbjogMTBweDsgfVxcblxcbnVsIHtcXG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7XFxuICBvdmVyZmxvdzogaGlkZGVuOyB9XFxuXFxubGkge1xcbiAgZmxvYXQ6IGxlZnQ7IH1cXG5cXG5saSBhIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBjb2xvcjogIzAwMDAwMDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIHBhZGRpbmc6IDE0cHggMTZweDtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxcblxcbmxpIGE6aG92ZXI6bm90KC5hY3RpdmUpIHtcXG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDEwcHggI2EzZjRmZjtcXG4gIG9wYWNpdHk6IDAuNTsgfVxcblxcbi5hY3RpdmUge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE2OGYxYjsgfVxcblxcbi5ib3gtbGF5b3V0IHtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBiYWNrZ3JvdW5kOiB1cmwoXFxcIi9pbWFnZXMvdGhlZmxvYXQuanBnXFxcIikgbm8tcmVwZWF0IGNlbnRlcjtcXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgaGVpZ2h0OiAxMDB2aDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgd2lkdGg6IDEwMHZ3OyB9XFxuXFxuLmJveC1sYXlvdXRfX2Fib3V0IHtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBiYWNrZ3JvdW5kOiB1cmwoXFxcIi9pbWFnZXMvYnJlYWtmYXN0LmpwZ1xcXCIpIG5vLXJlcGVhdCBjZW50ZXI7XFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGhlaWdodDogMTAwdmg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIHdpZHRoOiAxMDB2dzsgfVxcblxcbi5ib3gtbGF5b3V0X19ob3RlbHJvb20ge1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGJhY2tncm91bmQ6IHVybChcXFwiL2ltYWdlcy9ob3RlbC1yb29tLmpwZ1xcXCIpIG5vLXJlcGVhdCBjZW50ZXI7XFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGhlaWdodDogMTAwdmg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIHdpZHRoOiAxMDB2dzsgfVxcblxcbi5ib3gtbGF5b3V0X19zaG9wIHtcXG4gIGNvbG9yOiAjMDAwMDAwO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGJhY2tncm91bmQ6IHVybChcXFwiL2ltYWdlcy90aGVyZWVsLmpwZ1xcXCIpIG5vLXJlcGVhdCBjZW50ZXI7XFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGhlaWdodDogMTAwdmg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIHdpZHRoOiAxMDB2dzsgfVxcblxcbi5ib3gtbGF5b3V0X19ib3gge1xcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjg1KTtcXG4gIGJvcmRlci1yYWRpdXM6IDNweDtcXG4gIHBhZGRpbmc6IDMuMnJlbSAxLjZyZW07XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICB3aWR0aDogMjVyZW07IH1cXG5cXG4uYm94LWxheW91dF9fbW91c2V5Ym94IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmb250LXNpemU6IDIwcHg7XFxuICBwYWRkaW5nLWJvdHRvbTogNDBweDtcXG4gIHBhZGRpbmctbGVmdDogMjVweDtcXG4gIHBhZGRpbmctcmlnaHQ6IDI1cHg7XFxuICBtYXJnaW4tbGVmdDogYXV0bztcXG4gIG1hcmdpbi1yaWdodDogYXV0bzsgfVxcblxcbi5ib3gtbGF5b3V0X190aXRsZSB7XFxuICBtYXJnaW46IDAgMCAxLjZyZW0gMDtcXG4gIGxpbmUtaGVpZ2h0OiAxOyB9XFxuXFxuLmNvbnRlbnQtY29udGFpbmVyIHtcXG4gIG1hcmdpbjogMCBhdXRvO1xcbiAgcGFkZGluZzogMCAxLjZyZW07XFxuICBtYXgtd2lkdGg6IDEwMHJlbTsgfVxcblxcbi5mb290ZXIge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgbGVmdDogMDtcXG4gIGJvdHRvbTogMDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgYmFja2dyb3VuZDogI2EzZjRmZjsgfVxcblxcbi5mb290ZXJfX2NvbnRlbnQge1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgcGFkZGluZzogMS4ycmVtIDA7IH1cXG5cXG4uZm9vdGVyX190aXRsZSB7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBjb2xvcjogIzNhMGM3ZDtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxcbiAgLmZvb3Rlcl9fdGl0bGUgaDEge1xcbiAgICBtYXJnaW46IDEwcHg7IH1cXG5cXG51bCB7XFxuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XFxuICBtYXJnaW46IDgwO1xcbiAgcGFkZGluZzogMDtcXG4gIG92ZXJmbG93OiBoaWRkZW47IH1cXG5cXG5saSB7XFxuICBmbG9hdDogbGVmdDsgfVxcblxcbmxpIGEge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGNvbG9yOiAjMDAwMDAwO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgcGFkZGluZzogMTRweCAxNnB4O1xcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XFxuXFxubGkgYTpob3Zlcjpub3QoLmFjdGl2ZSkge1xcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMTBweCAjYTNmNGZmO1xcbiAgb3BhY2l0eTogMC41OyB9XFxuXFxuLmFjdGl2ZSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTY4ZjFiOyB9XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiZnVuY3Rpb24gaXNBYnNvbHV0ZShwYXRobmFtZSkge1xuICByZXR1cm4gcGF0aG5hbWUuY2hhckF0KDApID09PSAnLyc7XG59XG5cbi8vIEFib3V0IDEuNXggZmFzdGVyIHRoYW4gdGhlIHR3by1hcmcgdmVyc2lvbiBvZiBBcnJheSNzcGxpY2UoKVxuZnVuY3Rpb24gc3BsaWNlT25lKGxpc3QsIGluZGV4KSB7XG4gIGZvciAodmFyIGkgPSBpbmRleCwgayA9IGkgKyAxLCBuID0gbGlzdC5sZW5ndGg7IGsgPCBuOyBpICs9IDEsIGsgKz0gMSkge1xuICAgIGxpc3RbaV0gPSBsaXN0W2tdO1xuICB9XG5cbiAgbGlzdC5wb3AoKTtcbn1cblxuLy8gVGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBiYXNlZCBoZWF2aWx5IG9uIG5vZGUncyB1cmwucGFyc2VcbmZ1bmN0aW9uIHJlc29sdmVQYXRobmFtZSh0bykge1xuICB2YXIgZnJvbSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogJyc7XG5cbiAgdmFyIHRvUGFydHMgPSB0byAmJiB0by5zcGxpdCgnLycpIHx8IFtdO1xuICB2YXIgZnJvbVBhcnRzID0gZnJvbSAmJiBmcm9tLnNwbGl0KCcvJykgfHwgW107XG5cbiAgdmFyIGlzVG9BYnMgPSB0byAmJiBpc0Fic29sdXRlKHRvKTtcbiAgdmFyIGlzRnJvbUFicyA9IGZyb20gJiYgaXNBYnNvbHV0ZShmcm9tKTtcbiAgdmFyIG11c3RFbmRBYnMgPSBpc1RvQWJzIHx8IGlzRnJvbUFicztcblxuICBpZiAodG8gJiYgaXNBYnNvbHV0ZSh0bykpIHtcbiAgICAvLyB0byBpcyBhYnNvbHV0ZVxuICAgIGZyb21QYXJ0cyA9IHRvUGFydHM7XG4gIH0gZWxzZSBpZiAodG9QYXJ0cy5sZW5ndGgpIHtcbiAgICAvLyB0byBpcyByZWxhdGl2ZSwgZHJvcCB0aGUgZmlsZW5hbWVcbiAgICBmcm9tUGFydHMucG9wKCk7XG4gICAgZnJvbVBhcnRzID0gZnJvbVBhcnRzLmNvbmNhdCh0b1BhcnRzKTtcbiAgfVxuXG4gIGlmICghZnJvbVBhcnRzLmxlbmd0aCkgcmV0dXJuICcvJztcblxuICB2YXIgaGFzVHJhaWxpbmdTbGFzaCA9IHZvaWQgMDtcbiAgaWYgKGZyb21QYXJ0cy5sZW5ndGgpIHtcbiAgICB2YXIgbGFzdCA9IGZyb21QYXJ0c1tmcm9tUGFydHMubGVuZ3RoIC0gMV07XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGxhc3QgPT09ICcuJyB8fCBsYXN0ID09PSAnLi4nIHx8IGxhc3QgPT09ICcnO1xuICB9IGVsc2Uge1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBmYWxzZTtcbiAgfVxuXG4gIHZhciB1cCA9IDA7XG4gIGZvciAodmFyIGkgPSBmcm9tUGFydHMubGVuZ3RoOyBpID49IDA7IGktLSkge1xuICAgIHZhciBwYXJ0ID0gZnJvbVBhcnRzW2ldO1xuXG4gICAgaWYgKHBhcnQgPT09ICcuJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgfSBlbHNlIGlmIChwYXJ0ID09PSAnLi4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwKys7XG4gICAgfSBlbHNlIGlmICh1cCkge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cC0tO1xuICAgIH1cbiAgfVxuXG4gIGlmICghbXVzdEVuZEFicykgZm9yICg7IHVwLS07IHVwKSB7XG4gICAgZnJvbVBhcnRzLnVuc2hpZnQoJy4uJyk7XG4gIH1pZiAobXVzdEVuZEFicyAmJiBmcm9tUGFydHNbMF0gIT09ICcnICYmICghZnJvbVBhcnRzWzBdIHx8ICFpc0Fic29sdXRlKGZyb21QYXJ0c1swXSkpKSBmcm9tUGFydHMudW5zaGlmdCgnJyk7XG5cbiAgdmFyIHJlc3VsdCA9IGZyb21QYXJ0cy5qb2luKCcvJyk7XG5cbiAgaWYgKGhhc1RyYWlsaW5nU2xhc2ggJiYgcmVzdWx0LnN1YnN0cigtMSkgIT09ICcvJykgcmVzdWx0ICs9ICcvJztcblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCByZXNvbHZlUGF0aG5hbWU7IiwidmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG5mdW5jdGlvbiB2YWx1ZUVxdWFsKGEsIGIpIHtcbiAgaWYgKGEgPT09IGIpIHJldHVybiB0cnVlO1xuXG4gIGlmIChhID09IG51bGwgfHwgYiA9PSBudWxsKSByZXR1cm4gZmFsc2U7XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkoYSkpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShiKSAmJiBhLmxlbmd0aCA9PT0gYi5sZW5ndGggJiYgYS5ldmVyeShmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZUVxdWFsKGl0ZW0sIGJbaW5kZXhdKTtcbiAgICB9KTtcbiAgfVxuXG4gIHZhciBhVHlwZSA9IHR5cGVvZiBhID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihhKTtcbiAgdmFyIGJUeXBlID0gdHlwZW9mIGIgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKGIpO1xuXG4gIGlmIChhVHlwZSAhPT0gYlR5cGUpIHJldHVybiBmYWxzZTtcblxuICBpZiAoYVR5cGUgPT09ICdvYmplY3QnKSB7XG4gICAgdmFyIGFWYWx1ZSA9IGEudmFsdWVPZigpO1xuICAgIHZhciBiVmFsdWUgPSBiLnZhbHVlT2YoKTtcblxuICAgIGlmIChhVmFsdWUgIT09IGEgfHwgYlZhbHVlICE9PSBiKSByZXR1cm4gdmFsdWVFcXVhbChhVmFsdWUsIGJWYWx1ZSk7XG5cbiAgICB2YXIgYUtleXMgPSBPYmplY3Qua2V5cyhhKTtcbiAgICB2YXIgYktleXMgPSBPYmplY3Qua2V5cyhiKTtcblxuICAgIGlmIChhS2V5cy5sZW5ndGggIT09IGJLZXlzLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuXG4gICAgcmV0dXJuIGFLZXlzLmV2ZXJ5KGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIHJldHVybiB2YWx1ZUVxdWFsKGFba2V5XSwgYltrZXldKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdmFsdWVFcXVhbDsiLCJleHBvcnQgdmFyIGFkZExlYWRpbmdTbGFzaCA9IGZ1bmN0aW9uIGFkZExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aCA6ICcvJyArIHBhdGg7XG59O1xuXG5leHBvcnQgdmFyIHN0cmlwTGVhZGluZ1NsYXNoID0gZnVuY3Rpb24gc3RyaXBMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbn07XG5cbmV4cG9ydCB2YXIgaGFzQmFzZW5hbWUgPSBmdW5jdGlvbiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIG5ldyBSZWdFeHAoJ14nICsgcHJlZml4ICsgJyhcXFxcL3xcXFxcP3wjfCQpJywgJ2knKS50ZXN0KHBhdGgpO1xufTtcblxuZXhwb3J0IHZhciBzdHJpcEJhc2VuYW1lID0gZnVuY3Rpb24gc3RyaXBCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkgPyBwYXRoLnN1YnN0cihwcmVmaXgubGVuZ3RoKSA6IHBhdGg7XG59O1xuXG5leHBvcnQgdmFyIHN0cmlwVHJhaWxpbmdTbGFzaCA9IGZ1bmN0aW9uIHN0cmlwVHJhaWxpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdChwYXRoLmxlbmd0aCAtIDEpID09PSAnLycgPyBwYXRoLnNsaWNlKDAsIC0xKSA6IHBhdGg7XG59O1xuXG5leHBvcnQgdmFyIHBhcnNlUGF0aCA9IGZ1bmN0aW9uIHBhcnNlUGF0aChwYXRoKSB7XG4gIHZhciBwYXRobmFtZSA9IHBhdGggfHwgJy8nO1xuICB2YXIgc2VhcmNoID0gJyc7XG4gIHZhciBoYXNoID0gJyc7XG5cbiAgdmFyIGhhc2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJyMnKTtcbiAgaWYgKGhhc2hJbmRleCAhPT0gLTEpIHtcbiAgICBoYXNoID0gcGF0aG5hbWUuc3Vic3RyKGhhc2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgaGFzaEluZGV4KTtcbiAgfVxuXG4gIHZhciBzZWFyY2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJz8nKTtcbiAgaWYgKHNlYXJjaEluZGV4ICE9PSAtMSkge1xuICAgIHNlYXJjaCA9IHBhdGhuYW1lLnN1YnN0cihzZWFyY2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgc2VhcmNoSW5kZXgpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwYXRobmFtZTogcGF0aG5hbWUsXG4gICAgc2VhcmNoOiBzZWFyY2ggPT09ICc/JyA/ICcnIDogc2VhcmNoLFxuICAgIGhhc2g6IGhhc2ggPT09ICcjJyA/ICcnIDogaGFzaFxuICB9O1xufTtcblxuZXhwb3J0IHZhciBjcmVhdGVQYXRoID0gZnVuY3Rpb24gY3JlYXRlUGF0aChsb2NhdGlvbikge1xuICB2YXIgcGF0aG5hbWUgPSBsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgIHNlYXJjaCA9IGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgIGhhc2ggPSBsb2NhdGlvbi5oYXNoO1xuXG5cbiAgdmFyIHBhdGggPSBwYXRobmFtZSB8fCAnLyc7XG5cbiAgaWYgKHNlYXJjaCAmJiBzZWFyY2ggIT09ICc/JykgcGF0aCArPSBzZWFyY2guY2hhckF0KDApID09PSAnPycgPyBzZWFyY2ggOiAnPycgKyBzZWFyY2g7XG5cbiAgaWYgKGhhc2ggJiYgaGFzaCAhPT0gJyMnKSBwYXRoICs9IGhhc2guY2hhckF0KDApID09PSAnIycgPyBoYXNoIDogJyMnICsgaGFzaDtcblxuICByZXR1cm4gcGF0aDtcbn07IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuaW1wb3J0IHJlc29sdmVQYXRobmFtZSBmcm9tICdyZXNvbHZlLXBhdGhuYW1lJztcbmltcG9ydCB2YWx1ZUVxdWFsIGZyb20gJ3ZhbHVlLWVxdWFsJztcbmltcG9ydCB7IHBhcnNlUGF0aCB9IGZyb20gJy4vUGF0aFV0aWxzJztcblxuZXhwb3J0IHZhciBjcmVhdGVMb2NhdGlvbiA9IGZ1bmN0aW9uIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXksIGN1cnJlbnRMb2NhdGlvbikge1xuICB2YXIgbG9jYXRpb24gPSB2b2lkIDA7XG4gIGlmICh0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHtcbiAgICAvLyBUd28tYXJnIGZvcm06IHB1c2gocGF0aCwgc3RhdGUpXG4gICAgbG9jYXRpb24gPSBwYXJzZVBhdGgocGF0aCk7XG4gICAgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfSBlbHNlIHtcbiAgICAvLyBPbmUtYXJnIGZvcm06IHB1c2gobG9jYXRpb24pXG4gICAgbG9jYXRpb24gPSBfZXh0ZW5kcyh7fSwgcGF0aCk7XG5cbiAgICBpZiAobG9jYXRpb24ucGF0aG5hbWUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24ucGF0aG5hbWUgPSAnJztcblxuICAgIGlmIChsb2NhdGlvbi5zZWFyY2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5zZWFyY2guY2hhckF0KDApICE9PSAnPycpIGxvY2F0aW9uLnNlYXJjaCA9ICc/JyArIGxvY2F0aW9uLnNlYXJjaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uc2VhcmNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKGxvY2F0aW9uLmhhc2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5oYXNoLmNoYXJBdCgwKSAhPT0gJyMnKSBsb2NhdGlvbi5oYXNoID0gJyMnICsgbG9jYXRpb24uaGFzaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uaGFzaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChzdGF0ZSAhPT0gdW5kZWZpbmVkICYmIGxvY2F0aW9uLnN0YXRlID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH1cblxuICB0cnkge1xuICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gZGVjb2RlVVJJKGxvY2F0aW9uLnBhdGhuYW1lKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgVVJJRXJyb3IpIHtcbiAgICAgIHRocm93IG5ldyBVUklFcnJvcignUGF0aG5hbWUgXCInICsgbG9jYXRpb24ucGF0aG5hbWUgKyAnXCIgY291bGQgbm90IGJlIGRlY29kZWQuICcgKyAnVGhpcyBpcyBsaWtlbHkgY2F1c2VkIGJ5IGFuIGludmFsaWQgcGVyY2VudC1lbmNvZGluZy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgZTtcbiAgICB9XG4gIH1cblxuICBpZiAoa2V5KSBsb2NhdGlvbi5rZXkgPSBrZXk7XG5cbiAgaWYgKGN1cnJlbnRMb2NhdGlvbikge1xuICAgIC8vIFJlc29sdmUgaW5jb21wbGV0ZS9yZWxhdGl2ZSBwYXRobmFtZSByZWxhdGl2ZSB0byBjdXJyZW50IGxvY2F0aW9uLlxuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gY3VycmVudExvY2F0aW9uLnBhdGhuYW1lO1xuICAgIH0gZWxzZSBpZiAobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApICE9PSAnLycpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gcmVzb2x2ZVBhdGhuYW1lKGxvY2F0aW9uLnBhdGhuYW1lLCBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBXaGVuIHRoZXJlIGlzIG5vIHByaW9yIGxvY2F0aW9uIGFuZCBwYXRobmFtZSBpcyBlbXB0eSwgc2V0IGl0IHRvIC9cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9ICcvJztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbG9jYXRpb247XG59O1xuXG5leHBvcnQgdmFyIGxvY2F0aW9uc0FyZUVxdWFsID0gZnVuY3Rpb24gbG9jYXRpb25zQXJlRXF1YWwoYSwgYikge1xuICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2ggJiYgYS5rZXkgPT09IGIua2V5ICYmIHZhbHVlRXF1YWwoYS5zdGF0ZSwgYi5zdGF0ZSk7XG59OyIsImltcG9ydCB3YXJuaW5nIGZyb20gJ3dhcm5pbmcnO1xuXG52YXIgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIgPSBmdW5jdGlvbiBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpIHtcbiAgdmFyIHByb21wdCA9IG51bGw7XG5cbiAgdmFyIHNldFByb21wdCA9IGZ1bmN0aW9uIHNldFByb21wdChuZXh0UHJvbXB0KSB7XG4gICAgd2FybmluZyhwcm9tcHQgPT0gbnVsbCwgJ0EgaGlzdG9yeSBzdXBwb3J0cyBvbmx5IG9uZSBwcm9tcHQgYXQgYSB0aW1lJyk7XG5cbiAgICBwcm9tcHQgPSBuZXh0UHJvbXB0O1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChwcm9tcHQgPT09IG5leHRQcm9tcHQpIHByb21wdCA9IG51bGw7XG4gICAgfTtcbiAgfTtcblxuICB2YXIgY29uZmlybVRyYW5zaXRpb25UbyA9IGZ1bmN0aW9uIGNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgY2FsbGJhY2spIHtcbiAgICAvLyBUT0RPOiBJZiBhbm90aGVyIHRyYW5zaXRpb24gc3RhcnRzIHdoaWxlIHdlJ3JlIHN0aWxsIGNvbmZpcm1pbmdcbiAgICAvLyB0aGUgcHJldmlvdXMgb25lLCB3ZSBtYXkgZW5kIHVwIGluIGEgd2VpcmQgc3RhdGUuIEZpZ3VyZSBvdXQgdGhlXG4gICAgLy8gYmVzdCB3YXkgdG8gaGFuZGxlIHRoaXMuXG4gICAgaWYgKHByb21wdCAhPSBudWxsKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gdHlwZW9mIHByb21wdCA9PT0gJ2Z1bmN0aW9uJyA/IHByb21wdChsb2NhdGlvbiwgYWN0aW9uKSA6IHByb21wdDtcblxuICAgICAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZ2V0VXNlckNvbmZpcm1hdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIGdldFVzZXJDb25maXJtYXRpb24ocmVzdWx0LCBjYWxsYmFjayk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgd2FybmluZyhmYWxzZSwgJ0EgaGlzdG9yeSBuZWVkcyBhIGdldFVzZXJDb25maXJtYXRpb24gZnVuY3Rpb24gaW4gb3JkZXIgdG8gdXNlIGEgcHJvbXB0IG1lc3NhZ2UnKTtcblxuICAgICAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBSZXR1cm4gZmFsc2UgZnJvbSBhIHRyYW5zaXRpb24gaG9vayB0byBjYW5jZWwgdGhlIHRyYW5zaXRpb24uXG4gICAgICAgIGNhbGxiYWNrKHJlc3VsdCAhPT0gZmFsc2UpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGxpc3RlbmVycyA9IFtdO1xuXG4gIHZhciBhcHBlbmRMaXN0ZW5lciA9IGZ1bmN0aW9uIGFwcGVuZExpc3RlbmVyKGZuKSB7XG4gICAgdmFyIGlzQWN0aXZlID0gdHJ1ZTtcblxuICAgIHZhciBsaXN0ZW5lciA9IGZ1bmN0aW9uIGxpc3RlbmVyKCkge1xuICAgICAgaWYgKGlzQWN0aXZlKSBmbi5hcHBseSh1bmRlZmluZWQsIGFyZ3VtZW50cyk7XG4gICAgfTtcblxuICAgIGxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpc0FjdGl2ZSA9IGZhbHNlO1xuICAgICAgbGlzdGVuZXJzID0gbGlzdGVuZXJzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICByZXR1cm4gaXRlbSAhPT0gbGlzdGVuZXI7XG4gICAgICB9KTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBub3RpZnlMaXN0ZW5lcnMgPSBmdW5jdGlvbiBub3RpZnlMaXN0ZW5lcnMoKSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgbGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG4gICAgICByZXR1cm4gbGlzdGVuZXIuYXBwbHkodW5kZWZpbmVkLCBhcmdzKTtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIHNldFByb21wdDogc2V0UHJvbXB0LFxuICAgIGNvbmZpcm1UcmFuc2l0aW9uVG86IGNvbmZpcm1UcmFuc2l0aW9uVG8sXG4gICAgYXBwZW5kTGlzdGVuZXI6IGFwcGVuZExpc3RlbmVyLFxuICAgIG5vdGlmeUxpc3RlbmVyczogbm90aWZ5TGlzdGVuZXJzXG4gIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcjsiLCJleHBvcnQgdmFyIGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5cbmV4cG9ydCB2YXIgYWRkRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uIGFkZEV2ZW50TGlzdGVuZXIobm9kZSwgZXZlbnQsIGxpc3RlbmVyKSB7XG4gIHJldHVybiBub2RlLmFkZEV2ZW50TGlzdGVuZXIgPyBub2RlLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyLCBmYWxzZSkgOiBub2RlLmF0dGFjaEV2ZW50KCdvbicgKyBldmVudCwgbGlzdGVuZXIpO1xufTtcblxuZXhwb3J0IHZhciByZW1vdmVFdmVudExpc3RlbmVyID0gZnVuY3Rpb24gcmVtb3ZlRXZlbnRMaXN0ZW5lcihub2RlLCBldmVudCwgbGlzdGVuZXIpIHtcbiAgcmV0dXJuIG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lciA/IG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIsIGZhbHNlKSA6IG5vZGUuZGV0YWNoRXZlbnQoJ29uJyArIGV2ZW50LCBsaXN0ZW5lcik7XG59O1xuXG5leHBvcnQgdmFyIGdldENvbmZpcm1hdGlvbiA9IGZ1bmN0aW9uIGdldENvbmZpcm1hdGlvbihtZXNzYWdlLCBjYWxsYmFjaykge1xuICByZXR1cm4gY2FsbGJhY2sod2luZG93LmNvbmZpcm0obWVzc2FnZSkpO1xufTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1hbGVydFxuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaXMgc3VwcG9ydGVkLiBUYWtlbiBmcm9tIE1vZGVybml6ci5cbiAqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9mZWF0dXJlLWRldGVjdHMvaGlzdG9yeS5qc1xuICogY2hhbmdlZCB0byBhdm9pZCBmYWxzZSBuZWdhdGl2ZXMgZm9yIFdpbmRvd3MgUGhvbmVzOiBodHRwczovL2dpdGh1Yi5jb20vcmVhY3Rqcy9yZWFjdC1yb3V0ZXIvaXNzdWVzLzU4NlxuICovXG5leHBvcnQgdmFyIHN1cHBvcnRzSGlzdG9yeSA9IGZ1bmN0aW9uIHN1cHBvcnRzSGlzdG9yeSgpIHtcbiAgdmFyIHVhID0gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQ7XG5cbiAgaWYgKCh1YS5pbmRleE9mKCdBbmRyb2lkIDIuJykgIT09IC0xIHx8IHVhLmluZGV4T2YoJ0FuZHJvaWQgNC4wJykgIT09IC0xKSAmJiB1YS5pbmRleE9mKCdNb2JpbGUgU2FmYXJpJykgIT09IC0xICYmIHVhLmluZGV4T2YoJ0Nocm9tZScpID09PSAtMSAmJiB1YS5pbmRleE9mKCdXaW5kb3dzIFBob25lJykgPT09IC0xKSByZXR1cm4gZmFsc2U7XG5cbiAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5ICYmICdwdXNoU3RhdGUnIGluIHdpbmRvdy5oaXN0b3J5O1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYnJvd3NlciBmaXJlcyBwb3BzdGF0ZSBvbiBoYXNoIGNoYW5nZS5cbiAqIElFMTAgYW5kIElFMTEgZG8gbm90LlxuICovXG5leHBvcnQgdmFyIHN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UgPSBmdW5jdGlvbiBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignVHJpZGVudCcpID09PSAtMTtcbn07XG5cbi8qKlxuICogUmV0dXJucyBmYWxzZSBpZiB1c2luZyBnbyhuKSB3aXRoIGhhc2ggaGlzdG9yeSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkLlxuICovXG5leHBvcnQgdmFyIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoID0gZnVuY3Rpb24gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdGaXJlZm94JykgPT09IC0xO1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYSBnaXZlbiBwb3BzdGF0ZSBldmVudCBpcyBhbiBleHRyYW5lb3VzIFdlYktpdCBldmVudC5cbiAqIEFjY291bnRzIGZvciB0aGUgZmFjdCB0aGF0IENocm9tZSBvbiBpT1MgZmlyZXMgcmVhbCBwb3BzdGF0ZSBldmVudHNcbiAqIGNvbnRhaW5pbmcgdW5kZWZpbmVkIHN0YXRlIHdoZW4gcHJlc3NpbmcgdGhlIGJhY2sgYnV0dG9uLlxuICovXG5leHBvcnQgdmFyIGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQgPSBmdW5jdGlvbiBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiBldmVudC5zdGF0ZSA9PT0gdW5kZWZpbmVkICYmIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignQ3JpT1MnKSA9PT0gLTE7XG59OyIsInZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuaW1wb3J0IHdhcm5pbmcgZnJvbSAnd2FybmluZyc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ2ludmFyaWFudCc7XG5pbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiB9IGZyb20gJy4vTG9jYXRpb25VdGlscyc7XG5pbXBvcnQgeyBhZGRMZWFkaW5nU2xhc2gsIHN0cmlwVHJhaWxpbmdTbGFzaCwgaGFzQmFzZW5hbWUsIHN0cmlwQmFzZW5hbWUsIGNyZWF0ZVBhdGggfSBmcm9tICcuL1BhdGhVdGlscyc7XG5pbXBvcnQgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIgZnJvbSAnLi9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlcic7XG5pbXBvcnQgeyBjYW5Vc2VET00sIGFkZEV2ZW50TGlzdGVuZXIsIHJlbW92ZUV2ZW50TGlzdGVuZXIsIGdldENvbmZpcm1hdGlvbiwgc3VwcG9ydHNIaXN0b3J5LCBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlLCBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50IH0gZnJvbSAnLi9ET01VdGlscyc7XG5cbnZhciBQb3BTdGF0ZUV2ZW50ID0gJ3BvcHN0YXRlJztcbnZhciBIYXNoQ2hhbmdlRXZlbnQgPSAnaGFzaGNoYW5nZSc7XG5cbnZhciBnZXRIaXN0b3J5U3RhdGUgPSBmdW5jdGlvbiBnZXRIaXN0b3J5U3RhdGUoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5LnN0YXRlIHx8IHt9O1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gSUUgMTEgc29tZXRpbWVzIHRocm93cyB3aGVuIGFjY2Vzc2luZyB3aW5kb3cuaGlzdG9yeS5zdGF0ZVxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vUmVhY3RUcmFpbmluZy9oaXN0b3J5L3B1bGwvMjg5XG4gICAgcmV0dXJuIHt9O1xuICB9XG59O1xuXG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHVzZXMgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGluY2x1ZGluZ1xuICogcHVzaFN0YXRlLCByZXBsYWNlU3RhdGUsIGFuZCB0aGUgcG9wc3RhdGUgZXZlbnQuXG4gKi9cbnZhciBjcmVhdGVCcm93c2VySGlzdG9yeSA9IGZ1bmN0aW9uIGNyZWF0ZUJyb3dzZXJIaXN0b3J5KCkge1xuICB2YXIgcHJvcHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuXG4gIGludmFyaWFudChjYW5Vc2VET00sICdCcm93c2VyIGhpc3RvcnkgbmVlZHMgYSBET00nKTtcblxuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuVXNlSGlzdG9yeSA9IHN1cHBvcnRzSGlzdG9yeSgpO1xuICB2YXIgbmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIgPSAhc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpO1xuXG4gIHZhciBfcHJvcHMkZm9yY2VSZWZyZXNoID0gcHJvcHMuZm9yY2VSZWZyZXNoLFxuICAgICAgZm9yY2VSZWZyZXNoID0gX3Byb3BzJGZvcmNlUmVmcmVzaCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBfcHJvcHMkZm9yY2VSZWZyZXNoLFxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHVuZGVmaW5lZCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBwcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB1bmRlZmluZWQgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcblxuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuXG4gIHZhciBnZXRET01Mb2NhdGlvbiA9IGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKGhpc3RvcnlTdGF0ZSkge1xuICAgIHZhciBfcmVmID0gaGlzdG9yeVN0YXRlIHx8IHt9LFxuICAgICAgICBrZXkgPSBfcmVmLmtleSxcbiAgICAgICAgc3RhdGUgPSBfcmVmLnN0YXRlO1xuXG4gICAgdmFyIF93aW5kb3ckbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb24sXG4gICAgICAgIHBhdGhuYW1lID0gX3dpbmRvdyRsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgICAgc2VhcmNoID0gX3dpbmRvdyRsb2NhdGlvbi5zZWFyY2gsXG4gICAgICAgIGhhc2ggPSBfd2luZG93JGxvY2F0aW9uLmhhc2g7XG5cblxuICAgIHZhciBwYXRoID0gcGF0aG5hbWUgKyBzZWFyY2ggKyBoYXNoO1xuXG4gICAgd2FybmluZyghYmFzZW5hbWUgfHwgaGFzQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpLCAnWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiAnICsgJ3dpdGggdGhlIGJhc2VuYW1lLiBFeHBlY3RlZCBwYXRoIFwiJyArIHBhdGggKyAnXCIgdG8gYmVnaW4gd2l0aCBcIicgKyBiYXNlbmFtZSArICdcIi4nKTtcblxuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuXG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXkpO1xuICB9O1xuXG4gIHZhciBjcmVhdGVLZXkgPSBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9O1xuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgdmFyIHNldFN0YXRlID0gZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9O1xuXG4gIHZhciBoYW5kbGVQb3BTdGF0ZSA9IGZ1bmN0aW9uIGhhbmRsZVBvcFN0YXRlKGV2ZW50KSB7XG4gICAgLy8gSWdub3JlIGV4dHJhbmVvdXMgcG9wc3RhdGUgZXZlbnRzIGluIFdlYktpdC5cbiAgICBpZiAoaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkpIHJldHVybjtcblxuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihldmVudC5zdGF0ZSkpO1xuICB9O1xuXG4gIHZhciBoYW5kbGVIYXNoQ2hhbmdlID0gZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpKTtcbiAgfTtcblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG5cbiAgdmFyIGhhbmRsZVBvcCA9IGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuXG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciByZXZlcnRQb3AgPSBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uO1xuXG4gICAgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBrZXlzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIGtleXMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsS2V5cy5pbmRleE9mKHRvTG9jYXRpb24ua2V5KTtcblxuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG5cbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGZyb21Mb2NhdGlvbi5rZXkpO1xuXG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG5cbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpO1xuICB2YXIgYWxsS2V5cyA9IFtpbml0aWFsTG9jYXRpb24ua2V5XTtcblxuICAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgdmFyIGNyZWF0ZUhyZWYgPSBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgcmV0dXJuIGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gIH07XG5cbiAgdmFyIHB1c2ggPSBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgd2FybmluZyghKCh0eXBlb2YgcGF0aCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YocGF0aCkpID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcblxuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnB1c2hTdGF0ZSh7IGtleToga2V5LCBzdGF0ZTogc3RhdGUgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICB2YXIgbmV4dEtleXMgPSBhbGxLZXlzLnNsaWNlKDAsIHByZXZJbmRleCA9PT0gLTEgPyAwIDogcHJldkluZGV4ICsgMSk7XG5cbiAgICAgICAgICBuZXh0S2V5cy5wdXNoKGxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgYWxsS2V5cyA9IG5leHRLZXlzO1xuXG4gICAgICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5Jyk7XG5cbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIHZhciByZXBsYWNlID0gZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoISgodHlwZW9mIHBhdGggPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHBhdGgpKSA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5yZXBsYWNlU3RhdGUoeyBrZXk6IGtleSwgc3RhdGU6IHN0YXRlIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcblxuICAgICAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxLZXlzW3ByZXZJbmRleF0gPSBsb2NhdGlvbi5rZXk7XG5cbiAgICAgICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKTtcblxuICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICB2YXIgZ28gPSBmdW5jdGlvbiBnbyhuKSB7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfTtcblxuICB2YXIgZ29CYWNrID0gZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIHJldHVybiBnbygtMSk7XG4gIH07XG5cbiAgdmFyIGdvRm9yd2FyZCA9IGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICByZXR1cm4gZ28oMSk7XG4gIH07XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIHZhciBjaGVja0RPTUxpc3RlbmVycyA9IGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxKSB7XG4gICAgICBhZGRFdmVudExpc3RlbmVyKHdpbmRvdywgUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuXG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIGFkZEV2ZW50TGlzdGVuZXIod2luZG93LCBIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcih3aW5kb3csIFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcblxuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSByZW1vdmVFdmVudExpc3RlbmVyKHdpbmRvdywgSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIHZhciBibG9jayA9IGZ1bmN0aW9uIGJsb2NrKCkge1xuICAgIHZhciBwcm9tcHQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGZhbHNlO1xuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBsaXN0ZW4gPSBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcblxuICByZXR1cm4gaGlzdG9yeTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUJyb3dzZXJIaXN0b3J5OyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gJ3dhcm5pbmcnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICdpbnZhcmlhbnQnO1xuaW1wb3J0IHsgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsIH0gZnJvbSAnLi9Mb2NhdGlvblV0aWxzJztcbmltcG9ydCB7IGFkZExlYWRpbmdTbGFzaCwgc3RyaXBMZWFkaW5nU2xhc2gsIHN0cmlwVHJhaWxpbmdTbGFzaCwgaGFzQmFzZW5hbWUsIHN0cmlwQmFzZW5hbWUsIGNyZWF0ZVBhdGggfSBmcm9tICcuL1BhdGhVdGlscyc7XG5pbXBvcnQgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIgZnJvbSAnLi9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlcic7XG5pbXBvcnQgeyBjYW5Vc2VET00sIGFkZEV2ZW50TGlzdGVuZXIsIHJlbW92ZUV2ZW50TGlzdGVuZXIsIGdldENvbmZpcm1hdGlvbiwgc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2ggfSBmcm9tICcuL0RPTVV0aWxzJztcblxudmFyIEhhc2hDaGFuZ2VFdmVudCA9ICdoYXNoY2hhbmdlJztcblxudmFyIEhhc2hQYXRoQ29kZXJzID0ge1xuICBoYXNoYmFuZzoge1xuICAgIGVuY29kZVBhdGg6IGZ1bmN0aW9uIGVuY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoIDogJyEvJyArIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpO1xuICAgIH0sXG4gICAgZGVjb2RlUGF0aDogZnVuY3Rpb24gZGVjb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbiAgICB9XG4gIH0sXG4gIG5vc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBzdHJpcExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfSxcbiAgc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH1cbn07XG5cbnZhciBnZXRIYXNoUGF0aCA9IGZ1bmN0aW9uIGdldEhhc2hQYXRoKCkge1xuICAvLyBXZSBjYW4ndCB1c2Ugd2luZG93LmxvY2F0aW9uLmhhc2ggaGVyZSBiZWNhdXNlIGl0J3Mgbm90XG4gIC8vIGNvbnNpc3RlbnQgYWNyb3NzIGJyb3dzZXJzIC0gRmlyZWZveCB3aWxsIHByZS1kZWNvZGUgaXQhXG4gIHZhciBocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gIHZhciBoYXNoSW5kZXggPSBocmVmLmluZGV4T2YoJyMnKTtcbiAgcmV0dXJuIGhhc2hJbmRleCA9PT0gLTEgPyAnJyA6IGhyZWYuc3Vic3RyaW5nKGhhc2hJbmRleCArIDEpO1xufTtcblxudmFyIHB1c2hIYXNoUGF0aCA9IGZ1bmN0aW9uIHB1c2hIYXNoUGF0aChwYXRoKSB7XG4gIHJldHVybiB3aW5kb3cubG9jYXRpb24uaGFzaCA9IHBhdGg7XG59O1xuXG52YXIgcmVwbGFjZUhhc2hQYXRoID0gZnVuY3Rpb24gcmVwbGFjZUhhc2hQYXRoKHBhdGgpIHtcbiAgdmFyIGhhc2hJbmRleCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmLmluZGV4T2YoJyMnKTtcblxuICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZSh3aW5kb3cubG9jYXRpb24uaHJlZi5zbGljZSgwLCBoYXNoSW5kZXggPj0gMCA/IGhhc2hJbmRleCA6IDApICsgJyMnICsgcGF0aCk7XG59O1xuXG52YXIgY3JlYXRlSGFzaEhpc3RvcnkgPSBmdW5jdGlvbiBjcmVhdGVIYXNoSGlzdG9yeSgpIHtcbiAgdmFyIHByb3BzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcblxuICBpbnZhcmlhbnQoY2FuVXNlRE9NLCAnSGFzaCBoaXN0b3J5IG5lZWRzIGEgRE9NJyk7XG5cbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhbkdvV2l0aG91dFJlbG9hZCA9IHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCk7XG5cbiAgdmFyIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IHByb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB1bmRlZmluZWQgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMkaGFzaFR5cGUgPSBwcm9wcy5oYXNoVHlwZSxcbiAgICAgIGhhc2hUeXBlID0gX3Byb3BzJGhhc2hUeXBlID09PSB1bmRlZmluZWQgPyAnc2xhc2gnIDogX3Byb3BzJGhhc2hUeXBlO1xuXG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG5cbiAgdmFyIF9IYXNoUGF0aENvZGVycyRoYXNoVCA9IEhhc2hQYXRoQ29kZXJzW2hhc2hUeXBlXSxcbiAgICAgIGVuY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZW5jb2RlUGF0aCxcbiAgICAgIGRlY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZGVjb2RlUGF0aDtcblxuXG4gIHZhciBnZXRET01Mb2NhdGlvbiA9IGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKCkge1xuICAgIHZhciBwYXRoID0gZGVjb2RlUGF0aChnZXRIYXNoUGF0aCgpKTtcblxuICAgIHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJyk7XG5cbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcblxuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoKTtcbiAgfTtcblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIHZhciBzZXRTdGF0ZSA9IGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfTtcblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gIHZhciBpZ25vcmVQYXRoID0gbnVsbDtcblxuICB2YXIgaGFuZGxlSGFzaENoYW5nZSA9IGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG5cbiAgICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHtcbiAgICAgIC8vIEVuc3VyZSB3ZSBhbHdheXMgaGF2ZSBhIHByb3Blcmx5LWVuY29kZWQgaGFzaC5cbiAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBsb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gICAgICB2YXIgcHJldkxvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjtcblxuICAgICAgaWYgKCFmb3JjZU5leHRQb3AgJiYgbG9jYXRpb25zQXJlRXF1YWwocHJldkxvY2F0aW9uLCBsb2NhdGlvbikpIHJldHVybjsgLy8gQSBoYXNoY2hhbmdlIGRvZXNuJ3QgYWx3YXlzID09IGxvY2F0aW9uIGNoYW5nZS5cblxuICAgICAgaWYgKGlnbm9yZVBhdGggPT09IGNyZWF0ZVBhdGgobG9jYXRpb24pKSByZXR1cm47IC8vIElnbm9yZSB0aGlzIGNoYW5nZTsgd2UgYWxyZWFkeSBzZXRTdGF0ZSBpbiBwdXNoL3JlcGxhY2UuXG5cbiAgICAgIGlnbm9yZVBhdGggPSBudWxsO1xuXG4gICAgICBoYW5kbGVQb3AobG9jYXRpb24pO1xuICAgIH1cbiAgfTtcblxuICB2YXIgaGFuZGxlUG9wID0gZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG5cbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIHJldmVydFBvcCA9IGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XG5cbiAgICAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIHBhdGhzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIHBhdGhzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgodG9Mb2NhdGlvbikpO1xuXG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcblxuICAgIHZhciBmcm9tSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGZyb21Mb2NhdGlvbikpO1xuXG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG5cbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfTtcblxuICAvLyBFbnN1cmUgdGhlIGhhc2ggaXMgZW5jb2RlZCBwcm9wZXJseSBiZWZvcmUgZG9pbmcgYW55dGhpbmcgZWxzZS5cbiAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuXG4gIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcblxuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgdmFyIGFsbFBhdGhzID0gW2NyZWF0ZVBhdGgoaW5pdGlhbExvY2F0aW9uKV07XG5cbiAgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHJldHVybiAnIycgKyBlbmNvZGVQYXRoKGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbikpO1xuICB9O1xuXG4gIHZhciBwdXNoID0gZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFBVU0gsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHB1c2hIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG5cbiAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgICB2YXIgbmV4dFBhdGhzID0gYWxsUGF0aHMuc2xpY2UoMCwgcHJldkluZGV4ID09PSAtMSA/IDAgOiBwcmV2SW5kZXggKyAxKTtcblxuICAgICAgICBuZXh0UGF0aHMucHVzaChwYXRoKTtcbiAgICAgICAgYWxsUGF0aHMgPSBuZXh0UGF0aHM7XG5cbiAgICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2FybmluZyhmYWxzZSwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgUFVTSCB0aGUgc2FtZSBwYXRoOyBhIG5ldyBlbnRyeSB3aWxsIG5vdCBiZSBhZGRlZCB0byB0aGUgaGlzdG9yeSBzdGFjaycpO1xuXG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIHJlcGxhY2UgPSBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUkVQTEFDRSwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG5cbiAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxQYXRoc1twcmV2SW5kZXhdID0gcGF0aDtcblxuICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIHZhciBnbyA9IGZ1bmN0aW9uIGdvKG4pIHtcbiAgICB3YXJuaW5nKGNhbkdvV2l0aG91dFJlbG9hZCwgJ0hhc2ggaGlzdG9yeSBnbyhuKSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkIGluIHRoaXMgYnJvd3NlcicpO1xuXG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfTtcblxuICB2YXIgZ29CYWNrID0gZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIHJldHVybiBnbygtMSk7XG4gIH07XG5cbiAgdmFyIGdvRm9yd2FyZCA9IGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICByZXR1cm4gZ28oMSk7XG4gIH07XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIHZhciBjaGVja0RPTUxpc3RlbmVycyA9IGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxKSB7XG4gICAgICBhZGRFdmVudExpc3RlbmVyKHdpbmRvdywgSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHJlbW92ZUV2ZW50TGlzdGVuZXIod2luZG93LCBIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgdmFyIGJsb2NrID0gZnVuY3Rpb24gYmxvY2soKSB7XG4gICAgdmFyIHByb21wdCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogZmFsc2U7XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIGxpc3RlbiA9IGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuXG4gIHJldHVybiBoaXN0b3J5O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlSGFzaEhpc3Rvcnk7IiwidmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5pbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJztcbmltcG9ydCB7IGNyZWF0ZVBhdGggfSBmcm9tICcuL1BhdGhVdGlscyc7XG5pbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiB9IGZyb20gJy4vTG9jYXRpb25VdGlscyc7XG5pbXBvcnQgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIgZnJvbSAnLi9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlcic7XG5cbnZhciBjbGFtcCA9IGZ1bmN0aW9uIGNsYW1wKG4sIGxvd2VyQm91bmQsIHVwcGVyQm91bmQpIHtcbiAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KG4sIGxvd2VyQm91bmQpLCB1cHBlckJvdW5kKTtcbn07XG5cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgc3RvcmVzIGxvY2F0aW9ucyBpbiBtZW1vcnkuXG4gKi9cbnZhciBjcmVhdGVNZW1vcnlIaXN0b3J5ID0gZnVuY3Rpb24gY3JlYXRlTWVtb3J5SGlzdG9yeSgpIHtcbiAgdmFyIHByb3BzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgdmFyIGdldFVzZXJDb25maXJtYXRpb24gPSBwcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgX3Byb3BzJGluaXRpYWxFbnRyaWVzID0gcHJvcHMuaW5pdGlhbEVudHJpZXMsXG4gICAgICBpbml0aWFsRW50cmllcyA9IF9wcm9wcyRpbml0aWFsRW50cmllcyA9PT0gdW5kZWZpbmVkID8gWycvJ10gOiBfcHJvcHMkaW5pdGlhbEVudHJpZXMsXG4gICAgICBfcHJvcHMkaW5pdGlhbEluZGV4ID0gcHJvcHMuaW5pdGlhbEluZGV4LFxuICAgICAgaW5pdGlhbEluZGV4ID0gX3Byb3BzJGluaXRpYWxJbmRleCA9PT0gdW5kZWZpbmVkID8gMCA6IF9wcm9wcyRpbml0aWFsSW5kZXgsXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdW5kZWZpbmVkID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG5cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIHZhciBzZXRTdGF0ZSA9IGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9O1xuXG4gIHZhciBjcmVhdGVLZXkgPSBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9O1xuXG4gIHZhciBpbmRleCA9IGNsYW1wKGluaXRpYWxJbmRleCwgMCwgaW5pdGlhbEVudHJpZXMubGVuZ3RoIC0gMSk7XG4gIHZhciBlbnRyaWVzID0gaW5pdGlhbEVudHJpZXMubWFwKGZ1bmN0aW9uIChlbnRyeSkge1xuICAgIHJldHVybiB0eXBlb2YgZW50cnkgPT09ICdzdHJpbmcnID8gY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgY3JlYXRlS2V5KCkpIDogY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgZW50cnkua2V5IHx8IGNyZWF0ZUtleSgpKTtcbiAgfSk7XG5cbiAgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gY3JlYXRlUGF0aDtcblxuICB2YXIgcHVzaCA9IGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICB3YXJuaW5nKCEoKHR5cGVvZiBwYXRoID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihwYXRoKSkgPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgcHJldkluZGV4ID0gaGlzdG9yeS5pbmRleDtcbiAgICAgIHZhciBuZXh0SW5kZXggPSBwcmV2SW5kZXggKyAxO1xuXG4gICAgICB2YXIgbmV4dEVudHJpZXMgPSBoaXN0b3J5LmVudHJpZXMuc2xpY2UoMCk7XG4gICAgICBpZiAobmV4dEVudHJpZXMubGVuZ3RoID4gbmV4dEluZGV4KSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnNwbGljZShuZXh0SW5kZXgsIG5leHRFbnRyaWVzLmxlbmd0aCAtIG5leHRJbmRleCwgbG9jYXRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dEVudHJpZXMucHVzaChsb2NhdGlvbik7XG4gICAgICB9XG5cbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgaW5kZXg6IG5leHRJbmRleCxcbiAgICAgICAgZW50cmllczogbmV4dEVudHJpZXNcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIHZhciByZXBsYWNlID0gZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoISgodHlwZW9mIHBhdGggPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHBhdGgpKSA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIGhpc3RvcnkuZW50cmllc1toaXN0b3J5LmluZGV4XSA9IGxvY2F0aW9uO1xuXG4gICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIGdvID0gZnVuY3Rpb24gZ28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBjbGFtcChoaXN0b3J5LmluZGV4ICsgbiwgMCwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aCAtIDEpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgIHZhciBsb2NhdGlvbiA9IGhpc3RvcnkuZW50cmllc1tuZXh0SW5kZXhdO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmIChvaykge1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICAgIGluZGV4OiBuZXh0SW5kZXhcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBNaW1pYyB0aGUgYmVoYXZpb3Igb2YgRE9NIGhpc3RvcmllcyBieVxuICAgICAgICAvLyBjYXVzaW5nIGEgcmVuZGVyIGFmdGVyIGEgY2FuY2VsbGVkIFBPUC5cbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICB2YXIgZ29CYWNrID0gZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIHJldHVybiBnbygtMSk7XG4gIH07XG5cbiAgdmFyIGdvRm9yd2FyZCA9IGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICByZXR1cm4gZ28oMSk7XG4gIH07XG5cbiAgdmFyIGNhbkdvID0gZnVuY3Rpb24gY2FuR28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBoaXN0b3J5LmluZGV4ICsgbjtcbiAgICByZXR1cm4gbmV4dEluZGV4ID49IDAgJiYgbmV4dEluZGV4IDwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgfTtcblxuICB2YXIgYmxvY2sgPSBmdW5jdGlvbiBibG9jaygpIHtcbiAgICB2YXIgcHJvbXB0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBmYWxzZTtcbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG4gIH07XG5cbiAgdmFyIGxpc3RlbiA9IGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gIH07XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBlbnRyaWVzLmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBlbnRyaWVzW2luZGV4XSxcbiAgICBpbmRleDogaW5kZXgsXG4gICAgZW50cmllczogZW50cmllcyxcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgY2FuR286IGNhbkdvLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuXG4gIHJldHVybiBoaXN0b3J5O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlTWVtb3J5SGlzdG9yeTsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ3YXJuaW5nXCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJpbnZhcmlhbnRcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHV0dGluZyBoaXN0b3J5IG9uIGNvbnRleHQuXG4gKi9cblxudmFyIFJvdXRlciA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFJvdXRlcigpIHtcbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJvdXRlcik7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuc3RhdGUgPSB7XG4gICAgICBtYXRjaDogX3RoaXMuY29tcHV0ZU1hdGNoKF90aGlzLnByb3BzLmhpc3RvcnkubG9jYXRpb24ucGF0aG5hbWUpXG4gICAgfSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICBSb3V0ZXIucHJvdG90eXBlLmdldENoaWxkQ29udGV4dCA9IGZ1bmN0aW9uIGdldENoaWxkQ29udGV4dCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcm91dGVyOiBfZXh0ZW5kcyh7fSwgdGhpcy5jb250ZXh0LnJvdXRlciwge1xuICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICAgIHJvdXRlOiB7XG4gICAgICAgICAgbG9jYXRpb246IHRoaXMucHJvcHMuaGlzdG9yeS5sb2NhdGlvbixcbiAgICAgICAgICBtYXRjaDogdGhpcy5zdGF0ZS5tYXRjaFxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH07XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wdXRlTWF0Y2ggPSBmdW5jdGlvbiBjb21wdXRlTWF0Y2gocGF0aG5hbWUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcGF0aDogXCIvXCIsXG4gICAgICB1cmw6IFwiL1wiLFxuICAgICAgcGFyYW1zOiB7fSxcbiAgICAgIGlzRXhhY3Q6IHBhdGhuYW1lID09PSBcIi9cIlxuICAgIH07XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICB2YXIgX3Byb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgY2hpbGRyZW4gPSBfcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgIGhpc3RvcnkgPSBfcHJvcHMuaGlzdG9yeTtcblxuXG4gICAgaW52YXJpYW50KGNoaWxkcmVuID09IG51bGwgfHwgUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pID09PSAxLCBcIkEgPFJvdXRlcj4gbWF5IGhhdmUgb25seSBvbmUgY2hpbGQgZWxlbWVudFwiKTtcblxuICAgIC8vIERvIHRoaXMgaGVyZSBzbyB3ZSBjYW4gc2V0U3RhdGUgd2hlbiBhIDxSZWRpcmVjdD4gY2hhbmdlcyB0aGVcbiAgICAvLyBsb2NhdGlvbiBpbiBjb21wb25lbnRXaWxsTW91bnQuIFRoaXMgaGFwcGVucyBlLmcuIHdoZW4gZG9pbmdcbiAgICAvLyBzZXJ2ZXIgcmVuZGVyaW5nIHVzaW5nIGEgPFN0YXRpY1JvdXRlcj4uXG4gICAgdGhpcy51bmxpc3RlbiA9IGhpc3RvcnkubGlzdGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzMi5zZXRTdGF0ZSh7XG4gICAgICAgIG1hdGNoOiBfdGhpczIuY29tcHV0ZU1hdGNoKGhpc3RvcnkubG9jYXRpb24ucGF0aG5hbWUpXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgIHdhcm5pbmcodGhpcy5wcm9wcy5oaXN0b3J5ID09PSBuZXh0UHJvcHMuaGlzdG9yeSwgXCJZb3UgY2Fubm90IGNoYW5nZSA8Um91dGVyIGhpc3Rvcnk+XCIpO1xuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB0aGlzLnVubGlzdGVuKCk7XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIGNoaWxkcmVuID0gdGhpcy5wcm9wcy5jaGlsZHJlbjtcblxuICAgIHJldHVybiBjaGlsZHJlbiA/IFJlYWN0LkNoaWxkcmVuLm9ubHkoY2hpbGRyZW4pIDogbnVsbDtcbiAgfTtcblxuICByZXR1cm4gUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5Sb3V0ZXIucHJvcFR5cGVzID0ge1xuICBoaXN0b3J5OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZVxufTtcblJvdXRlci5jb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLm9iamVjdFxufTtcblJvdXRlci5jaGlsZENvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgUm91dGVyOyIsIi8vIFdyaXR0ZW4gaW4gdGhpcyByb3VuZCBhYm91dCB3YXkgZm9yIGJhYmVsLXRyYW5zZm9ybS1pbXBvcnRzXG5pbXBvcnQgUm91dGVyIGZyb20gXCJyZWFjdC1yb3V0ZXIvZXMvUm91dGVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IFJvdXRlcjsiLCJmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ3YXJuaW5nXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSBhcyBjcmVhdGVIaXN0b3J5IH0gZnJvbSBcImhpc3RvcnlcIjtcbmltcG9ydCBSb3V0ZXIgZnJvbSBcIi4vUm91dGVyXCI7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIEhUTUw1IGhpc3RvcnkuXG4gKi9cblxudmFyIEJyb3dzZXJSb3V0ZXIgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoQnJvd3NlclJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gQnJvd3NlclJvdXRlcigpIHtcbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEJyb3dzZXJSb3V0ZXIpO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpcyksIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVIaXN0b3J5KF90aGlzLnByb3BzKSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICBCcm93c2VyUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxCcm93c2VyUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpO1xuICB9O1xuXG4gIEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHsgaGlzdG9yeTogdGhpcy5oaXN0b3J5LCBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlbiB9KTtcbiAgfTtcblxuICByZXR1cm4gQnJvd3NlclJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuQnJvd3NlclJvdXRlci5wcm9wVHlwZXMgPSB7XG4gIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBmb3JjZVJlZnJlc2g6IFByb3BUeXBlcy5ib29sLFxuICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAga2V5TGVuZ3RoOiBQcm9wVHlwZXMubnVtYmVyLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGVcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgQnJvd3NlclJvdXRlcjsiLCJpbXBvcnQgcGF0aFRvUmVnZXhwIGZyb20gXCJwYXRoLXRvLXJlZ2V4cFwiO1xuXG52YXIgcGF0dGVybkNhY2hlID0ge307XG52YXIgY2FjaGVMaW1pdCA9IDEwMDAwO1xudmFyIGNhY2hlQ291bnQgPSAwO1xuXG52YXIgY29tcGlsZVBhdGggPSBmdW5jdGlvbiBjb21waWxlUGF0aChwYXR0ZXJuLCBvcHRpb25zKSB7XG4gIHZhciBjYWNoZUtleSA9IFwiXCIgKyBvcHRpb25zLmVuZCArIG9wdGlvbnMuc3RyaWN0ICsgb3B0aW9ucy5zZW5zaXRpdmU7XG4gIHZhciBjYWNoZSA9IHBhdHRlcm5DYWNoZVtjYWNoZUtleV0gfHwgKHBhdHRlcm5DYWNoZVtjYWNoZUtleV0gPSB7fSk7XG5cbiAgaWYgKGNhY2hlW3BhdHRlcm5dKSByZXR1cm4gY2FjaGVbcGF0dGVybl07XG5cbiAgdmFyIGtleXMgPSBbXTtcbiAgdmFyIHJlID0gcGF0aFRvUmVnZXhwKHBhdHRlcm4sIGtleXMsIG9wdGlvbnMpO1xuICB2YXIgY29tcGlsZWRQYXR0ZXJuID0geyByZTogcmUsIGtleXM6IGtleXMgfTtcblxuICBpZiAoY2FjaGVDb3VudCA8IGNhY2hlTGltaXQpIHtcbiAgICBjYWNoZVtwYXR0ZXJuXSA9IGNvbXBpbGVkUGF0dGVybjtcbiAgICBjYWNoZUNvdW50Kys7XG4gIH1cblxuICByZXR1cm4gY29tcGlsZWRQYXR0ZXJuO1xufTtcblxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIFVSTCBwYXRobmFtZSB0byBhIHBhdGggcGF0dGVybi5cbiAqL1xudmFyIG1hdGNoUGF0aCA9IGZ1bmN0aW9uIG1hdGNoUGF0aChwYXRobmFtZSkge1xuICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG4gIHZhciBwYXJlbnQgPSBhcmd1bWVudHNbMl07XG5cbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSBcInN0cmluZ1wiKSBvcHRpb25zID0geyBwYXRoOiBvcHRpb25zIH07XG5cbiAgdmFyIF9vcHRpb25zID0gb3B0aW9ucyxcbiAgICAgIHBhdGggPSBfb3B0aW9ucy5wYXRoLFxuICAgICAgX29wdGlvbnMkZXhhY3QgPSBfb3B0aW9ucy5leGFjdCxcbiAgICAgIGV4YWN0ID0gX29wdGlvbnMkZXhhY3QgPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogX29wdGlvbnMkZXhhY3QsXG4gICAgICBfb3B0aW9ucyRzdHJpY3QgPSBfb3B0aW9ucy5zdHJpY3QsXG4gICAgICBzdHJpY3QgPSBfb3B0aW9ucyRzdHJpY3QgPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogX29wdGlvbnMkc3RyaWN0LFxuICAgICAgX29wdGlvbnMkc2Vuc2l0aXZlID0gX29wdGlvbnMuc2Vuc2l0aXZlLFxuICAgICAgc2Vuc2l0aXZlID0gX29wdGlvbnMkc2Vuc2l0aXZlID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IF9vcHRpb25zJHNlbnNpdGl2ZTtcblxuXG4gIGlmIChwYXRoID09IG51bGwpIHJldHVybiBwYXJlbnQ7XG5cbiAgdmFyIF9jb21waWxlUGF0aCA9IGNvbXBpbGVQYXRoKHBhdGgsIHsgZW5kOiBleGFjdCwgc3RyaWN0OiBzdHJpY3QsIHNlbnNpdGl2ZTogc2Vuc2l0aXZlIH0pLFxuICAgICAgcmUgPSBfY29tcGlsZVBhdGgucmUsXG4gICAgICBrZXlzID0gX2NvbXBpbGVQYXRoLmtleXM7XG5cbiAgdmFyIG1hdGNoID0gcmUuZXhlYyhwYXRobmFtZSk7XG5cbiAgaWYgKCFtYXRjaCkgcmV0dXJuIG51bGw7XG5cbiAgdmFyIHVybCA9IG1hdGNoWzBdLFxuICAgICAgdmFsdWVzID0gbWF0Y2guc2xpY2UoMSk7XG5cbiAgdmFyIGlzRXhhY3QgPSBwYXRobmFtZSA9PT0gdXJsO1xuXG4gIGlmIChleGFjdCAmJiAhaXNFeGFjdCkgcmV0dXJuIG51bGw7XG5cbiAgcmV0dXJuIHtcbiAgICBwYXRoOiBwYXRoLCAvLyB0aGUgcGF0aCBwYXR0ZXJuIHVzZWQgdG8gbWF0Y2hcbiAgICB1cmw6IHBhdGggPT09IFwiL1wiICYmIHVybCA9PT0gXCJcIiA/IFwiL1wiIDogdXJsLCAvLyB0aGUgbWF0Y2hlZCBwb3J0aW9uIG9mIHRoZSBVUkxcbiAgICBpc0V4YWN0OiBpc0V4YWN0LCAvLyB3aGV0aGVyIG9yIG5vdCB3ZSBtYXRjaGVkIGV4YWN0bHlcbiAgICBwYXJhbXM6IGtleXMucmVkdWNlKGZ1bmN0aW9uIChtZW1vLCBrZXksIGluZGV4KSB7XG4gICAgICBtZW1vW2tleS5uYW1lXSA9IHZhbHVlc1tpbmRleF07XG4gICAgICByZXR1cm4gbWVtbztcbiAgICB9LCB7fSlcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IG1hdGNoUGF0aDsiLCJmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ3YXJuaW5nXCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJpbnZhcmlhbnRcIjtcbmltcG9ydCBtYXRjaFBhdGggZnJvbSBcIi4vbWF0Y2hQYXRoXCI7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHJlbmRlcmluZyB0aGUgZmlyc3QgPFJvdXRlPiB0aGF0IG1hdGNoZXMuXG4gKi9cblxudmFyIFN3aXRjaCA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhTd2l0Y2gsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN3aXRjaCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU3dpdGNoKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9XG5cbiAgU3dpdGNoLnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgaW52YXJpYW50KHRoaXMuY29udGV4dC5yb3V0ZXIsIFwiWW91IHNob3VsZCBub3QgdXNlIDxTd2l0Y2g+IG91dHNpZGUgYSA8Um91dGVyPlwiKTtcbiAgfTtcblxuICBTd2l0Y2gucHJvdG90eXBlLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgIHdhcm5pbmcoIShuZXh0UHJvcHMubG9jYXRpb24gJiYgIXRoaXMucHJvcHMubG9jYXRpb24pLCAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKTtcblxuICAgIHdhcm5pbmcoISghbmV4dFByb3BzLmxvY2F0aW9uICYmIHRoaXMucHJvcHMubG9jYXRpb24pLCAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpO1xuICB9O1xuXG4gIFN3aXRjaC5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciByb3V0ZSA9IHRoaXMuY29udGV4dC5yb3V0ZXIucm91dGU7XG4gICAgdmFyIGNoaWxkcmVuID0gdGhpcy5wcm9wcy5jaGlsZHJlbjtcblxuICAgIHZhciBsb2NhdGlvbiA9IHRoaXMucHJvcHMubG9jYXRpb24gfHwgcm91dGUubG9jYXRpb247XG5cbiAgICB2YXIgbWF0Y2ggPSB2b2lkIDAsXG4gICAgICAgIGNoaWxkID0gdm9pZCAwO1xuICAgIFJlYWN0LkNoaWxkcmVuLmZvckVhY2goY2hpbGRyZW4sIGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICBpZiAobWF0Y2ggPT0gbnVsbCAmJiBSZWFjdC5pc1ZhbGlkRWxlbWVudChlbGVtZW50KSkge1xuICAgICAgICB2YXIgX2VsZW1lbnQkcHJvcHMgPSBlbGVtZW50LnByb3BzLFxuICAgICAgICAgICAgcGF0aFByb3AgPSBfZWxlbWVudCRwcm9wcy5wYXRoLFxuICAgICAgICAgICAgZXhhY3QgPSBfZWxlbWVudCRwcm9wcy5leGFjdCxcbiAgICAgICAgICAgIHN0cmljdCA9IF9lbGVtZW50JHByb3BzLnN0cmljdCxcbiAgICAgICAgICAgIHNlbnNpdGl2ZSA9IF9lbGVtZW50JHByb3BzLnNlbnNpdGl2ZSxcbiAgICAgICAgICAgIGZyb20gPSBfZWxlbWVudCRwcm9wcy5mcm9tO1xuXG4gICAgICAgIHZhciBwYXRoID0gcGF0aFByb3AgfHwgZnJvbTtcblxuICAgICAgICBjaGlsZCA9IGVsZW1lbnQ7XG4gICAgICAgIG1hdGNoID0gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCB7IHBhdGg6IHBhdGgsIGV4YWN0OiBleGFjdCwgc3RyaWN0OiBzdHJpY3QsIHNlbnNpdGl2ZTogc2Vuc2l0aXZlIH0sIHJvdXRlLm1hdGNoKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBtYXRjaCA/IFJlYWN0LmNsb25lRWxlbWVudChjaGlsZCwgeyBsb2NhdGlvbjogbG9jYXRpb24sIGNvbXB1dGVkTWF0Y2g6IG1hdGNoIH0pIDogbnVsbDtcbiAgfTtcblxuICByZXR1cm4gU3dpdGNoO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5Td2l0Y2guY29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgcm91dGU6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZFxuICB9KS5pc1JlcXVpcmVkXG59O1xuU3dpdGNoLnByb3BUeXBlcyA9IHtcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdFxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBTd2l0Y2g7IiwiLy8gV3JpdHRlbiBpbiB0aGlzIHJvdW5kIGFib3V0IHdheSBmb3IgYmFiZWwtdHJhbnNmb3JtLWltcG9ydHNcbmltcG9ydCBTd2l0Y2ggZnJvbSBcInJlYWN0LXJvdXRlci9lcy9Td2l0Y2hcIjtcblxuZXhwb3J0IGRlZmF1bHQgU3dpdGNoOyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IHdhcm5pbmcgZnJvbSBcIndhcm5pbmdcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcImludmFyaWFudFwiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IG1hdGNoUGF0aCBmcm9tIFwiLi9tYXRjaFBhdGhcIjtcblxudmFyIGlzRW1wdHlDaGlsZHJlbiA9IGZ1bmN0aW9uIGlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikge1xuICByZXR1cm4gUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pID09PSAwO1xufTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBzaW5nbGUgcGF0aCBhbmQgcmVuZGVyaW5nLlxuICovXG5cbnZhciBSb3V0ZSA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhSb3V0ZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUm91dGUoKSB7XG4gICAgdmFyIF90ZW1wLCBfdGhpcywgX3JldDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSb3V0ZSk7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuc3RhdGUgPSB7XG4gICAgICBtYXRjaDogX3RoaXMuY29tcHV0ZU1hdGNoKF90aGlzLnByb3BzLCBfdGhpcy5jb250ZXh0LnJvdXRlcilcbiAgICB9LCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIFJvdXRlLnByb3RvdHlwZS5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJvdXRlcjogX2V4dGVuZHMoe30sIHRoaXMuY29udGV4dC5yb3V0ZXIsIHtcbiAgICAgICAgcm91dGU6IHtcbiAgICAgICAgICBsb2NhdGlvbjogdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCB0aGlzLmNvbnRleHQucm91dGVyLnJvdXRlLmxvY2F0aW9uLFxuICAgICAgICAgIG1hdGNoOiB0aGlzLnN0YXRlLm1hdGNoXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfTtcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcHV0ZU1hdGNoID0gZnVuY3Rpb24gY29tcHV0ZU1hdGNoKF9yZWYsIHJvdXRlcikge1xuICAgIHZhciBjb21wdXRlZE1hdGNoID0gX3JlZi5jb21wdXRlZE1hdGNoLFxuICAgICAgICBsb2NhdGlvbiA9IF9yZWYubG9jYXRpb24sXG4gICAgICAgIHBhdGggPSBfcmVmLnBhdGgsXG4gICAgICAgIHN0cmljdCA9IF9yZWYuc3RyaWN0LFxuICAgICAgICBleGFjdCA9IF9yZWYuZXhhY3QsXG4gICAgICAgIHNlbnNpdGl2ZSA9IF9yZWYuc2Vuc2l0aXZlO1xuXG4gICAgaWYgKGNvbXB1dGVkTWF0Y2gpIHJldHVybiBjb21wdXRlZE1hdGNoOyAvLyA8U3dpdGNoPiBhbHJlYWR5IGNvbXB1dGVkIHRoZSBtYXRjaCBmb3IgdXNcblxuICAgIGludmFyaWFudChyb3V0ZXIsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZT4gb3Igd2l0aFJvdXRlcigpIG91dHNpZGUgYSA8Um91dGVyPlwiKTtcblxuICAgIHZhciByb3V0ZSA9IHJvdXRlci5yb3V0ZTtcblxuICAgIHZhciBwYXRobmFtZSA9IChsb2NhdGlvbiB8fCByb3V0ZS5sb2NhdGlvbikucGF0aG5hbWU7XG5cbiAgICByZXR1cm4gbWF0Y2hQYXRoKHBhdGhuYW1lLCB7IHBhdGg6IHBhdGgsIHN0cmljdDogc3RyaWN0LCBleGFjdDogZXhhY3QsIHNlbnNpdGl2ZTogc2Vuc2l0aXZlIH0sIHJvdXRlLm1hdGNoKTtcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIHdhcm5pbmcoISh0aGlzLnByb3BzLmNvbXBvbmVudCAmJiB0aGlzLnByb3BzLnJlbmRlciksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgcmVuZGVyPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpO1xuXG4gICAgd2FybmluZyghKHRoaXMucHJvcHMuY29tcG9uZW50ICYmIHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgY2hpbGRyZW4+IHdpbGwgYmUgaWdub3JlZFwiKTtcblxuICAgIHdhcm5pbmcoISh0aGlzLnByb3BzLnJlbmRlciAmJiB0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgcmVuZGVyPiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIGNoaWxkcmVuPiB3aWxsIGJlIGlnbm9yZWRcIik7XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcywgbmV4dENvbnRleHQpIHtcbiAgICB3YXJuaW5nKCEobmV4dFByb3BzLmxvY2F0aW9uICYmICF0aGlzLnByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKTtcblxuICAgIHdhcm5pbmcoISghbmV4dFByb3BzLmxvY2F0aW9uICYmIHRoaXMucHJvcHMubG9jYXRpb24pLCAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJyk7XG5cbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIG1hdGNoOiB0aGlzLmNvbXB1dGVNYXRjaChuZXh0UHJvcHMsIG5leHRDb250ZXh0LnJvdXRlcilcbiAgICB9KTtcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBtYXRjaCA9IHRoaXMuc3RhdGUubWF0Y2g7XG4gICAgdmFyIF9wcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGNoaWxkcmVuID0gX3Byb3BzLmNoaWxkcmVuLFxuICAgICAgICBjb21wb25lbnQgPSBfcHJvcHMuY29tcG9uZW50LFxuICAgICAgICByZW5kZXIgPSBfcHJvcHMucmVuZGVyO1xuICAgIHZhciBfY29udGV4dCRyb3V0ZXIgPSB0aGlzLmNvbnRleHQucm91dGVyLFxuICAgICAgICBoaXN0b3J5ID0gX2NvbnRleHQkcm91dGVyLmhpc3RvcnksXG4gICAgICAgIHJvdXRlID0gX2NvbnRleHQkcm91dGVyLnJvdXRlLFxuICAgICAgICBzdGF0aWNDb250ZXh0ID0gX2NvbnRleHQkcm91dGVyLnN0YXRpY0NvbnRleHQ7XG5cbiAgICB2YXIgbG9jYXRpb24gPSB0aGlzLnByb3BzLmxvY2F0aW9uIHx8IHJvdXRlLmxvY2F0aW9uO1xuICAgIHZhciBwcm9wcyA9IHsgbWF0Y2g6IG1hdGNoLCBsb2NhdGlvbjogbG9jYXRpb24sIGhpc3Rvcnk6IGhpc3RvcnksIHN0YXRpY0NvbnRleHQ6IHN0YXRpY0NvbnRleHQgfTtcblxuICAgIGlmIChjb21wb25lbnQpIHJldHVybiBtYXRjaCA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcykgOiBudWxsO1xuXG4gICAgaWYgKHJlbmRlcikgcmV0dXJuIG1hdGNoID8gcmVuZGVyKHByb3BzKSA6IG51bGw7XG5cbiAgICBpZiAodHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiBjaGlsZHJlbihwcm9wcyk7XG5cbiAgICBpZiAoY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikpIHJldHVybiBSZWFjdC5DaGlsZHJlbi5vbmx5KGNoaWxkcmVuKTtcblxuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBSb3V0ZTtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuUm91dGUucHJvcFR5cGVzID0ge1xuICBjb21wdXRlZE1hdGNoOiBQcm9wVHlwZXMub2JqZWN0LCAvLyBwcml2YXRlLCBmcm9tIDxTd2l0Y2g+XG4gIHBhdGg6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGV4YWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgc3RyaWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgc2Vuc2l0aXZlOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29tcG9uZW50OiBQcm9wVHlwZXMuZnVuYyxcbiAgcmVuZGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMubm9kZV0pLFxuICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdFxufTtcblJvdXRlLmNvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGhpc3Rvcnk6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICByb3V0ZTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIHN0YXRpY0NvbnRleHQ6IFByb3BUeXBlcy5vYmplY3RcbiAgfSlcbn07XG5Sb3V0ZS5jaGlsZENvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgUm91dGU7IiwiLy8gV3JpdHRlbiBpbiB0aGlzIHJvdW5kIGFib3V0IHdheSBmb3IgYmFiZWwtdHJhbnNmb3JtLWltcG9ydHNcbmltcG9ydCBSb3V0ZSBmcm9tIFwicmVhY3Qtcm91dGVyL2VzL1JvdXRlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IFJvdXRlOyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhvYmosIGtleXMpIHsgdmFyIHRhcmdldCA9IHt9OyBmb3IgKHZhciBpIGluIG9iaikgeyBpZiAoa2V5cy5pbmRleE9mKGkpID49IDApIGNvbnRpbnVlOyBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGkpKSBjb250aW51ZTsgdGFyZ2V0W2ldID0gb2JqW2ldOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJpbnZhcmlhbnRcIjtcbmltcG9ydCB7IGNyZWF0ZUxvY2F0aW9uIH0gZnJvbSBcImhpc3RvcnlcIjtcblxudmFyIGlzTW9kaWZpZWRFdmVudCA9IGZ1bmN0aW9uIGlzTW9kaWZpZWRFdmVudChldmVudCkge1xuICByZXR1cm4gISEoZXZlbnQubWV0YUtleSB8fCBldmVudC5hbHRLZXkgfHwgZXZlbnQuY3RybEtleSB8fCBldmVudC5zaGlmdEtleSk7XG59O1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgYSBoaXN0b3J5LWF3YXJlIDxhPi5cbiAqL1xuXG52YXIgTGluayA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhMaW5rLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBMaW5rKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTGluayk7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuaGFuZGxlQ2xpY2sgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGlmIChfdGhpcy5wcm9wcy5vbkNsaWNrKSBfdGhpcy5wcm9wcy5vbkNsaWNrKGV2ZW50KTtcblxuICAgICAgaWYgKCFldmVudC5kZWZhdWx0UHJldmVudGVkICYmIC8vIG9uQ2xpY2sgcHJldmVudGVkIGRlZmF1bHRcbiAgICAgIGV2ZW50LmJ1dHRvbiA9PT0gMCAmJiAvLyBpZ25vcmUgZXZlcnl0aGluZyBidXQgbGVmdCBjbGlja3NcbiAgICAgICFfdGhpcy5wcm9wcy50YXJnZXQgJiYgLy8gbGV0IGJyb3dzZXIgaGFuZGxlIFwidGFyZ2V0PV9ibGFua1wiIGV0Yy5cbiAgICAgICFpc01vZGlmaWVkRXZlbnQoZXZlbnQpIC8vIGlnbm9yZSBjbGlja3Mgd2l0aCBtb2RpZmllciBrZXlzXG4gICAgICApIHtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgICAgdmFyIGhpc3RvcnkgPSBfdGhpcy5jb250ZXh0LnJvdXRlci5oaXN0b3J5O1xuICAgICAgICAgIHZhciBfdGhpcyRwcm9wcyA9IF90aGlzLnByb3BzLFxuICAgICAgICAgICAgICByZXBsYWNlID0gX3RoaXMkcHJvcHMucmVwbGFjZSxcbiAgICAgICAgICAgICAgdG8gPSBfdGhpcyRwcm9wcy50bztcblxuXG4gICAgICAgICAgaWYgKHJlcGxhY2UpIHtcbiAgICAgICAgICAgIGhpc3RvcnkucmVwbGFjZSh0byk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGhpc3RvcnkucHVzaCh0byk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICBMaW5rLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF9wcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIHJlcGxhY2UgPSBfcHJvcHMucmVwbGFjZSxcbiAgICAgICAgdG8gPSBfcHJvcHMudG8sXG4gICAgICAgIGlubmVyUmVmID0gX3Byb3BzLmlubmVyUmVmLFxuICAgICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcHJvcHMsIFtcInJlcGxhY2VcIiwgXCJ0b1wiLCBcImlubmVyUmVmXCJdKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuXG4gICAgaW52YXJpYW50KHRoaXMuY29udGV4dC5yb3V0ZXIsIFwiWW91IHNob3VsZCBub3QgdXNlIDxMaW5rPiBvdXRzaWRlIGEgPFJvdXRlcj5cIik7XG5cbiAgICBpbnZhcmlhbnQodG8gIT09IHVuZGVmaW5lZCwgJ1lvdSBtdXN0IHNwZWNpZnkgdGhlIFwidG9cIiBwcm9wZXJ0eScpO1xuXG4gICAgdmFyIGhpc3RvcnkgPSB0aGlzLmNvbnRleHQucm91dGVyLmhpc3Rvcnk7XG5cbiAgICB2YXIgbG9jYXRpb24gPSB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBjcmVhdGVMb2NhdGlvbih0bywgbnVsbCwgbnVsbCwgaGlzdG9yeS5sb2NhdGlvbikgOiB0bztcblxuICAgIHZhciBocmVmID0gaGlzdG9yeS5jcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwgX2V4dGVuZHMoe30sIHByb3BzLCB7IG9uQ2xpY2s6IHRoaXMuaGFuZGxlQ2xpY2ssIGhyZWY6IGhyZWYsIHJlZjogaW5uZXJSZWYgfSkpO1xuICB9O1xuXG4gIHJldHVybiBMaW5rO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5MaW5rLnByb3BUeXBlcyA9IHtcbiAgb25DbGljazogUHJvcFR5cGVzLmZ1bmMsXG4gIHRhcmdldDogUHJvcFR5cGVzLnN0cmluZyxcbiAgcmVwbGFjZTogUHJvcFR5cGVzLmJvb2wsXG4gIHRvOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSkuaXNSZXF1aXJlZCxcbiAgaW5uZXJSZWY6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jXSlcbn07XG5MaW5rLmRlZmF1bHRQcm9wcyA9IHtcbiAgcmVwbGFjZTogZmFsc2Vcbn07XG5MaW5rLmNvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGhpc3Rvcnk6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICBwdXNoOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgICAgcmVwbGFjZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICAgIGNyZWF0ZUhyZWY6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbiAgICB9KS5pc1JlcXVpcmVkXG4gIH0pLmlzUmVxdWlyZWRcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgTGluazsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG52YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhvYmosIGtleXMpIHsgdmFyIHRhcmdldCA9IHt9OyBmb3IgKHZhciBpIGluIG9iaikgeyBpZiAoa2V5cy5pbmRleE9mKGkpID49IDApIGNvbnRpbnVlOyBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGkpKSBjb250aW51ZTsgdGFyZ2V0W2ldID0gb2JqW2ldOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IFJvdXRlIGZyb20gXCIuL1JvdXRlXCI7XG5pbXBvcnQgTGluayBmcm9tIFwiLi9MaW5rXCI7XG5cbi8qKlxuICogQSA8TGluaz4gd3JhcHBlciB0aGF0IGtub3dzIGlmIGl0J3MgXCJhY3RpdmVcIiBvciBub3QuXG4gKi9cbnZhciBOYXZMaW5rID0gZnVuY3Rpb24gTmF2TGluayhfcmVmKSB7XG4gIHZhciB0byA9IF9yZWYudG8sXG4gICAgICBleGFjdCA9IF9yZWYuZXhhY3QsXG4gICAgICBzdHJpY3QgPSBfcmVmLnN0cmljdCxcbiAgICAgIGxvY2F0aW9uID0gX3JlZi5sb2NhdGlvbixcbiAgICAgIGFjdGl2ZUNsYXNzTmFtZSA9IF9yZWYuYWN0aXZlQ2xhc3NOYW1lLFxuICAgICAgY2xhc3NOYW1lID0gX3JlZi5jbGFzc05hbWUsXG4gICAgICBhY3RpdmVTdHlsZSA9IF9yZWYuYWN0aXZlU3R5bGUsXG4gICAgICBzdHlsZSA9IF9yZWYuc3R5bGUsXG4gICAgICBnZXRJc0FjdGl2ZSA9IF9yZWYuaXNBY3RpdmUsXG4gICAgICBhcmlhQ3VycmVudCA9IF9yZWZbXCJhcmlhLWN1cnJlbnRcIl0sXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYsIFtcInRvXCIsIFwiZXhhY3RcIiwgXCJzdHJpY3RcIiwgXCJsb2NhdGlvblwiLCBcImFjdGl2ZUNsYXNzTmFtZVwiLCBcImNsYXNzTmFtZVwiLCBcImFjdGl2ZVN0eWxlXCIsIFwic3R5bGVcIiwgXCJpc0FjdGl2ZVwiLCBcImFyaWEtY3VycmVudFwiXSk7XG5cbiAgdmFyIHBhdGggPSAodHlwZW9mIHRvID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2YodG8pKSA9PT0gXCJvYmplY3RcIiA/IHRvLnBhdGhuYW1lIDogdG87XG5cbiAgLy8gUmVnZXggdGFrZW4gZnJvbTogaHR0cHM6Ly9naXRodWIuY29tL3BpbGxhcmpzL3BhdGgtdG8tcmVnZXhwL2Jsb2IvbWFzdGVyL2luZGV4LmpzI0wyMDJcbiAgdmFyIGVzY2FwZWRQYXRoID0gcGF0aCAmJiBwYXRoLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18L1xcXFxdKS9nLCBcIlxcXFwkMVwiKTtcblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwge1xuICAgIHBhdGg6IGVzY2FwZWRQYXRoLFxuICAgIGV4YWN0OiBleGFjdCxcbiAgICBzdHJpY3Q6IHN0cmljdCxcbiAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgY2hpbGRyZW46IGZ1bmN0aW9uIGNoaWxkcmVuKF9yZWYyKSB7XG4gICAgICB2YXIgbG9jYXRpb24gPSBfcmVmMi5sb2NhdGlvbixcbiAgICAgICAgICBtYXRjaCA9IF9yZWYyLm1hdGNoO1xuXG4gICAgICB2YXIgaXNBY3RpdmUgPSAhIShnZXRJc0FjdGl2ZSA/IGdldElzQWN0aXZlKG1hdGNoLCBsb2NhdGlvbikgOiBtYXRjaCk7XG5cbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIF9leHRlbmRzKHtcbiAgICAgICAgdG86IHRvLFxuICAgICAgICBjbGFzc05hbWU6IGlzQWN0aXZlID8gW2NsYXNzTmFtZSwgYWN0aXZlQ2xhc3NOYW1lXS5maWx0ZXIoZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgfSkuam9pbihcIiBcIikgOiBjbGFzc05hbWUsXG4gICAgICAgIHN0eWxlOiBpc0FjdGl2ZSA/IF9leHRlbmRzKHt9LCBzdHlsZSwgYWN0aXZlU3R5bGUpIDogc3R5bGUsXG4gICAgICAgIFwiYXJpYS1jdXJyZW50XCI6IGlzQWN0aXZlICYmIGFyaWFDdXJyZW50IHx8IG51bGxcbiAgICAgIH0sIHJlc3QpKTtcbiAgICB9XG4gIH0pO1xufTtcblxuTmF2TGluay5wcm9wVHlwZXMgPSB7XG4gIHRvOiBMaW5rLnByb3BUeXBlcy50byxcbiAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sLFxuICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgYWN0aXZlQ2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGFjdGl2ZVN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICBzdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgaXNBY3RpdmU6IFByb3BUeXBlcy5mdW5jLFxuICBcImFyaWEtY3VycmVudFwiOiBQcm9wVHlwZXMub25lT2YoW1wicGFnZVwiLCBcInN0ZXBcIiwgXCJsb2NhdGlvblwiLCBcImRhdGVcIiwgXCJ0aW1lXCIsIFwidHJ1ZVwiXSlcbn07XG5cbk5hdkxpbmsuZGVmYXVsdFByb3BzID0ge1xuICBhY3RpdmVDbGFzc05hbWU6IFwiYWN0aXZlXCIsXG4gIFwiYXJpYS1jdXJyZW50XCI6IFwicGFnZVwiXG59O1xuXG5leHBvcnQgZGVmYXVsdCBOYXZMaW5rOyIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IE5hdkxpbmsgfSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiO1xuXG5jb25zdCBOb3RGb3VuZFBhZ2UgPSAoKSA9PiAoXG4gIDxkaXY+XG4gICAgNDA0IC0gPE5hdkxpbmsgdG89XCIvXCI+R28gaG9tZTwvTmF2TGluaz5cbiAgPC9kaXY+XG4pO1xuXG5leHBvcnQgZGVmYXVsdCBOb3RGb3VuZFBhZ2U7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBOYXZMaW5rIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIjtcblxuZXhwb3J0IGNvbnN0IEhlYWRlciA9ICgpID0+IChcbiAgPGhlYWRlciBjbGFzc05hbWU9XCJoZWFkZXJcIj5cbiAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRlbnQtY29udGFpbmVyXCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlYWRlcl9fY29udGVudFwiPlxuICAgICAgICA8aDEgY2xhc3NOYW1lPVwiaGVhZGVyX190aXRsZVwiPkhlYXRvbiBGbHkgU2hvcDwvaDE+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPHVsPlxuICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICA8TmF2TGluayB0bz1cIi9sYW5kaW5nXCIgYWN0aXZlQ2xhc3NOYW1lPVwiaXMtYWN0aXZlXCI+XG4gICAgICAgICAgICAgICAgTGFuZGluZ1xuICAgICAgICAgICAgICA8L05hdkxpbms+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICA8TmF2TGluayB0bz1cIi9zaG9wXCIgYWN0aXZlQ2xhc3NOYW1lPVwiaXMtYWN0aXZlXCI+XG4gICAgICAgICAgICAgICAgRmx5IFNob3BcbiAgICAgICAgICAgICAgPC9OYXZMaW5rPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgPE5hdkxpbmsgdG89XCIvaG90ZWxcIiBhY3RpdmVDbGFzc05hbWU9XCJpcy1hY3RpdmVcIj5cbiAgICAgICAgICAgICAgICBIb3RlbFxuICAgICAgICAgICAgICA8L05hdkxpbms+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICA8TmF2TGluayB0bz1cIi9kaW5pbmdcIiBhY3RpdmVDbGFzc05hbWU9XCJpcy1hY3RpdmVcIj5cbiAgICAgICAgICAgICAgICBEaW5pbmdcbiAgICAgICAgICAgICAgPC9OYXZMaW5rPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgPE5hdkxpbmsgdG89XCIvbW91c2V5XCIgYWN0aXZlQ2xhc3NOYW1lPVwiaXMtYWN0aXZlXCI+XG4gICAgICAgICAgICAgICAgTW91c2UgVHJhcFxuICAgICAgICAgICAgICA8L05hdkxpbms+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvaGVhZGVyPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgSGVhZGVyO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgTmF2TGluayB9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XG5cbmNvbnN0IExhbmRpbmdQYWdlID0gKCkgPT4gKFxuICA8ZGl2IGNsYXNzTmFtZT1cImJveC1sYXlvdXRcIj5cbiAgICA8ZGl2IGNsYXNzTmFtZT1cImJveC1sYXlvdXRfX2JveFwiPlxuICAgICAgPE5hdkxpbmsgY2xhc3NOYW1lPVwiaGVhZGVyX190aXRsZVwiIHRvPVwiL1wiIC8+XG4gICAgICA8aDEgY2xhc3NOYW1lPVwiYm94LWxheW91dF9fdGl0bGVcIj5GaXNoIE9uLjwvaDE+XG4gICAgICA8cD5Sb2FyaW5nIEZvcmsgVmFsbGV5IGZseSBmaXNoaW5nIHNpbmNlIDE5ODguPC9wPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbik7XG5cbmV4cG9ydCBkZWZhdWx0IExhbmRpbmdQYWdlO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgTmF2TGluayB9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XG5cbmNvbnN0IEhvdGVsUGFnZSA9ICgpID0+IChcbiAgPGRpdiBjbGFzc05hbWU9XCJib3gtbGF5b3V0X19ob3RlbHJvb21cIj5cbiAgICA8ZGl2IGNsYXNzTmFtZT1cImJveC1sYXlvdXRfX2JveFwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250ZW50LWNvbnRhaW5lclwiPlxuICAgICAgICA8TmF2TGluayBjbGFzc05hbWU9XCJoZWFkZXJfX3RpdGxlXCIgdG89XCIvXCIgLz5cbiAgICAgICAgPGgxPlRoZSBMb2RnZTwvaDE+XG4gICAgICAgIDxwPiBNb2Rlcm4gQ290dGFnZSBzdHlsZSByb29tcy48L3A+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG4pO1xuXG5leHBvcnQgZGVmYXVsdCBIb3RlbFBhZ2U7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBOYXZMaW5rIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIjtcblxuY29uc3QgRGluaW5nUGFnZSA9ICgpID0+IChcbiAgPGRpdiBjbGFzc05hbWU9XCJib3gtbGF5b3V0X19hYm91dFwiPlxuICAgIDxkaXYgY2xhc3NOYW1lPVwiYm94LWxheW91dF9fYm94XCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRlbnQtY29udGFpbmVyXCI+XG4gICAgICAgIDxOYXZMaW5rIGNsYXNzTmFtZT1cImhlYWRlcl9fdGl0bGVcIiB0bz1cIi9cIiAvPlxuICAgICAgICA8aDE+bGUgQ2FmZSBkZXMgR3JpbGxlPC9oMT5cbiAgICAgICAgPHA+Q2hlZiBCYXJhc3NvIGZyb20gYnJlYWZhc3QgdG8gTGFzdCBuaWdodCBkaW5pbmcuPC9wPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgRGluaW5nUGFnZTtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IE5hdkxpbmsgfSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiO1xuXG5jb25zdCBTaG9wUGFnZSA9ICgpID0+IChcbiAgPGRpdiBjbGFzc05hbWU9XCJib3gtbGF5b3V0X19zaG9wXCI+XG4gICAgPGRpdiBjbGFzc05hbWU9XCJib3gtbGF5b3V0X19ib3hcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGVudC1jb250YWluZXJcIj5cbiAgICAgICAgPE5hdkxpbmsgY2xhc3NOYW1lPVwiaGVhZGVyX190aXRsZVwiIHRvPVwiL1wiIC8+XG4gICAgICAgIDxoMT5UaGUgRmx5IFNob3A8L2gxPlxuICAgICAgICA8cD5UaGUgQXJ0IG9mIEZseSBGaXNoaW5nPC9wPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgU2hvcFBhZ2U7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBOYXZMaW5rIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIjtcblxuZXhwb3J0IGNvbnN0IEZvb3RlciA9ICgpID0+IChcbiAgPGZvb3RlciBjbGFzc05hbWU9XCJmb290ZXJcIj5cbiAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRlbnQtY29udGFpbmVyXCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvb3Rlcl9fY29udGVudFwiPlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgPE5hdkxpbmsgdG89XCIvYWJvdXRcIiBhY3RpdmVDbGFzc05hbWU9XCJpcy1hY3RpdmVcIj5cbiAgICAgICAgICAgICAgICBBQk9VVCBVU1xuICAgICAgICAgICAgICA8L05hdkxpbms+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICA8TmF2TGluayB0bz1cIi9jb250YWN0XCIgYWN0aXZlQ2xhc3NOYW1lPVwiaXMtYWN0aXZlXCI+XG4gICAgICAgICAgICAgICAgQ09OVEFDVFxuICAgICAgICAgICAgICA8L05hdkxpbms+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvZm9vdGVyPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgRm9vdGVyO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgTmF2TGluayB9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XG5cbmNvbnN0IENvbnRhY3RQYWdlID0gKCkgPT4gKFxuICA8ZGl2IGNsYXNzTmFtZT1cImJveC1sYXlvdXRfX2JveFwiPlxuICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGVudC1jb250YWluZXJcIj5cbiAgICAgIDxOYXZMaW5rIGNsYXNzTmFtZT1cImZvb3Rlcl9fdGl0bGVcIiB0bz1cIi9cIiAvPlxuICAgICAgPGgxPkFzcGVuLCBDb2xvcmFkbyA8L2gxPlxuICAgICAgPHAgLz5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG4pO1xuXG5leHBvcnQgZGVmYXVsdCBDb250YWN0UGFnZTtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IE5hdkxpbmsgfSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiO1xuXG5jb25zdCBBYm91dFBhZ2UgPSAoKSA9PiAoXG4gIDxkaXY+XG4gICAgPE5hdkxpbmsgY2xhc3NOYW1lPVwiZm9vdGVyX190aXRsZVwiIHRvPVwiL1wiIC8+XG4gICAgPGgxPkNhbGwgdXMgPC9oMT5cbiAgPC9kaXY+XG4pO1xuXG5leHBvcnQgZGVmYXVsdCBBYm91dFBhZ2U7XG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmNsYXNzIE1vdXNlIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGUgPSB7IHg6IDAsIHk6IDAgfTtcblxuICBoYW5kbGVNb3VzZU1vdmUgPSBldmVudCA9PiB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICB4OiBldmVudC5jbGllbnRYLFxuICAgICAgeTogZXZlbnQuY2xpZW50WVxuICAgIH0pO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBvbk1vdXNlTW92ZT17dGhpcy5oYW5kbGVNb3VzZU1vdmV9PlxuICAgICAgICB7dGhpcy5wcm9wcy5jaGlsZHJlbih0aGlzLnN0YXRlKX1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTW91c2V5UGFnZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCBzdHlsZXMgPSB7XG4gICAgICBwb3NpdGlvbjogXCJmaXhlZFwiLFxuICAgICAgYm9yZGVyOiBcIjEwcHggc29saWQgIzczQUQyMVwiLFxuICAgICAgaGVpZ2h0OiBcIjUwJVwiLFxuICAgICAgd2lkdGg6IFwiNzUlXCIsXG4gICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCIsXG4gICAgICBjb2xvcjogXCJibGFja1wiLFxuICAgICAgYmFja2dyb3VuZDogYHVybChcIi9pbWFnZXMvY2hlZXNlLXdlZGdlLWljb24ucG5nXCIpIG5vLXJlcGVhdCBjZW50ZXJgLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiBcIiMzNDRkZDFcIlxuICAgIH07XG4gICAgcmV0dXJuIChcbiAgICAgIDxNb3VzZT5cbiAgICAgICAge21vdXNlID0+IChcbiAgICAgICAgICA8dWwgY2xhc3NOYW1lPVwiYm94LWxheW91dF9fbW91c2V5Ym94XCI+XG4gICAgICAgICAgICA8ZGl2IHN0eWxlPXtzdHlsZXN9PlxuICAgICAgICAgICAgICBNb3VzZSBQb3NpdGlvbjogKHttb3VzZS54fSwge21vdXNlLnl9KVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC91bD5cbiAgICAgICAgKX1cbiAgICAgIDwvTW91c2U+XG4gICAgKTtcbiAgfVxufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgQnJvd3NlclJvdXRlciwgUm91dGUsIFN3aXRjaCwgTGluaywgTmF2TGluayB9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XG5pbXBvcnQgTm90Rm91bmRQYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL05vdEZvdW5kUGFnZVwiO1xuaW1wb3J0IEhlYWRlciBmcm9tIFwiLi4vY29tcG9uZW50cy9IZWFkZXJcIjtcbmltcG9ydCBMYW5kaW5nUGFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9MYW5kaW5nUGFnZVwiO1xuaW1wb3J0IEhvdGVsUGFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Ib3RlbFBhZ2VcIjtcbmltcG9ydCBEaW5pbmdQYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL0RpbmluZ1BhZ2VcIjtcbmltcG9ydCBTaG9wUGFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9TaG9wUGFnZVwiO1xuaW1wb3J0IEZvb3RlciBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb290ZXJcIjtcbmltcG9ydCBDb250YWN0UGFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Db250YWN0UGFnZVwiO1xuaW1wb3J0IEFib3V0UGFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9BYm91dFBhZ2VcIjtcbmltcG9ydCBNb3VzZXlQYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL01vdXNleVBhZ2VcIjtcblxuY29uc3QgQXBwUm91dGVyID0gKCkgPT4gKFxuICA8QnJvd3NlclJvdXRlcj5cbiAgICA8ZGl2PlxuICAgICAgPEhlYWRlciAvPlxuICAgICAgPFN3aXRjaD5cbiAgICAgICAgPFJvdXRlIHBhdGg9XCIvXCIgY29tcG9uZW50PXtMYW5kaW5nUGFnZX0gZXhhY3Q9e3RydWV9IC8+XG4gICAgICAgIDxSb3V0ZSBwYXRoPVwiL2xhbmRpbmdcIiBjb21wb25lbnQ9e0xhbmRpbmdQYWdlfSAvPlxuICAgICAgICA8Um91dGUgcGF0aD1cIi9ob3RlbFwiIGNvbXBvbmVudD17SG90ZWxQYWdlfSAvPlxuICAgICAgICA8Um91dGUgcGF0aD1cIi9kaW5pbmdcIiBjb21wb25lbnQ9e0RpbmluZ1BhZ2V9IC8+XG4gICAgICAgIDxSb3V0ZSBwYXRoPVwiL3Nob3BcIiBjb21wb25lbnQ9e1Nob3BQYWdlfSAvPlxuICAgICAgICA8Um91dGUgcGF0aD1cIi9hYm91dFwiIGNvbXBvbmVudD17QWJvdXRQYWdlfSAvPlxuICAgICAgICA8Um91dGUgcGF0aD1cIi9jb250YWN0XCIgY29tcG9uZW50PXtDb250YWN0UGFnZX0gLz5cbiAgICAgICAgPFJvdXRlIHBhdGg9XCIvbW91c2V5XCIgY29tcG9uZW50PXtNb3VzZXlQYWdlfSAvPlxuICAgICAgICA8Um91dGUgY29tcG9uZW50PXtOb3RGb3VuZFBhZ2V9IC8+XG4gICAgICA8L1N3aXRjaD5cbiAgICAgIDxGb290ZXIgLz5cbiAgICA8L2Rpdj5cbiAgPC9Ccm93c2VyUm91dGVyPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQXBwUm91dGVyO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gXCJyZWFjdC1kb21cIjtcbmltcG9ydCBBcHBSb3V0ZXIgZnJvbSBcIi4vcm91dGVycy9BcHBSb3V0ZXJcIjtcbmltcG9ydCBcIm5vcm1hbGl6ZS5jc3Mvbm9ybWFsaXplLmNzc1wiO1xuaW1wb3J0IFwiLi9zdHlsZXMvc3R5bGVzLnNjc3NcIjtcblxuUmVhY3RET00ucmVuZGVyKDxBcHBSb3V0ZXIgLz4sIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYXBwXCIpKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=